{"version":3,"sources":["webpack://Game/webpack/bootstrap","webpack://Game/./src/flood.js","webpack://Game/./src/util/marchingSquares.js","webpack://Game/./src/util/simplify.js","webpack://Game/./src/WorldMap.js","webpack://Game/./src/pixi-tilemap.js","webpack://Game/./src/workers/map.worker.js","webpack://Game/./src/Delaunay.js","webpack://Game/./src/SceneGraph.js","webpack://Game/./src/drawTiles.js","webpack://Game/./src/scenes/WorldScene.js","webpack://Game/./src/generateAsync.js","webpack://Game/./src/util/drawDigit.js","webpack://Game/./src/index.js","webpack://Game/./src/scenes/StartScene.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","3","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","flood","map","x","y","width","off","size","tiles","things","_RIVER","WATER","RIVER","Error","createPolygon","id","cells","startX","startY","ctx","x0","x2","y0","y2","cellCase","points","fromLeft","fromAbove","height","condition","outside","line","JSON","stringify","perpendicularDistance","px","py","lineStartX","lineStartY","lineEndX","lineEndY","dx","dy","mag","Math","sqrt","pvx","pvy","pvDot","ax","ay","simplify","epsilon","repeatFirst","arguments","undefined","out","simplifyRec","start","end","dMax","index","endX","endY","TAU","PI","N2","N3","N4","RELATIVE_CITY_RADIUS","MIN_CITY_RATING","clamp","v","WATER_LINE","BEACH_LINE","WOODS_LINE","MOUNTAIN_LINE","SAND","GRASS","DIRT","ROCK","WOODS","WOODS2","ICE","ICE2","DOT","BLOCKED","LARGE_TREE","LARGE_TREE_2","BOULDER","BOULDER_3","HOUSE","calcWeightSum","array","sum","tileVillageRating","spawnTable","table","sTile","normalizeSpawnTable","_defineProperty","_normalizeSpawnTable","spawnForBlock","mapOffset","tile","sizeMask","spawns","thing","random","next","pos","spawn","prev2Offset","prevOffset","nextOffset","next2Offset","next3Offset","nCoords","determineTile","climate","coords","heightCoords","heightFn","nx","ny","nz","nw","n3","noise4D","n4","createBase","seed","updateProgress","percent","WorldMap","report","climateStep","ca","sin","directions","climbUp","probe","currentHigh","currentX","currentY","improved","createSprings","probes","probeCount","randomProbes","walkingStart","firstWalker","filtered","amount","multis","xOff","nextInt","yOff","_objectSpread","concat","jitter","uniqueProbes","unique","other","removeDuplicates","flow","currentLow","Infinity","currentTile","currentDirection","read","_map$heightCoords","dir","drawRivers","springs","flowingStart","firstFlower","min","planCities","rivers","longRivers","sort","a","b","mean","mid","findMean","filter","findLongRivers","spring","idx","len","radius","mouthX","mouthY","_findNonRiverTile","minDistance","distance","currX","currY","findNonRiverTile","radiusSquared","xDelta","centerX","centerY","_longRivers$j","round","putThing","isPointInPolygon","poly","prevX","prevY","inPolygon","SIMPLIFICATION_EPSILON","planRoads","cities","polygons","now","Uint8Array","polygon","console","log","marchingSquares","reduce","count","simplified","vertices","arrayOfArrays","flatten","triangles","Delaunay","triangulate","walkable","filterWalkable","_this","this","_classCallCheck","Prando","noise","SimplexNoise","fineMask","factor","obj","Date","getTime","afterBase","afterRivers","afterCities","cos","n0","n1","imageData","createImageData","tileOffset","dataOffset","z","w","_","_seed","PIXI","pixi_tilemap","CanvasTileRenderer","renderer","tileAnim","dontUseTransform","cr","CanvasRenderer","registerPlugin","extendStatics","__extends","setPrototypeOf","__proto__","Array","__","constructor","CompositeRectTileLayer","_super","zIndex","bitmaps","texPerChild","modificationMarker","shadowColor","Float32Array","_globalMat","initialize","updateTransform","displayObjectUpdateTransform","Constant","boundCountPerBuffer","maxTextures","setBitmaps","len1","children","len2","ceil","TEXTURES","layer","RectTileLayer","compositeParent","offsetX","boundSize","offsetY","addChild","clear","addRect","textureIndex","u","tileWidth","tileHeight","childIndex","textureId","textures","addFrame","texture_","animX","animY","texture","ind","Texture","from","tex","child","baseTexture","frame","renderCanvas","visible","worldAlpha","renderable","plugins","tilemap","wt","worldTransform","context","setTransform","tx","resolution","ty","layers","renderCanvasCore","render","plugin","shader","getShader","batch","setObjectRenderer","uniforms","projTransMatrix","globalUniforms","projectionMatrix","copyTo","append","animationFrame","renderWebGLCore","isModified","anim","clearModify","Container","bufferSize","use32bitIndex","SCALE_MODE","SCALE_MODES","LINEAR","DO_CLEAR","GraphicsLayer","transform","Matrix","IDENTITY","graphics","globalAlpha","Graphics","MultiTextureResource","options","_clearBuffer","baseTex","boundSprites","dirties","bounds","spr","Sprite","position","setTexture","update","dirtyId","upload","glTexture","gl","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","texImage2D","target","format","type","doClear","res","resource","valid","source","texSubImage2D","resources","Resource","pointsBuf","hasAnim","vbId","vb","vbBuffer","vbArray","vbInts","found","textureList","pb","fillStyle","x1","y1","h","drawImage","fillRect","destroyVb","destroy","rectsCount","bindTextures","createVb","checkIndexBuffer","vertexBuf","getBuffer","vertPerQuad","vs","stride","byteLength","bk","ArrayBuffer","Uint32Array","arr","sz","shiftU","shiftV","geometry","draw","DRAW_MODES","TRIANGLES","rectShaderFrag","rectShaderVert","TilemapShader","shaderVert","shaderFrag","Program","uSamplers","uSamplerSize","shaderGenerator","fillSamplers","Shader","RectTileShader","generateFragmentSrc","RectTileGeom","vertSize","lastTimeAccess","buf","Buffer","addAttribute","Geometry","TileRenderer","sn","indexBuffer","ibLen","texLoc","texResources","rectShader","initBounds","BaseTexture","scaleMode","wrapMode","WRAP_MODES","CLAMP","bindTexturesWithoutRT","samplerSize","gltsUsed","geom","addIndex","totalIndices","utils","createIndicesForQuads","ObjectRenderer","Renderer","ZLayer","_lastAnimationFrame","_previousLayers","cacheIfDirty","modified","canvasBuffer","tempRender","_tempRender","document","createElement","view","rootContext","_layerWidth","_layerHeight","_hackRenderer","clearRect","layerTransform","sampleValues","fragmentSrc","replace","generateSampleSrc","src","Worker","EPSILON","circumcircle","k","xc","yc","m1","m2","mx1","mx2","my1","my2","x3","y3","fabsy1y2","abs","fabsy2y3","dedup","edges","indices","superTri","open","closed","diff","dmax","xmid","ymid","xmin","Number","POSITIVE_INFINITY","ymin","xmax","NEGATIVE_INFINITY","ymax","max","supertriangle","contains","offsetA","offsetB","offsetC","uvOut","isNull","Scene","input","parent","checkClass","_ref","cls","classes","layerMask","SceneGraph","graph","current","onEnter","onExit","delta","ticker","SceneClass","THING_TEXTURES","drawTiles","posX","posY","drawPlayer","tileLayer","atlas","halfWidth","halfHeight","widthInTiles","heightInTiles","xOffset","yOffset","screenX","screenY","mapX","mapY","yPosInTiles","numTextures","tileMask","t8","t4","t1","t2","frames","pivot","getThing","_atlas$frames$_textur","HOUSE_X","HOUSE_Y","WorldScene","WorldScene_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","counter","storage","worker","MapWorker","addEventListener","event","ticket","entry","resolve","onProgress","deserialize","payload","digits","drawDigit","sx","sy","digit","write","StartScene","StartScene_classCallCheck","StartScene_possibleConstructorReturn","StartScene_getPrototypeOf","text","String","charCodeAt","Promise","postMessage","then","newMap","goto","onload","shared","add","load","setup","START_X","START_Y","ACCELERATION","SPEED_LIMIT","app","container","scale","controls","moveLeftRight","moveUpDown","action","meta","loader","curr","determineScale","innerWidth","innerHeight","backgroundColor","devicePixelRatio","body","appendChild","TextureCache","stage","screen","assign","sceneGraph","_ctx$controls","sign","handleMovement","ev","keyCode","getCurrentLayerMask","resize"],"mappings":"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","file":"bundle-main-17a0f2763bb0ccddc8ca.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t3: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpGame\"] = window[\"webpackJsonpGame\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([37,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { RIVER, _RIVER, WATER } from \"./WorldMap\";\n\nexport default function flood(map, x, y, width)\n{\n    const { size, tiles, things} = map;\n\n    let off;\n    //console.log(\"FLOOD\", width)\n\n    switch(width)\n    {\n        case 0:\n        case 1:\n            things[( y - 1) * size + x - 1] = _RIVER;\n            things[( y - 1) * size + x] = _RIVER;\n            things[( y - 1) * size +  x + 1] = _RIVER;\n            things[y * size + x - 1] = _RIVER;\n            off = y * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[y * size +  x + 1] = _RIVER;\n            things[( y + 1) * size + x - 1] = _RIVER;\n            things[( y + 1) * size + x] = _RIVER;\n            things[( y + 1) * size +  x + 1] = _RIVER;\n            break;\n        case 2:\n            things[( y - 1) * size + x - 1] = _RIVER;\n            things[( y - 1) * size + x] = _RIVER;\n            things[( y - 1) * size +  x + 1] = _RIVER;\n            things[( y - 1) * size +  x + 2] = _RIVER;\n            things[y * size + x - 1] = _RIVER;\n            off = y * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[y * size +  x + 2] = _RIVER;\n            things[( y + 1) * size + x - 1] = _RIVER;\n            things[( y + 1) * size + x] = _RIVER;\n            things[( y + 1) * size +  x + 1] = _RIVER;\n            things[( y + 1) * size +  x + 2] = _RIVER;\n            break;\n        case 3:\n            things[( y - 3) * size + x] = _RIVER;\n            things[( y - 3) * size +  x + 1] = _RIVER;\n            things[( y - 2) * size + x - 1] = _RIVER;\n            things[( y - 2) * size + x] = _RIVER;\n            things[( y - 2) * size +  x + 1] = _RIVER;\n            things[( y - 2) * size +  x + 2] = _RIVER;\n            things[( y - 1) * size + x - 2] = _RIVER;\n            things[( y - 1) * size + x - 1] = _RIVER;\n            off = ( y - 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 1) * size +  x + 2] = _RIVER;\n            things[( y - 1) * size +  x + 3] = _RIVER;\n            things[y * size + x - 2] = _RIVER;\n            things[y * size + x - 1] = _RIVER;\n            off = y * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[y * size +  x + 2] = _RIVER;\n            things[y * size +  x + 3] = _RIVER;\n            things[( y + 1) * size + x - 1] = _RIVER;\n            things[( y + 1) * size + x] = _RIVER;\n            things[( y + 1) * size +  x + 1] = _RIVER;\n            things[( y + 1) * size +  x + 2] = _RIVER;\n            things[( y + 2) * size + x] = _RIVER;\n            things[( y + 2) * size +  x + 1] = _RIVER;\n            break;\n        case 4:\n            things[( y - 3) * size + x - 1] = _RIVER;\n            things[( y - 3) * size + x] = _RIVER;\n            things[( y - 3) * size +  x + 1] = _RIVER;\n            things[( y - 2) * size + x - 2] = _RIVER;\n            things[( y - 2) * size + x - 1] = _RIVER;\n            things[( y - 2) * size + x] = _RIVER;\n            things[( y - 2) * size +  x + 1] = _RIVER;\n            things[( y - 2) * size +  x + 2] = _RIVER;\n            things[( y - 1) * size + x - 3] = _RIVER;\n            things[( y - 1) * size + x - 2] = _RIVER;\n            off = ( y - 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 1) * size +  x + 2] = _RIVER;\n            things[( y - 1) * size +  x + 3] = _RIVER;\n            things[y * size + x - 3] = _RIVER;\n            things[y * size + x - 2] = _RIVER;\n            off = y * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[y * size +  x + 2] = _RIVER;\n            things[y * size +  x + 3] = _RIVER;\n            things[( y + 1) * size + x - 2] = _RIVER;\n            things[( y + 1) * size + x - 1] = _RIVER;\n            things[( y + 1) * size + x] = _RIVER;\n            things[( y + 1) * size +  x + 1] = _RIVER;\n            things[( y + 1) * size +  x + 2] = _RIVER;\n            things[( y + 2) * size + x - 1] = _RIVER;\n            things[( y + 2) * size + x] = _RIVER;\n            things[( y + 2) * size +  x + 1] = _RIVER;\n            break;\n        case 5:\n            things[( y - 3) * size + x - 1] = _RIVER;\n            things[( y - 3) * size + x] = _RIVER;\n            things[( y - 3) * size +  x + 1] = _RIVER;\n            things[( y - 2) * size + x - 2] = _RIVER;\n            things[( y - 2) * size + x - 1] = _RIVER;\n            things[( y - 2) * size + x] = _RIVER;\n            things[( y - 2) * size +  x + 1] = _RIVER;\n            things[( y - 2) * size +  x + 2] = _RIVER;\n            things[( y - 1) * size + x - 3] = _RIVER;\n            things[( y - 1) * size + x - 2] = _RIVER;\n            off = ( y - 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 1) * size +  x + 2] = _RIVER;\n            things[( y - 1) * size +  x + 3] = _RIVER;\n            things[y * size + x - 3] = _RIVER;\n            things[y * size + x - 2] = _RIVER;\n            off = y * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[y * size +  x + 2] = _RIVER;\n            things[y * size +  x + 3] = _RIVER;\n            things[( y + 1) * size + x - 3] = _RIVER;\n            things[( y + 1) * size + x - 2] = _RIVER;\n            off = ( y + 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 1) * size +  x + 2] = _RIVER;\n            things[( y + 1) * size +  x + 3] = _RIVER;\n            things[( y + 2) * size + x - 2] = _RIVER;\n            things[( y + 2) * size + x - 1] = _RIVER;\n            things[( y + 2) * size + x] = _RIVER;\n            things[( y + 2) * size +  x + 1] = _RIVER;\n            things[( y + 2) * size +  x + 2] = _RIVER;\n            things[( y + 3) * size + x - 1] = _RIVER;\n            things[( y + 3) * size + x] = _RIVER;\n            things[( y + 3) * size +  x + 1] = _RIVER;\n            break;\n        case 6:\n            things[( y - 4) * size + x - 1] = _RIVER;\n            things[( y - 4) * size + x] = _RIVER;\n            things[( y - 4) * size +  x + 1] = _RIVER;\n            things[( y - 3) * size + x - 2] = _RIVER;\n            things[( y - 3) * size + x - 1] = _RIVER;\n            things[( y - 3) * size + x] = _RIVER;\n            things[( y - 3) * size +  x + 1] = _RIVER;\n            things[( y - 3) * size +  x + 2] = _RIVER;\n            things[( y - 2) * size + x - 3] = _RIVER;\n            things[( y - 2) * size + x - 2] = _RIVER;\n            off = ( y - 2) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 2) * size +  x + 2] = _RIVER;\n            things[( y - 2) * size +  x + 3] = _RIVER;\n            things[( y - 1) * size + x - 4] = _RIVER;\n            things[( y - 1) * size + x - 3] = _RIVER;\n            off = ( y - 1) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 1) * size +  x + 3] = _RIVER;\n            things[( y - 1) * size +  x + 4] = _RIVER;\n            things[y * size + x - 4] = _RIVER;\n            things[y * size + x - 3] = _RIVER;\n            off = y * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[y * size +  x + 3] = _RIVER;\n            things[y * size +  x + 4] = _RIVER;\n            things[( y + 1) * size + x - 4] = _RIVER;\n            things[( y + 1) * size + x - 3] = _RIVER;\n            off = ( y + 1) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 1) * size +  x + 3] = _RIVER;\n            things[( y + 1) * size +  x + 4] = _RIVER;\n            things[( y + 2) * size + x - 3] = _RIVER;\n            things[( y + 2) * size + x - 2] = _RIVER;\n            off = ( y + 2) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 2) * size +  x + 2] = _RIVER;\n            things[( y + 2) * size +  x + 3] = _RIVER;\n            things[( y + 3) * size + x - 2] = _RIVER;\n            things[( y + 3) * size + x - 1] = _RIVER;\n            things[( y + 3) * size + x] = _RIVER;\n            things[( y + 3) * size +  x + 1] = _RIVER;\n            things[( y + 3) * size +  x + 2] = _RIVER;\n            things[( y + 4) * size + x - 1] = _RIVER;\n            things[( y + 4) * size + x] = _RIVER;\n            things[( y + 4) * size +  x + 1] = _RIVER;\n            break;\n        case 7:\n            things[( y - 5) * size + x - 1] = _RIVER;\n            things[( y - 5) * size + x] = _RIVER;\n            things[( y - 5) * size +  x + 1] = _RIVER;\n            things[( y - 4) * size + x - 2] = _RIVER;\n            things[( y - 4) * size + x - 1] = _RIVER;\n            things[( y - 4) * size + x] = _RIVER;\n            things[( y - 4) * size +  x + 1] = _RIVER;\n            things[( y - 4) * size +  x + 2] = _RIVER;\n            things[( y - 3) * size + x - 3] = _RIVER;\n            things[( y - 3) * size + x - 2] = _RIVER;\n            off = ( y - 3) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 3) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 3) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 3) * size +  x + 2] = _RIVER;\n            things[( y - 3) * size +  x + 3] = _RIVER;\n            things[( y - 2) * size + x - 4] = _RIVER;\n            things[( y - 2) * size + x - 3] = _RIVER;\n            off = ( y - 2) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 2) * size +  x + 3] = _RIVER;\n            things[( y - 2) * size +  x + 4] = _RIVER;\n            things[( y - 1) * size + x - 5] = _RIVER;\n            things[( y - 1) * size + x - 4] = _RIVER;\n            off = ( y - 1) * size + x - 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 1) * size +  x + 4] = _RIVER;\n            things[( y - 1) * size +  x + 5] = _RIVER;\n            things[y * size + x - 5] = _RIVER;\n            things[y * size + x - 4] = _RIVER;\n            off = y * size + x - 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[y * size +  x + 4] = _RIVER;\n            things[y * size +  x + 5] = _RIVER;\n            things[( y + 1) * size + x - 5] = _RIVER;\n            things[( y + 1) * size + x - 4] = _RIVER;\n            off = ( y + 1) * size + x - 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 1) * size +  x + 4] = _RIVER;\n            things[( y + 1) * size +  x + 5] = _RIVER;\n            things[( y + 2) * size + x - 4] = _RIVER;\n            things[( y + 2) * size + x - 3] = _RIVER;\n            off = ( y + 2) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 2) * size +  x + 3] = _RIVER;\n            things[( y + 2) * size +  x + 4] = _RIVER;\n            things[( y + 3) * size + x - 3] = _RIVER;\n            things[( y + 3) * size + x - 2] = _RIVER;\n            off = ( y + 3) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 3) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 3) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 3) * size +  x + 2] = _RIVER;\n            things[( y + 3) * size +  x + 3] = _RIVER;\n            things[( y + 4) * size + x - 2] = _RIVER;\n            things[( y + 4) * size + x - 1] = _RIVER;\n            things[( y + 4) * size + x] = _RIVER;\n            things[( y + 4) * size +  x + 1] = _RIVER;\n            things[( y + 4) * size +  x + 2] = _RIVER;\n            things[( y + 5) * size + x - 1] = _RIVER;\n            things[( y + 5) * size + x] = _RIVER;\n            things[( y + 5) * size +  x + 1] = _RIVER;\n            break;\n        case 8:\n            things[( y - 6) * size + x - 1] = _RIVER;\n            things[( y - 6) * size + x] = _RIVER;\n            things[( y - 6) * size +  x + 1] = _RIVER;\n            things[( y - 5) * size + x - 3] = _RIVER;\n            things[( y - 5) * size + x - 2] = _RIVER;\n            things[( y - 5) * size + x - 1] = _RIVER;\n            things[( y - 5) * size + x] = _RIVER;\n            things[( y - 5) * size +  x + 1] = _RIVER;\n            things[( y - 5) * size +  x + 2] = _RIVER;\n            things[( y - 5) * size +  x + 3] = _RIVER;\n            things[( y - 4) * size + x - 4] = _RIVER;\n            things[( y - 4) * size + x - 3] = _RIVER;\n            things[( y - 4) * size + x - 2] = _RIVER;\n            off = ( y - 4) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 4) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 4) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 4) * size +  x + 2] = _RIVER;\n            things[( y - 4) * size +  x + 3] = _RIVER;\n            things[( y - 4) * size +  x + 4] = _RIVER;\n            things[( y - 3) * size + x - 5] = _RIVER;\n            things[( y - 3) * size + x - 4] = _RIVER;\n            things[( y - 3) * size + x - 3] = _RIVER;\n            off = ( y - 3) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 3) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 3) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 3) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 3) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 3) * size +  x + 3] = _RIVER;\n            things[( y - 3) * size +  x + 4] = _RIVER;\n            things[( y - 3) * size +  x + 5] = _RIVER;\n            things[( y - 2) * size + x - 5] = _RIVER;\n            things[( y - 2) * size + x - 4] = _RIVER;\n            off = ( y - 2) * size + x - 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 2) * size +  x + 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 2) * size +  x + 4] = _RIVER;\n            things[( y - 2) * size +  x + 5] = _RIVER;\n            things[( y - 1) * size + x - 6] = _RIVER;\n            things[( y - 1) * size + x - 5] = _RIVER;\n            off = ( y - 1) * size + x - 4; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x - 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y - 1) * size +  x + 4; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y - 1) * size +  x + 5] = _RIVER;\n            things[( y - 1) * size +  x + 6] = _RIVER;\n            things[y * size + x - 6] = _RIVER;\n            things[y * size + x - 5] = _RIVER;\n            off = y * size + x - 4; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x - 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = y * size +  x + 4; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[y * size +  x + 5] = _RIVER;\n            things[y * size +  x + 6] = _RIVER;\n            things[( y + 1) * size + x - 6] = _RIVER;\n            things[( y + 1) * size + x - 5] = _RIVER;\n            off = ( y + 1) * size + x - 4; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x - 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 1) * size +  x + 4; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 1) * size +  x + 5] = _RIVER;\n            things[( y + 1) * size +  x + 6] = _RIVER;\n            things[( y + 2) * size + x - 5] = _RIVER;\n            things[( y + 2) * size + x - 4] = _RIVER;\n            off = ( y + 2) * size + x - 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 2) * size +  x + 3; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 2) * size +  x + 4] = _RIVER;\n            things[( y + 2) * size +  x + 5] = _RIVER;\n            things[( y + 3) * size + x - 5] = _RIVER;\n            things[( y + 3) * size + x - 4] = _RIVER;\n            things[( y + 3) * size + x - 3] = _RIVER;\n            off = ( y + 3) * size + x - 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 3) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 3) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 3) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 3) * size +  x + 2; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 3) * size +  x + 3] = _RIVER;\n            things[( y + 3) * size +  x + 4] = _RIVER;\n            things[( y + 3) * size +  x + 5] = _RIVER;\n            things[( y + 4) * size + x - 4] = _RIVER;\n            things[( y + 4) * size + x - 3] = _RIVER;\n            things[( y + 4) * size + x - 2] = _RIVER;\n            off = ( y + 4) * size + x - 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 4) * size + x; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            off = ( y + 4) * size +  x + 1; if (tiles[off] !== WATER) {  tiles[off] = RIVER; things[off] = _RIVER; }\n            things[( y + 4) * size +  x + 2] = _RIVER;\n            things[( y + 4) * size +  x + 3] = _RIVER;\n            things[( y + 4) * size +  x + 4] = _RIVER;\n            things[( y + 5) * size + x - 3] = _RIVER;\n            things[( y + 5) * size + x - 2] = _RIVER;\n            things[( y + 5) * size + x - 1] = _RIVER;\n            things[( y + 5) * size + x] = _RIVER;\n            things[( y + 5) * size +  x + 1] = _RIVER;\n            things[( y + 5) * size +  x + 2] = _RIVER;\n            things[( y + 5) * size +  x + 3] = _RIVER;\n            things[( y + 6) * size + x - 1] = _RIVER;\n            things[( y + 6) * size + x] = _RIVER;\n            things[( y + 6) * size +  x + 1] = _RIVER;\n            break;\n\n        default:\n            throw new Error(\"Unhandled width: \" + width)\n\n    }\n}\n","import now from \"performance-now\"\n\nfunction createPolygon(id, data, cells, x, y, startX, startY, ctx)\n{\n    let fromLeft = true;\n    let fromAbove = false;\n\n    const { width, height, condition, outside } = ctx;\n\n    let line = y * width;\n    if (cells[line + x] !== 0)\n    {\n        // cell already visited\n        return null;\n    }\n\n    let x0, x2, y0, y2, cellCase;\n\n    y0 = y - 1;\n    y2 = y + 1;\n    x0 = x - 1;\n    x2 = x + 1;\n\n    cellCase = 0;\n\n    if (x > 0)\n    {\n        if (y > 0)\n        {\n            cellCase |= (condition(data[line + x]) << 3);\n        }\n        else\n        {\n            cellCase |= (outside << 3);\n        }\n\n        if (y2 < height)\n        {\n            cellCase |= (condition(data[line + width + x]) << 0);\n        }\n        else\n        {\n            cellCase |= (outside << 0);\n        }\n    }\n    else\n    {\n        cellCase |= (outside << 3);\n        cellCase |= (outside << 0);\n    }\n\n    if (x2 < width)\n    {\n        if (y > 0)\n        {\n            cellCase |= (condition(data[line + x2]) << 2);\n        }\n        else\n        {\n            cellCase |= (outside << 2);\n        }\n        if (y2 < height)\n        {\n            cellCase |= (condition(data[line + width + x2]) << 1);\n        }\n        else\n        {\n            cellCase |= (outside << 1);\n        }\n    }\n    else\n    {\n        cellCase |= (outside << 2);\n        cellCase |= (outside << 1);\n    }\n\n    // empty cells and cells within an obstacle don't start polygons\n    if (cellCase === 0 || cellCase === 15)\n    {\n        return null;\n    }\n\n    //console.log(\"start polygon\", x, y);\n\n\n    let points;\n\n    // // if we\n    // if (points != null && x === startX && y === startY)\n    // {\n    //\n    // }\n\n    switch(cellCase)\n    {\n        case 1:\n            points = [\n                x, y + 0.5\n            ];\n            break;\n\n        case 2:\n            points = [\n                x + 0.5, y2\n            ];\n            break;\n        case 3:\n            points = [\n                x, y + 0.5\n            ];\n            break;\n        case 4:\n            points = [\n                x2, y + 0.5,\n            ];\n            break;\n        case 5:\n            if (fromLeft)\n            {\n                points = [\n                    x, y + 0.5\n                ];\n            }\n            else\n            {\n                points = [\n                    x2, y + 0.5,\n                ];\n            }\n            break;\n        case 6:\n            points = [\n                x+0.5, y2\n            ];\n            break;\n\n        case 7:\n            points = [\n                x, y + 0.5\n            ];\n            break;\n        case 8:\n            points = [\n                x+0.5, y\n            ];\n            break;\n\n        case 9:\n            points = [\n                x+0.5, y\n            ];\n            break;\n\n        case 10:\n            if (fromAbove)\n            {\n                points = [\n                    x + 0.5, y\n                ];\n            }\n            else\n            {\n                points = [\n                    x + 0.5, y2\n                ];\n            }\n            break;\n        case 11:\n            points = [\n                x+0.5, y\n            ];\n            break;\n        case 12:\n            points = [\n                x2, y + 0.5\n            ];\n            break;\n        case 13:\n            points = [\n                x2, y + 0.5\n            ];\n            break;\n        case 14:\n            points = [\n                x + 0.5, y2\n            ];\n            break;\n\n        default:\n            throw new Error(\"Invalid cell value\");\n    }\n\n    do\n    {\n\n        // if (cells[line + x] !== 0)\n        // {\n        //     if (cellCase === 10 ||cellCase === 5)\n        //     {\n        //         console.log(\"double visit on ambiguous\")\n        //     }\n        //     else\n        //     {\n        //         throw new Error(\"Illegal State at length = \" + points.length + \", id = \" + cells[line + x] + \": \" + JSON.stringify({\n        //             x,\n        //             y,\n        //             startX,\n        //             startY,\n        //             cellCase\n        //         }));\n        //     }\n        // }\n\n        cells[line + x] = id;\n\n        //console.log(x, y, \"case = \", cellCase, \"check = \", x, y, \" <-> \", x2, y2);\n        switch (cellCase)\n        {\n            case 1:\n                points.push(\n                    x + 0.5, y2\n                );\n                y = y2;\n                fromLeft = false;\n                fromAbove = true;\n                break;\n            case 2:\n                points.push(\n                    x2, y + 0.5\n                );\n                x = x2;\n                fromLeft = true;\n                fromAbove = false;\n                break;\n            case 3:\n                points.push(\n                    x2, y + 0.5\n                );\n                x = x2;\n                fromLeft = true;\n                fromAbove = false;\n                break;\n            case 4:\n                points.push(\n                    x + 0.5, y\n                );\n                y = y0;\n                fromLeft = false;\n                fromAbove = false;\n                break;\n            case 5:\n                if (fromLeft)\n                {\n                    points.push(\n                        x + 0.5, y\n                    );\n                    y = y0;\n                    fromAbove = false;\n                }\n                else\n                {\n                    points.push(\n                        x + 0.5, y2\n                    );\n                    y = y2;\n                    fromAbove = true;\n                }\n                fromLeft = false;\n                break;\n            case 6:\n                points.push(\n                    x + 0.5, y\n                );\n                y = y0;\n                fromLeft = false;\n                fromAbove = false;\n                break;\n            case 7:\n                points.push(\n                    x + 0.5, y\n                );\n                y = y0;\n                fromLeft = false;\n                fromAbove = false;\n                break;\n            case 8:\n                points.push(\n                    x, y + 0.5\n                );\n                x = x0;\n                fromLeft = false;\n                fromAbove = false;\n                break;\n            case 9:\n                points.push(\n                    x + 0.5, y2\n                );\n                y = y2;\n                fromLeft = false;\n                fromAbove = true;\n                break;\n            case 10:\n                if (fromAbove)\n                {\n                    points.push(\n                        x2, y + 0.5\n                    );\n                    x = x2;\n                    fromLeft = true;\n                }\n                else\n                {\n                    points.push(\n                        x, y + 0.5\n                    );\n                    x = x0;\n                    fromLeft = false;\n                }\n                fromAbove = false;\n                break;\n            case 11:\n                points.push(\n                    x2, y + 0.5\n                );\n                x = x2;\n                fromLeft = true;\n                fromAbove = false;\n                break;\n            case 12:\n                points.push(\n                    x, y + 0.5\n                );\n                x = x0;\n                fromLeft = false;\n                fromAbove = false;\n                break;\n            case 13:\n                points.push(\n                    x + 0.5, y2\n                );\n                y = y2;\n                fromLeft = false;\n                fromAbove = true;\n                break;\n            case 14:\n                points.push(\n                    x, y + 0.5\n                );\n                x = x0;\n                fromLeft = false;\n                fromAbove = false;\n                break;\n            default:\n                throw new Error(\"Unhandled cell value: \" + JSON.stringify({\n                    cellCase,\n                    x,\n                    y\n                }, null, 4));\n        }\n\n        line = y * width;\n\n        y0 = y - 1;\n        y2 = y + 1;\n        x0 = x - 1;\n        x2 = x + 1;\n\n        cellCase = 0;\n\n        if (x > 0)\n        {\n            if (y > 0)\n            {\n                cellCase |= (condition(data[line + x]) << 3);\n            }\n            else\n            {\n                cellCase |= (outside << 3);\n            }\n\n            if (y2 < height)\n            {\n                cellCase |= (condition(data[line + width + x]) << 0);\n            }\n            else\n            {\n                cellCase |= (outside << 0);\n            }\n        }\n        else\n        {\n            cellCase |= (outside << 3);\n            cellCase |= (outside << 0);\n        }\n\n        if (x2 < width)\n        {\n            if (y > 0)\n            {\n                cellCase |= (condition(data[line + x2]) << 2);\n            }\n            else\n            {\n                cellCase |= (outside << 2);\n            }\n            if (y2 < height)\n            {\n                cellCase |= (condition(data[line + width + x2]) << 1);\n            }\n            else\n            {\n                cellCase |= (outside << 1);\n            }\n        }\n        else\n        {\n            cellCase |= (outside << 2);\n            cellCase |= (outside << 1);\n        }\n\n    } while (x !== startX || y !== startY);\n\n    return points;\n}\n\n\nexport default function marchingSquares(data, width, height, condition, outside)\n{\n    if (data.length !== width * height)\n    {\n        throw new Error(\"array size does not match width*height: \" + JSON.stringify({array: data.length, width, height}))\n    }\n\n    const start = now();\n\n    const cells = new Uint8Array(width * height);\n    const polygons = [];\n    const ctx = {\n        width,\n        height,\n        condition,\n        outside\n    };\n\n    for (let y=0; y < height; y ++)\n    {\n        const line = y * width;\n        for (let x=0; x < width; x ++)\n        {\n            const id = polygons.length + 1;\n            const polygon = createPolygon(id, data, cells, x, y, x, y, ctx);\n            // we ignore the little diamond 4 point shapes\n            if (polygon)\n            {\n                if (polygon.length > 6)\n                {\n                    //console.log(\"Polygon #\", + id, \": length = \", polygon.length);\n                    polygons.push(polygon)\n                }\n            }\n        }\n    }\n\n    console.log(\"Marching squares done in \"  + (now() - start) + \"ms\");\n\n    return polygons;\n}\n","\nexport function perpendicularDistance(px, py, lineStartX, lineStartY, lineEndX, lineEndY) {\n\n    let dx = lineEndX - lineStartX;\n    let dy = lineEndY - lineStartY;\n\n    // Normalize\n    const mag = Math.sqrt(dx * dx + dy * dy);\n    if (mag > 0.0) {\n        dx /= mag;\n        dy /= mag;\n    }\n    const pvx = px - lineStartX;\n    const pvy = py - lineStartY;\n\n    // Get dot product (project pv onto normalized direction)\n    const pvDot = dx * pvx + dy * pvy;\n\n    // Scale line direction vector and subtract it from pv\n    const ax = pvx - pvDot * dx;\n    const ay = pvy - pvDot * dy;\n\n    return Math.sqrt(ax * ax + ay * ay);\n}\n\nfunction simplifyRec(points, start, end, epsilon, out) {\n\n    let dMax = 0;\n    let index = 0;\n\n    const startX = points[start];\n    const startY = points[start + 1];\n    const endX = points[end];\n    const endY = points[end + 1];\n\n    for(let i = start + 2; i < end; i+= 2)\n    {\n        const d = perpendicularDistance(\n            points[i], points[i+1],\n            startX, startY,\n            endX, endY\n        );\n\n        if (d > dMax)\n        {\n            index = i;\n            dMax = d;\n        }\n    }\n\n    if (dMax > epsilon)\n    {\n        simplifyRec(points, start, index, epsilon, out);\n        simplifyRec(points, index, end, epsilon, out);\n    }\n    else\n    {\n        out.push(\n            endX,\n            endY\n        )\n    }\n}\n\n\n/**\n * Performs a recursive Ramer–Douglas–Peucker simplification of the given points array.\n *\n * @param {Array<Number>} points    Array with coordinates in pairs ( [x0,y0,x1,y1, ... xN, yN] )\n * @param {Number} epsilon          Acceptable error value. The higher, the more simplified the points will be.\n * @param {boolean} [repeatFirst]   whether to repeat the first point inline in the input array\n * @return {Array<Number>} array with simplified points in pairs\n */\nexport default function simplify(points, epsilon, repeatFirst = false) {\n\n    if (repeatFirst)\n    {\n        // repeat first point for simplification\n        points.push(\n            points[0],\n            points[1],\n        );\n    }\n\n    const out = [points[0], points[1]];\n    simplifyRec(points, 0, points.length - 2, epsilon, out);\n    if (repeatFirst)\n    {\n        return out.slice(0,out.length - 2);\n    }\n    return out;\n}\n","import SimplexNoise from \"simplex-noise\"\nimport Prando from \"prando\"\nimport now from \"performance-now\"\nimport flood from \"./flood\";\nimport marchingSquares from \"./util/marchingSquares\";\nimport simplify, { perpendicularDistance } from \"./util/simplify\";\nimport Delaunay from \"./Delaunay\";\n\n\nconst TAU = Math.PI * 2;\n\nconst N1 = 0.4;\nconst N2 = 1.4;\nconst N3 = 20;\nconst N4 = 5;\n\nconst RELATIVE_CITY_RADIUS = 0.034;\nconst MIN_CITY_RATING = 2000;\n\n\nfunction clamp(v)\n{\n    return v < -1 ? -1 : v > 1 ? 1 : v;\n}\n\n\nconst WATER_LINE = 0.05;\nconst BEACH_LINE = 0.07;\nconst WOODS_LINE = 0.09;\nconst MOUNTAIN_LINE = 0.5;\n\n// tiles\nexport const DARK = 0;\nexport const WATER = 1;\nexport const SAND = 2;\nexport const GRASS = 3;\nexport const DIRT = 4;\nexport const ROCK = 5;\nexport const WOODS = 6;\nexport const WOODS2 = 7;\nexport const RIVER = 8;\nexport const ICE = 9;\nexport const ICE2 = 10;\n\n// things\nexport const EMPTY = 1;\nexport const PLANT = 2;\nexport const PLANT_2 = 3;\nexport const PLANT_3 = 4;\nexport const DOT = 5;\nexport const _RIVER = 6;\nexport const _WOODS = 7;\nexport const BLOCKED = 8;   // non-walkable from here on\nexport const _WATER = 9;\nexport const LARGE_TREE = 10;\nexport const LARGE_TREE_2 = 11;\nexport const SMALL_TREE = 12;\nexport const SMALL_TREE_2 = 13;\nexport const SMALL_TREE_3 = 14;\nexport const BOULDER = 15;\nexport const BOULDER_2 = 16;\nexport const BOULDER_3 = 17;\nexport const HOUSE = 18;\n\n\nfunction calcWeightSum(array)\n{\n    if (!array)\n    {\n        return 0;\n    }\n\n    let sum = 0;\n    for (let i = 1; i < array.length; i += 2)\n    {\n        sum += array[i];\n    }\n    return sum;\n}\n\n\nconst tileNames = [\n    \"DARK\",\n    \"WATER\",\n    \"SAND\",\n    \"GRASS\",\n    \"DIRT\",\n    \"ROCK\",\n    \"WOODS\",\n    \"WOODS2\",\n    \"RIVER\"\n];\n\n\nconst tileVillageRating = [\n    0,  // DARK\n    0,  // WATER\n    0.5,  // SAND\n    1,  // GRASS\n    1,  // DIRT\n    -2,  // ROCK\n    1,  // WOODS\n    1,  // WOODS2\n    0,  // RIVER\n];\n\n\nfunction normalizeSpawnTable(table)\n{\n    for (let sTile in table)\n    {\n        if (table.hasOwnProperty(sTile))\n        {\n            const array = table[sTile];\n\n            if (array)\n            {\n                const sum = calcWeightSum(array);\n                for (let i = 1; i < array.length; i += 2)\n                {\n                    array[i] /= sum\n                }\n            }\n        }\n    }\n\n    return table;\n}\n\n\nconst spawnTable = normalizeSpawnTable({\n    [WATER]: [_WATER, 1],\n    [SAND]: [0, 500, BOULDER, 1, BOULDER_3, 1, BOULDER_2, 1],\n    [GRASS]: [\n        0,\n        1000,\n        LARGE_TREE,\n        2,\n        LARGE_TREE_2,\n        2,\n        SMALL_TREE,\n        3,\n        SMALL_TREE_3,\n        3,\n        BOULDER,\n        1,\n        BOULDER_3,\n        1,\n        BOULDER_2,\n        2\n    ],\n    [DIRT]: [\n        0,\n        1000,\n        LARGE_TREE,\n        2,\n        LARGE_TREE_2,\n        2,\n        SMALL_TREE,\n        3,\n        SMALL_TREE_3,\n        3,\n        BOULDER,\n        1,\n        BOULDER_3,\n        1,\n        BOULDER_2,\n        2\n    ],\n    [ROCK]: [BLOCKED, 4, BOULDER, 1, BOULDER_3, 1, BOULDER_2, 1],\n    [WOODS]: [\n        _WOODS,\n        150,\n        LARGE_TREE,\n        2,\n        LARGE_TREE_2,\n        2,\n        SMALL_TREE,\n        5,\n        SMALL_TREE_2,\n        5,\n        SMALL_TREE_3,\n        5,\n        PLANT,\n        1,\n        PLANT_2,\n        1,\n        PLANT_3,\n        1,\n        BOULDER,\n        1,\n        BOULDER_3,\n        1,\n        BOULDER_2,\n        2\n    ],\n    [WOODS2]: [\n        _WOODS,\n        40,\n        LARGE_TREE,\n        2,\n        LARGE_TREE_2,\n        2,\n        SMALL_TREE,\n        5,\n        SMALL_TREE_2,\n        5,\n        SMALL_TREE_3,\n        5,\n        PLANT,\n        1,\n        PLANT_2,\n        1,\n        PLANT_3,\n        1,\n        BOULDER,\n        1,\n        BOULDER_3,\n        1,\n        BOULDER_2,\n        2\n    ],\n    [RIVER]: [_RIVER, 1]\n});\n\nfunction spawn(map, spawns)\n{\n    if (spawns.length < 4)\n    {\n        return spawns[0];\n    }\n\n    let value = map.random.next();\n    let pos = 1;\n    do\n    {\n        value -= spawns[pos];\n        pos += 2\n    } while (value > 0 && pos < spawns.length);\n\n    return spawns[pos - 3];\n}\n\n\nfunction spawnForBlock(map, mapOffset, tile)\n{\n    const {things, size, sizeMask} = map;\n\n    if (things[mapOffset] !== 0)\n    {\n        //console.log(\"Skip spawning on \", things[mapOffset]);\n        return;\n    }\n\n    const spawns = spawnTable[tile];\n    if (spawns)\n    {\n        const thing = spawn(map, spawns);\n        if (thing)\n        {\n            //console.log(\"THING\", thing);\n\n            if (thing === LARGE_TREE || thing === LARGE_TREE_2)\n            {\n\n                const prev3Offset = (mapOffset - 3) & sizeMask;\n                const prev2Offset = (mapOffset - 2) & sizeMask;\n                const prevOffset = (mapOffset - 1) & sizeMask;\n                const nextOffset = (mapOffset + 1) & sizeMask;\n                const next2Offset = (mapOffset + 2) & sizeMask;\n                const next3Offset = (mapOffset + 3) & sizeMask;\n\n                if (\n                    things[prev3Offset] !== BLOCKED &&\n                    things[prev2Offset] !== BLOCKED &&\n                    things[prevOffset] !== BLOCKED\n                )\n                {\n\n                    things[mapOffset] = thing;\n                    things[nextOffset] = BLOCKED;\n                    things[next2Offset] = BLOCKED;\n                    things[next3Offset] = BLOCKED;\n\n                    //console.log(\"Block for large tree\", mapOffset)\n                }\n            }\n            else if (thing === BOULDER || thing === BOULDER_3)\n            {\n                const prevOffset = (mapOffset - 1) & sizeMask;\n                const nextOffset = (mapOffset + 1) & sizeMask;\n\n                //baseTile === ROCK && console.log(\"isLargeBoulder\", things[prevOffset], things[mapOffset], things[nextOffset])\n\n                if (\n                    things[prevOffset] !== BLOCKED\n                )\n                {\n\n                    things[mapOffset] = thing;\n                    things[nextOffset] = BLOCKED;\n                    //console.log(\"Block for large boulder\", mapOffset)\n                }\n            }\n            else\n            {\n                things[mapOffset] = thing;\n            }\n        }\n    }\n}\n\n\nconst nCoords = [0,0]\nfunction determineTile(map, x, y, climate)\n{\n    const coords = map.heightCoords(x, y);\n    const n = map.heightFn(x, y, coords, nCoords);\n\n    climate = clamp(climate - n * 0.96 + nCoords[1] * 0.2);\n\n\n    let result;\n    if (n < WATER_LINE)\n    {\n        result = WATER;\n    }\n    else if (n < BEACH_LINE)\n    {\n        result = SAND;\n    }\n    else if (n < MOUNTAIN_LINE)\n    {\n        const {nx, ny, nz, nw} = coords;\n\n        const n3 = n > WOODS_LINE ? map.noise4D(nx * N4, nw * N4, ny * N4, nz * N4) : 1;\n        const n4 = map.noise4D(nx * N3, nw * N3, ny * N3, nz * N3);\n        if (n3 < 0)\n        {\n            if (n4 < 0)\n            {\n                result = WOODS;\n            }\n            else\n            {\n                result = WOODS2;\n            }\n\n        }\n        else\n        {\n            if (n4 < 0)\n            {\n                result = GRASS;\n            }\n            else\n            {\n                result = DIRT;\n            }\n        }\n    }\n    else\n    {\n        result = ROCK;\n    }\n\n    if (climate < 0.4)\n    {\n        if (result === WATER)\n        {\n            return ICE2;\n        }\n        else if (result === WOODS2|| result === GRASS || result === DIRT || result === SAND )\n        {\n            return ICE;\n        }\n\n        if (result === WOODS )\n        {\n            return ROCK;\n        }\n    }\n    else if (climate > 0.95)\n    {\n        if (result === WOODS || result === WOODS2 || result === GRASS || result === DIRT )\n        {\n            return SAND;\n        }\n    }\n\n    return result\n}\n\n\nfunction createBase(size, seed, updateProgress, percent)\n{\n    const map = new WorldMap(size, seed);\n\n    const {tiles} = map;\n\n    let mapOffset = 0;\n\n    const report = (size / 20)|0\n\n\n    const climateStep = TAU / 2 / size;\n    let ca = 0;\n    for (let y = 0; y < size; y++)\n    {\n        const climate = Math.sin(ca);\n\n        ca += climateStep;\n\n        for (let x = 0; x < size; x++)\n        {\n            const tile = determineTile(map, x, y, climate);\n            tiles[mapOffset] = tile;\n            spawnForBlock(map, mapOffset, tile);\n\n            mapOffset++;\n        }\n\n        if (updateProgress && (y % report) === 0)\n        {\n            updateProgress(percent * y / size);\n        }\n    }\n    return map;\n}\n\n\nfunction randomProbes(map)\n{\n    const probes = [];\n\n    const {size} = map;\n\n    const probeCount = size * size / 1000;\n\n    //console.log(\"Probe count =\", probeCount);\n\n    for (let i = 0; i < probeCount; i++)\n    {\n        const x = (map.random.next() * size) | 0;\n        const y = (map.random.next() * size) | 0;\n\n        const value = map.heightFn(x, y);\n\n        if (value > WATER_LINE)\n        {\n            probes.push({\n                x,\n                y,\n                value,\n                points: [],\n                tile: 0\n            })\n        }\n    }\n    return probes;\n}\n\n\nconst directions = [\n    0, -1,\n    -1, 0,\n    1, 0,\n    0, 1\n];\n\n\nfunction climbUp(map, probe)\n{\n    let currentHigh = probe.value;\n    let currentX = probe.x;\n    let currentY = probe.y;\n\n    const {size} = map;\n\n    let improved = false;\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const x = probe.x + directions[i];\n        const y = probe.y + directions[i + 1];\n\n        if (x > 0 && y > 0 && x < size && y < size)\n        {\n            const value = map.heightFn(x, y);\n            if (value > currentHigh)\n            {\n                currentHigh = value;\n                currentX = x;\n                currentY = y;\n                improved = true;\n            }\n        }\n    }\n\n    if (!improved)\n    {\n        return false;\n    }\n    else\n    {\n        return {\n            x: currentX,\n            y: currentY,\n            value: currentHigh,\n            points: []\n        };\n    }\n}\n\n\nfunction removeDuplicates(probes)\n{\n    const length = probes.length;\n\n    const uniqueProbes = [];\n\n    for (let i = 0; i < length; i++)\n    {\n        const probe = probes[i];\n        let unique = true;\n        for (let j = length - 1; j > i; j--)\n        {\n            const other = probes[j];\n            if (probe.x === other.x && probe.y === other.y)\n            {\n                unique = false;\n                break;\n            }\n        }\n\n        if (unique)\n        {\n            uniqueProbes.push(probe);\n        }\n    }\n\n    return uniqueProbes;\n}\n\n\nfunction jitter(map, filtered, amount = 8)\n{\n    const twice = amount * 2;\n\n    const multis = [];\n    for (let i = 0; i < filtered.length; i++)\n    {\n        const probe = filtered[i];\n        const xOff = map.random.nextInt(-amount, amount);\n        const yOff = map.random.nextInt(-amount, amount);\n        probe.x = probe.x + xOff;\n        probe.y = probe.y + yOff;\n\n        const v = map.heightFn(probe.x, probe.y);\n\n        if (v > MOUNTAIN_LINE && map.random.next() < 0.6)\n        {\n            multis.push(\n                {\n                    ...probe,\n                    points: [],\n                    x: (probe.x - amount - yOff) | 0,\n                    y: (probe.y - amount + xOff) | 0\n                }\n            );\n        }\n    }\n\n    return filtered.concat(multis);\n}\n\n\nfunction createSprings(map)\n{\n    const probes = randomProbes(map);\n\n    //console.log(probes.length, \"random probes\");\n\n    const {size} = map;\n\n    const length = probes.length;\n    let walkingStart = 0, i = 0;\n    for (i = 0; i < size / 2 && walkingStart < length; i++)\n    {\n        //console.log(\"Walking \" + (length - walkingStart))\n        for (let j = walkingStart; j < length; j++)\n        {\n            const probe = probes[j];\n            const improved = climbUp(map, probe);\n            if (improved)\n            {\n                probes[j] = improved;\n            }\n            else\n            {\n                // swap current with first walker\n                const firstWalker = probes[walkingStart];\n                probes[walkingStart] = probes[j];\n                probes[j] = firstWalker;\n                // increase walking start\n                walkingStart++;\n            }\n        }\n\n        //drawSprings(probes, imageData, false);\n    }\n\n    const filtered = removeDuplicates(probes);\n\n    //console.log(filtered.length, \"springs\");\n    //console.log(\"Stopped climbing after \", i, \" iterations: \" + filtered.length + \" springs\");\n\n    return jitter(map, filtered);\n}\n\n\nfunction flow(map, probe)\n{\n    let currentLow = Infinity;\n    let currentX = probe.x;\n    let currentY = probe.y;\n    let currentTile = -1;\n    let currentDirection = -1;\n\n    let improved = false;\n\n    const {size} = map;\n\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const x = probe.x + directions[i];\n        const y = probe.y + directions[i + 1];\n\n        if (x > 0 && y > 0 && x < size && y < size)\n        {\n            let tile = map.read(x, y);\n            if (tile !== RIVER)\n            {\n                if (tile === ROCK)\n                {\n                    const {nx, ny, nz, nw} = map.heightCoords(x, y);\n                    const n3 = map.noise4D(nx * N3, nw * N3, ny * N3, nz * N3);\n                    if (n3 < 0)\n                    {\n                        tile = GRASS;\n                    }\n                    else\n                    {\n                        tile = DIRT;\n                    }\n                }\n\n                const value = map.heightFn(x, y) - (tile !== SAND && tile === probe.tile ? 0.001 : 0);\n                if (value < currentLow)\n                {\n                    currentLow = value;\n                    currentX = x;\n                    currentY = y;\n                    currentTile = tile;\n                    currentDirection = i;\n                    improved = true;\n                }\n            }\n        }\n    }\n\n    if (!improved)\n    {\n        const dir = map.random.nextInt(0, 3) * 2;\n        probe.x += directions[dir];\n        probe.y += directions[dir + 1];\n        probe.tile = map.read(probe.x, probe.y);\n    }\n    else\n    {\n        const n = map.random.next();\n        if (n < 0.25)\n        {\n            const dir = ((currentDirection / 2 + (n < 0.125 ? -1 : 1)) & 3) * 2;\n\n            probe.x += directions[dir];\n            probe.y += directions[dir + 1];\n\n            probe.points.push(probe.x, probe.y);\n\n            probe.x += directions[dir];\n            probe.y += directions[dir + 1];\n            probe.value = 1;\n            probe.tile = map.read(probe.x, probe.y);\n        }\n        else\n        {\n            probe.x = currentX;\n            probe.y = currentY;\n            probe.value = currentLow;\n            probe.tile = currentTile;\n\n        }\n    }\n}\n\n\nfunction findMean(springs)\n{\n    const last = springs.length - 1;\n    const mid = last / 2;\n    if (mid % 1)\n    {\n        return springs[(mid | 0)].points.length + springs[(mid | 0) + 1].points.length / 2;\n    }\n    else\n    {\n        return springs[(mid | 0)].points.length;\n    }\n}\n\n\n/**\n * Filters only the springs that are at least twice the spring mean length.\n *\n * @param springs   springs\n * @return {*}\n */\nfunction findLongRivers(map, springs)\n{\n    // we are roughly sorted, but not perfectly\n    springs.sort((a, b) => a.points.length - b.points.length);\n\n    const last = springs.length - 1;\n\n    const mean = findMean(springs);\n    const longRivers = springs.filter(s => s.points.length > mean * 2);\n\n    //console.log(\"Min spring length\", springs[0].points.length);\n    //console.log(\"Mean spring length\", mean);\n    //console.log(\"Max spring length\", springs[last].points.length);\n\n    //console.log(longRivers);\n\n    return longRivers\n\n}\n\n\nfunction getRiverWidth(index)\n{\n    return Math.min(8, index * 0.008) | 0;\n}\n\n\nfunction drawRivers(map)\n{\n    const springs = createSprings(map);\n\n    const {size} = map;\n\n    const length = springs.length;\n    let flowingStart = 0, i = 0;\n    for (i = 0; i < size && flowingStart < length; i++)\n    {\n        //console.log(\"Flowing \" + (length - flowingStart))\n        for (let j = flowingStart; j < length; j++)\n        {\n            const probe = springs[j];\n\n            const {x, y} = probe;\n            probe.points.push(x, y);\n\n            const currentTile = map.read(probe.x, probe.y);\n            if (currentTile === WATER || currentTile === ICE || currentTile === ICE2)\n            {\n                // swap current with first flower\n                const firstFlower = springs[flowingStart];\n                springs[flowingStart] = springs[j];\n                springs[j] = firstFlower;\n                // increase walking start\n                flowingStart++;\n                continue;\n            }\n            flow(map, probe);\n\n        }\n\n        //drawSprings(springs, imageData, false);\n    }\n    //console.log(\"Stopped flowing after \", i, \" iterations\");\n\n    for (let i = 0; i < springs.length; i++)\n    {\n        const {points} = springs[i];\n\n        for (let j = 0; j < points.length; j += 2)\n        {\n            const width = getRiverWidth(j);\n            flood(map, points[j], points[j + 1], width);\n        }\n    }\n\n    return springs;\n}\n\n\nfunction findNonRiverTile(map, x, y)\n{\n    let minDistance = Infinity;\n    let px, py, mdx, mdy;\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const dx = directions[i];\n        const dy = directions[i + 1];\n\n        // if (map.read(x, y) !== RIVER)\n        // {\n        //     throw new Error(\"coord not in river\")\n        // }\n\n        let distance = 1;\n        let currX = x + dx;\n        let currY = y + dy;\n        while (map.read(currX, currY) === RIVER)\n        {\n            distance++;\n            currX += dx;\n            currY += dy;\n        }\n\n        if (distance < minDistance)\n        {\n            minDistance = distance;\n            px = currX;\n            py = currY;\n            mdx = dx;\n            mdy = dy;\n\n        }\n    }\n\n    //console.log(\"findNonRiverTile: min = \", minDistance, \", direction = \", mdx, mdy)\n\n    return {\n        px,\n        py\n    }\n}\n\n\nfunction planCities(map, rivers)\n{\n    const longRivers = findLongRivers(map, rivers)\n        .filter(\n            (spring, idx) => {\n                const {points} = spring;\n\n                const len = points.length;\n                const radius = (len * RELATIVE_CITY_RADIUS) | 0;\n\n                const mouthX = points[len - 2];\n                const mouthY = points[len - 1];\n\n                let i;\n                for (i = len - 4; i > 0; i -= 2)\n                {\n                    let x = points[i] - mouthX;\n                    let y = points[i + 1] - mouthY;\n\n                    const dist = Math.sqrt(x * x + y * y);\n\n                    if (dist > radius)\n                    {\n                        //console.log(\"reached radius\");\n                        break;\n                    }\n                }\n\n                const {px, py} = findNonRiverTile(map, points[i], points[i + 1]);\n\n                const radiusSquared = radius * radius;\n                let sum = 0;\n                for (let y = -radius; y < radius; y++)\n                {\n                    const xDelta = (Math.sqrt(radiusSquared - y * y)) | 0;\n\n                    for (let x = -xDelta; x < xDelta; x++)\n                    {\n                        sum += tileVillageRating[map.read(px + x, py + y)];\n                    }\n                }\n\n                spring.centerX = (px & map.sizeMask);\n                spring.centerY = (py & map.sizeMask);\n                spring.radius = radius;\n\n                const isLong = sum > MIN_CITY_RATING;\n\n                //console.log(\"RATING\" + idx, sum);\n\n                return isLong;\n\n            });\n\n    for (let j = 0; j < longRivers.length; j++)\n    {\n        const {centerX, centerY, radius} = longRivers[j];\n\n        const radiusSquared = radius * radius;\n        for (let y = -radius; y <= radius; y++)\n        {\n            const xDelta = Math.round(Math.sqrt(radiusSquared - y * y));\n\n            map.putThing(centerX + xDelta, centerY + y, DOT);\n            map.putThing(centerX - xDelta, centerY + y, DOT);\n        }\n\n        //map.write(centerX, centerY, MARKER)\n    }\n\n    return longRivers;\n}\n\n\nfunction flatten(arrayOfArrays)\n{\n    let out = [];\n    for (let i = 0; i < arrayOfArrays.length; i++)\n    {\n        out = out.concat(arrayOfArrays[i]);\n    }\n    return out;\n}\n\n/**\n * Returns true if the given point x,y is inside the potentially convex polygon given as array of points.\n *\n * @param {Number} x    x-coordinate of point\n * @param {Number} y    y-coordinate of point\n * @param {Array<Number>} poly      Array of polygon points in pairs ( [x0,y0,x1,y1,...,xN,yN] )\n * @return {boolean} true if point is in polygon\n */\nexport function isPointInPolygon(x, y, poly)\n{\n    const { length } = poly;\n\n    let prevX = poly[ length - 2];\n    let prevY = poly[ length - 1];\n    let inPolygon = false;\n    for (let i = 0; i < length; i += 2)\n    {\n        const currX = poly[i];\n        const currY = poly[i + 1];\n        if (\n            currY > y !== prevY > y &&\n            x < currX + (prevX - currX) * (y - currY) / (prevY - currY)\n        )\n        {\n            inPolygon = !inPolygon\n        }\n        prevX = currX;\n        prevY = currY;\n    }\n    return inPolygon;\n}\n\n\n/**\n * Filters the given triangles so only triangles where the majority of rasterized map point are walkable remain.\n *\n * @param {WorldMap} map    map\n * @param {Array<number>} vertices\n * @param {Array<number>} triangles\n * @return {Array<number>} walkable triangles\n */\nfunction filterWalkable(map, vertices, triangles)\n{\n    return triangles;\n}\n\n\nconst SIMPLIFICATION_EPSILON = 2.5;\n\n\nfunction planRoads(map, cities)\n{\n    const polygons = marchingSquares(map.things, map.size, map.size, t => t >= BLOCKED, true);\n\n    console.log(\"MARCHING-CUBE: polygons = \", polygons.length, \", vertexes = \", polygons.reduce((count, array) => count + array.length, 0));\n\n    const simplified = polygons.map(p => simplify(p, SIMPLIFICATION_EPSILON, true)).filter(p => p.length > 6);\n\n    console.log(\"SIMPLIFIED: polygons = \", simplified.length, \", vertexes = \", simplified.reduce((count, array) => count + array.length, 0));\n\n    const vertices = flatten(simplified);\n    const triangles = Delaunay.triangulate(vertices);\n\n    console.log(\"DELAUNAY: triangles\", triangles.length / 3, \", vertexes = \", triangles.length);\n\n    const walkable = filterWalkable(map, vertices, triangles);\n\n    console.log(\"WALKABLE: triangles\", walkable.length / 3, \", vertexes = \", walkable.length);\n\n    map.vertices = vertices;\n    map.polygons = simplified;\n    map.triangles = walkable;\n}\n\n\nexport default class WorldMap {\n    constructor(size = 800, seed, tiles, things)\n    {\n        const lg = Math.log(size) / Math.log(2);\n        if ((lg % 1) !== 0)\n        {\n            throw new Error(\"Size must be power of two: \" + size);\n        }\n\n        //console.log(\"New map \" + size + \" x \" + size + \", seed = \" + seed);\n\n        this.random = new Prando(seed);\n        this.noise = new SimplexNoise(() => this.random.next());\n        this.size = size;\n\n        this.sizeMask = size - 1;\n        this.fineMask = (size << 4) - 1;\n\n        this.factor = 1 / size;\n        this.tiles = tiles || new Uint8Array(size * size);\n        this.things = things || new Uint8Array(size * size);\n    }\n\n\n    read(x, y)\n    {\n        return this.tiles[(y & this.sizeMask) * this.size + (x & this.sizeMask)];\n    }\n\n\n    getThing(x, y)\n    {\n        return this.things[(y & this.sizeMask) * this.size + (x & this.sizeMask)];\n    }\n\n\n    write(x, y, tile)\n    {\n        this.tiles[(y & this.sizeMask) * this.size + (x & this.sizeMask)] = tile;\n    }\n\n\n    putThing(x, y, thing)\n    {\n        this.things[(y & this.sizeMask) * this.size + (x & this.sizeMask)] = thing;\n    }\n\n\n    /**\n     * Returns the terrain height at the given tile coordinates\n     *\n     * @param {Number} x            tile x-coordinate\n     * @param {Number} y            tile y-coordinate\n     * @param {Object} [coords]     predetermined 4D coordinates\n     * @param {number} coords.nx    predetermined 4D x-coordinate\n     * @param {number} coords.ny    predetermined 4D y-coordinate\n     * @param {number} coords.nz    predetermined 4D z-coordinate\n     * @param {number} coords.nw    predetermined 4D w-coordinate\n     * @param nCoords               array receiving n0 and n1\n     *\n     * @return {number} height between -1 and 1 inclusive\n     */\n    heightFn(x, y, coords, nCoords = null)\n    {\n        const s = x * this.factor;\n        const t = y * this.factor;\n\n        let nx;\n        let ny;\n        let nz;\n        let nw;\n        if (coords)\n        {\n            nx = coords.nx;\n            ny = coords.ny;\n            nz = coords.nz;\n            nw = coords.nw;\n        }\n        else\n        {\n            nx = Math.cos(s * TAU);\n            ny = Math.cos(t * TAU);\n            nz = Math.sin(s * TAU);\n            nw = Math.sin(t * TAU);\n        }\n\n        const n0 = this.noise4D(nx * N1, ny * N1, nz * N1, nw * N1);\n        const n1 = this.noise4D(nx * N2, nw * N2, ny * N2, nz * N2);\n\n        if (nCoords)\n        {\n            nCoords[0] = n0;\n            nCoords[1] = n1;\n        }\n\n        return clamp(n0 < 0 ? -n0 * n0 : n0 * n0) + n1 * 0.3;\n    }\n\n\n    /**\n     * Returns the 4D coordinates for the given tile coordinates\n     *\n     * @param {Number} x    tile x-coordinate\n     * @param {Number} y    tile y-coordinate\n     * @return {{nw: number, nx: number, ny: number, nz: number}} 4D coordinates of 2 circles in 4D space\n     */\n    heightCoords(x, y)\n    {\n\n        const s = x * this.factor;\n        const t = y * this.factor;\n\n        const nx = Math.cos(s * TAU);\n        const ny = Math.cos(t * TAU);\n        const nz = Math.sin(s * TAU);\n        const nw = Math.sin(t * TAU);\n\n        return {\n            nx,\n            ny,\n            nz,\n            nw\n        };\n    }\n\n\n    render(ctx)\n    {\n        const {size} = this;\n\n        const imageData = ctx.createImageData(size, size);\n\n        const data = imageData.data;\n\n        let tileOffset = 0;\n        let dataOffset = 0;\n        for (let y = 0; y < size; y++)\n        {\n            for (let x = 0; x < size; x++)\n            {\n                const tile = this.tiles[tileOffset++];\n\n                switch (tile)\n                {\n                    case RIVER:\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WATER:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 32;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 255;\n                        break;\n                    case SAND:\n                        data[dataOffset++] = 192;\n                        data[dataOffset++] = 160;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case GRASS:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WOODS:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 108;\n                        data[dataOffset++] = 16;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WOODS2:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 32;\n                        data[dataOffset++] = 255;\n                        break;\n                    case DIRT:\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case ROCK:\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 255;\n                        break;\n                    case ICE:\n                        data[dataOffset++] = 248;\n                        data[dataOffset++] = 248;\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 255;\n                        break;\n                    case ICE2:\n                        data[dataOffset++] = 220;\n                        data[dataOffset++] = 220;\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 255;\n                        break;\n                }\n            }\n        }\n\n        return imageData;\n\n    }\n\n\n    noise4D(x, y, z, w)\n    {\n        return this.noise.noise4D(x, y, z, w);\n\n    }\n\n    serialize()\n    {\n        return {\n            \"_\": \"Map serialization\",\n\n            size: this.size,\n            seed: this.random._seed,\n            tiles: this.tiles,\n            things: this.things\n        }\n    }\n\n    static deserialize(obj)\n    {\n        //console.log(\"DESERIALIZE\", obj);\n        const {size, seed, things, tiles} = obj;\n\n\n        return new WorldMap(\n            size,\n            seed,\n            tiles,\n            things\n        );\n    }\n\n    static generate(size, seed = new Date().getTime(), updateProgress)\n    {\n\n        const start = now();\n        const map = createBase(size, seed, updateProgress, 0.75);\n        const afterBase = now();\n        const rivers = drawRivers(map);\n        const afterRivers = now();\n        updateProgress && updateProgress(0.87);\n        const cities = planCities(map, rivers);\n        const afterCities = now();\n\n        planRoads(map, cities);\n        updateProgress && updateProgress(1);\n\n        const end = now();\n        console.log(`Base in ${afterBase - start}ms`);\n        console.log(`Rivers in ${afterRivers - start}ms`);\n        console.log(`Cities in ${afterCities - start}ms`);\n        console.log(`Roads in ${end - start}ms`);\n\n        //console.log({ thingStats : map.things.reduce((a,b) =>(a[b] = a[b] === undefined ? 1: a[b] + 1,a), [])});\n\n        return map;\n    };\n\n}\n","var pixi_tilemap;\n(function (pixi_tilemap) {\n    var CanvasTileRenderer = (function () {\n        function CanvasTileRenderer(renderer) {\n            this.tileAnim = [0, 0];\n            this.dontUseTransform = false;\n            this.renderer = renderer;\n            this.tileAnim = [0, 0];\n        }\n        return CanvasTileRenderer;\n    }());\n    pixi_tilemap.CanvasTileRenderer = CanvasTileRenderer;\n    var cr = PIXI.CanvasRenderer;\n    if (cr) {\n        cr.registerPlugin('tilemap', CanvasTileRenderer);\n    }\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var CompositeRectTileLayer = (function (_super) {\n        __extends(CompositeRectTileLayer, _super);\n        function CompositeRectTileLayer(zIndex, bitmaps, texPerChild) {\n            var _this = _super.call(this) || this;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.initialize.apply(_this, arguments);\n            return _this;\n        }\n        CompositeRectTileLayer.prototype.updateTransform = function () {\n            this.displayObjectUpdateTransform();\n        };\n        CompositeRectTileLayer.prototype.initialize = function (zIndex, bitmaps, texPerChild) {\n            if (texPerChild === true) {\n                texPerChild = 0;\n            }\n            this.z = this.zIndex = zIndex;\n            this.texPerChild = texPerChild || pixi_tilemap.Constant.boundCountPerBuffer * pixi_tilemap.Constant.maxTextures;\n            if (bitmaps) {\n                this.setBitmaps(bitmaps);\n            }\n        };\n        CompositeRectTileLayer.prototype.setBitmaps = function (bitmaps) {\n            var texPerChild = this.texPerChild;\n            var len1 = this.children.length;\n            var len2 = Math.ceil(bitmaps.length / texPerChild);\n            var i;\n            for (i = 0; i < len1; i++) {\n                this.children[i].TEXTURES = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\n            }\n            for (i = len1; i < len2; i++) {\n                var layer = new pixi_tilemap.RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild));\n                layer.compositeParent = true;\n                layer.offsetX = pixi_tilemap.Constant.boundSize;\n                layer.offsetY = pixi_tilemap.Constant.boundSize;\n                this.addChild(layer);\n            }\n        };\n        CompositeRectTileLayer.prototype.clear = function () {\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i].clear();\n            }\n            this.modificationMarker = 0;\n        };\n        CompositeRectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight) {\n            var childIndex = textureIndex / this.texPerChild >> 0;\n            var textureId = textureIndex % this.texPerChild;\n            if (this.children[childIndex] && this.children[childIndex].textures) {\n                this.children[childIndex].addRect(textureId, u, v, x, y, tileWidth, tileHeight);\n            }\n        };\n        CompositeRectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var layer = null;\n            var ind = 0;\n            var children = this.children;\n            if (typeof texture_ === \"number\") {\n                var childIndex = texture_ / this.texPerChild >> 0;\n                layer = children[childIndex];\n                if (!layer) {\n                    layer = children[0];\n                    if (!layer) {\n                        return false;\n                    }\n                    ind = 0;\n                }\n                else {\n                    ind = texture_ % this.texPerChild;\n                }\n                texture = layer.textures[ind];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    var tex = child.textures;\n                    for (var j = 0; j < tex.length; j++) {\n                        if (tex[j].baseTexture === texture.baseTexture) {\n                            layer = child;\n                            ind = j;\n                            break;\n                        }\n                    }\n                    if (layer) {\n                        break;\n                    }\n                }\n                if (!layer) {\n                    for (var i = 0; i < children.length; i++) {\n                        var child = children[i];\n                        if (child.textures.length < this.texPerChild) {\n                            layer = child;\n                            ind = child.textures.length;\n                            child.textures.push(texture);\n                            break;\n                        }\n                    }\n                    if (!layer) {\n                        layer = new pixi_tilemap.RectTileLayer(this.zIndex, texture);\n                        layer.compositeParent = true;\n                        layer.offsetX = pixi_tilemap.Constant.boundSize;\n                        layer.offsetY = pixi_tilemap.Constant.boundSize;\n                        children.push(layer);\n                        ind = 0;\n                    }\n                }\n            }\n            layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        CompositeRectTileLayer.prototype.renderCanvas = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderCanvasCore(renderer);\n            }\n        };\n        CompositeRectTileLayer.prototype.render = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderWebGLCore(renderer, plugin);\n            }\n        };\n        CompositeRectTileLayer.prototype.isModified = function (anim) {\n            var layers = this.children;\n            if (this.modificationMarker !== layers.length) {\n                return true;\n            }\n            for (var i = 0; i < layers.length; i++) {\n                if (layers[i].isModified(anim)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        CompositeRectTileLayer.prototype.clearModify = function () {\n            var layers = this.children;\n            this.modificationMarker = layers.length;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].clearModify();\n            }\n        };\n        return CompositeRectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.CompositeRectTileLayer = CompositeRectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    pixi_tilemap.Constant = {\n        maxTextures: 4,\n        bufferSize: 2048,\n        boundSize: 1024,\n        boundCountPerBuffer: 1,\n        use32bitIndex: false,\n        SCALE_MODE: PIXI.SCALE_MODES.LINEAR,\n        DO_CLEAR: true\n    };\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var GraphicsLayer = (function (_super) {\n        __extends(GraphicsLayer, _super);\n        function GraphicsLayer(zIndex) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = zIndex;\n            return _this;\n        }\n        GraphicsLayer.prototype.renderCanvas = function (renderer) {\n            var wt = null;\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                wt = this.transform.worldTransform;\n                this.transform.worldTransform = PIXI.Matrix.IDENTITY;\n            }\n            renderer.plugins.graphics.render(this);\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                this.transform.worldTransform = wt;\n            }\n            renderer.context.globalAlpha = 1.0;\n        };\n        GraphicsLayer.prototype.isModified = function (anim) {\n            return false;\n        };\n        GraphicsLayer.prototype.clearModify = function () {\n        };\n        return GraphicsLayer;\n    }(PIXI.Graphics));\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var MultiTextureResource = (function (_super) {\n        __extends(MultiTextureResource, _super);\n        function MultiTextureResource(options) {\n            var _this = _super.call(this, options.bufferSize, options.bufferSize) || this;\n            _this.DO_CLEAR = false;\n            _this.boundSize = 0;\n            _this._clearBuffer = null;\n            _this.baseTex = null;\n            _this.boundSprites = [];\n            _this.dirties = [];\n            var bounds = _this.boundSprites;\n            var dirties = _this.dirties;\n            _this.boundSize = options.boundSize;\n            for (var j = 0; j < options.boundCountPerBuffer; j++) {\n                var spr = new PIXI.Sprite();\n                spr.position.x = options.boundSize * (j & 1);\n                spr.position.y = options.boundSize * (j >> 1);\n                bounds.push(spr);\n                dirties.push(0);\n            }\n            _this.DO_CLEAR = !!options.DO_CLEAR;\n            return _this;\n        }\n        MultiTextureResource.prototype.bind = function (baseTexture) {\n            if (this.baseTex) {\n                throw new Error('Only one baseTexture is allowed for this resource!');\n            }\n            this.baseTex = baseTexture;\n            _super.prototype.bind.call(this, baseTexture);\n        };\n        MultiTextureResource.prototype.setTexture = function (ind, texture) {\n            var spr = this.boundSprites[ind];\n            if (spr.texture.baseTexture === texture.baseTexture) {\n                return;\n            }\n            spr.texture = texture;\n            this.baseTex.update();\n            this.dirties[ind] = this.baseTex.dirtyId;\n        };\n        MultiTextureResource.prototype.upload = function (renderer, texture, glTexture) {\n            var gl = renderer.gl;\n            var _a = this, width = _a.width, height = _a.height;\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n            if (glTexture.dirtyId < 0) {\n                glTexture.width = width;\n                glTexture.height = height;\n                gl.texImage2D(texture.target, 0, texture.format, width, height, 0, texture.format, texture.type, null);\n            }\n            var doClear = this.DO_CLEAR;\n            if (doClear && !this._clearBuffer) {\n                this._clearBuffer = new Uint8Array(pixi_tilemap.Constant.boundSize * pixi_tilemap.Constant.boundSize * 4);\n            }\n            var bounds = this.boundSprites;\n            for (var i = 0; i < bounds.length; i++) {\n                var spr = bounds[i];\n                var tex = spr.texture.baseTexture;\n                if (glTexture.dirtyId >= this.dirties[i]) {\n                    continue;\n                }\n                var res = tex.resource;\n                if (!tex.valid || !res || !res.source) {\n                    continue;\n                }\n                if (doClear && (tex.width < this.boundSize || tex.height < this.boundSize)) {\n                    gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, this.boundSize, this.boundSize, texture.format, texture.type, this._clearBuffer);\n                }\n                gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, texture.format, texture.type, res.source);\n            }\n            return true;\n        };\n        return MultiTextureResource;\n    }(PIXI.resources.Resource));\n    pixi_tilemap.MultiTextureResource = MultiTextureResource;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var RectTileLayer = (function (_super) {\n        __extends(RectTileLayer, _super);\n        function RectTileLayer(zIndex, texture) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = 0;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.pointsBuf = [];\n            _this.hasAnim = false;\n            _this.offsetX = 0;\n            _this.offsetY = 0;\n            _this.compositeParent = false;\n            _this.vbId = 0;\n            _this.vb = null;\n            _this.vbBuffer = null;\n            _this.vbArray = null;\n            _this.vbInts = null;\n            _this.initialize(zIndex, texture);\n            return _this;\n        }\n        RectTileLayer.prototype.initialize = function (zIndex, textures) {\n            if (!textures) {\n                textures = [];\n            }\n            else if (!(textures instanceof Array) && textures.baseTexture) {\n                textures = [textures];\n            }\n            this.textures = textures;\n            this.zIndex = zIndex;\n        };\n        RectTileLayer.prototype.clear = function () {\n            this.pointsBuf.length = 0;\n            this.modificationMarker = 0;\n            this.hasAnim = false;\n        };\n        RectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var textureIndex = 0;\n            if (typeof texture_ === \"number\") {\n                textureIndex = texture_;\n                texture = this.textures[textureIndex];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                var found = false;\n                var textureList = this.textures;\n                for (var i = 0; i < textureList.length; i++) {\n                    if (textureList[i].baseTexture === texture.baseTexture) {\n                        textureIndex = i;\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    return false;\n                }\n            }\n            this.addRect(textureIndex, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        RectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight, animX, animY) {\n            if (animX === void 0) { animX = 0; }\n            if (animY === void 0) { animY = 0; }\n            var pb = this.pointsBuf;\n            this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\n            if (tileWidth === tileHeight) {\n                pb.push(u);\n                pb.push(v);\n                pb.push(x);\n                pb.push(y);\n                pb.push(tileWidth);\n                pb.push(tileHeight);\n                pb.push(animX | 0);\n                pb.push(animY | 0);\n                pb.push(textureIndex);\n            }\n            else {\n                var i = void 0;\n                if (tileWidth % tileHeight === 0) {\n                    for (i = 0; i < tileWidth / tileHeight; i++) {\n                        pb.push(u + i * tileHeight);\n                        pb.push(v);\n                        pb.push(x + i * tileHeight);\n                        pb.push(y);\n                        pb.push(tileHeight);\n                        pb.push(tileHeight);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else if (tileHeight % tileWidth === 0) {\n                    for (i = 0; i < tileHeight / tileWidth; i++) {\n                        pb.push(u);\n                        pb.push(v + i * tileWidth);\n                        pb.push(x);\n                        pb.push(y + i * tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else {\n                    pb.push(u);\n                    pb.push(v);\n                    pb.push(x);\n                    pb.push(y);\n                    pb.push(tileWidth);\n                    pb.push(tileHeight);\n                    pb.push(animX | 0);\n                    pb.push(animY | 0);\n                    pb.push(textureIndex);\n                }\n            }\n        };\n        RectTileLayer.prototype.renderCanvas = function (renderer) {\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            this.renderCanvasCore(renderer);\n        };\n        RectTileLayer.prototype.renderCanvasCore = function (renderer) {\n            if (this.textures.length === 0)\n                return;\n            var points = this.pointsBuf;\n            renderer.context.fillStyle = '#000000';\n            for (var i = 0, n = points.length; i < n; i += 9) {\n                var x1 = points[i], y1 = points[i + 1];\n                var x2 = points[i + 2], y2 = points[i + 3];\n                var w = points[i + 4];\n                var h = points[i + 5];\n                x1 += points[i + 6] * renderer.plugins.tilemap.tileAnim[0];\n                y1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[1];\n                var textureIndex = points[i + 8];\n                if (textureIndex >= 0) {\n                    renderer.context.drawImage(this.textures[textureIndex].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\n                }\n                else {\n                    renderer.context.globalAlpha = 0.5;\n                    renderer.context.fillRect(x2, y2, w, h);\n                    renderer.context.globalAlpha = 1;\n                }\n            }\n        };\n        RectTileLayer.prototype.destroyVb = function () {\n            if (this.vb) {\n                this.vb.destroy();\n                this.vb = null;\n            }\n        };\n        RectTileLayer.prototype.render = function (renderer) {\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            this.renderWebGLCore(renderer, plugin);\n        };\n        RectTileLayer.prototype.renderWebGLCore = function (renderer, plugin) {\n            var points = this.pointsBuf;\n            if (points.length === 0)\n                return;\n            var rectsCount = points.length / 9;\n            var shader = plugin.getShader();\n            var textures = this.textures;\n            if (textures.length === 0)\n                return;\n            plugin.bindTextures(renderer, shader, textures);\n            var vb = this.vb;\n            if (!vb) {\n                vb = plugin.createVb();\n                this.vb = vb;\n                this.vbId = vb.id;\n                this.vbBuffer = null;\n                this.modificationMarker = 0;\n            }\n            plugin.checkIndexBuffer(rectsCount, vb);\n            var boundCountPerBuffer = pixi_tilemap.Constant.boundCountPerBuffer;\n            var vertexBuf = vb.getBuffer('aVertexPosition');\n            var vertices = rectsCount * vb.vertPerQuad;\n            if (vertices === 0)\n                return;\n            if (this.modificationMarker !== vertices) {\n                this.modificationMarker = vertices;\n                var vs = vb.stride * vertices;\n                if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\n                    var bk = vb.stride;\n                    while (bk < vs) {\n                        bk *= 2;\n                    }\n                    this.vbBuffer = new ArrayBuffer(bk);\n                    this.vbArray = new Float32Array(this.vbBuffer);\n                    this.vbInts = new Uint32Array(this.vbBuffer);\n                    vertexBuf.update(this.vbBuffer);\n                }\n                var arr = this.vbArray, ints = this.vbInts;\n                var sz = 0;\n                var textureId = 0;\n                var shiftU = this.offsetX;\n                var shiftV = this.offsetY;\n                var tint = -1;\n                for (var i = 0; i < points.length; i += 9) {\n                    var eps = 0.5;\n                    if (this.compositeParent) {\n                        if (boundCountPerBuffer > 1) {\n                            textureId = (points[i + 8] >> 2);\n                            shiftU = this.offsetX * (points[i + 8] & 1);\n                            shiftV = this.offsetY * ((points[i + 8] >> 1) & 1);\n                        }\n                        else {\n                            textureId = points[i + 8];\n                            shiftU = 0;\n                            shiftV = 0;\n                        }\n                    }\n                    var x = points[i + 2], y = points[i + 3];\n                    var w = points[i + 4], h = points[i + 5];\n                    var u = points[i] + shiftU, v = points[i + 1] + shiftV;\n                    var animX = points[i + 6], animY = points[i + 7];\n                    arr[sz++] = x;\n                    arr[sz++] = y;\n                    arr[sz++] = u;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                }\n                vertexBuf.update(arr);\n            }\n            renderer.geometry.bind(vb, shader);\n            renderer.geometry.draw(PIXI.DRAW_MODES.TRIANGLES, rectsCount * 6, 0);\n        };\n        RectTileLayer.prototype.isModified = function (anim) {\n            if (this.modificationMarker !== this.pointsBuf.length ||\n                anim && this.hasAnim) {\n                return true;\n            }\n            return false;\n        };\n        RectTileLayer.prototype.clearModify = function () {\n            this.modificationMarker = this.pointsBuf.length;\n        };\n        RectTileLayer.prototype.destroy = function (options) {\n            _super.prototype.destroy.call(this, options);\n            this.destroyVb();\n        };\n        return RectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.RectTileLayer = RectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var rectShaderFrag = \"\\nvarying vec2 vTextureCoord;\\nvarying vec4 vFrame;\\nvarying float vTextureId;\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\n\\nvoid main(void){\\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\\n   float textureId = floor(vTextureId + 0.5);\\n\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\\n\";\n    var rectShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aFrame;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\n\\nuniform mat3 projTransMatrix;\\nuniform vec2 animationFrame;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vTextureId;\\nvarying vec4 vFrame;\\n\\nvoid main(void){\\n   gl_Position = vec4((projTransMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vec2 anim = aAnim * animationFrame;\\n   vTextureCoord = aTextureCoord + anim;\\n   vFrame = aFrame + vec4(anim, anim);\\n   vTextureId = aTextureId;\\n}\\n\";\n    var TilemapShader = (function (_super) {\n        __extends(TilemapShader, _super);\n        function TilemapShader(maxTextures, shaderVert, shaderFrag) {\n            var _this = _super.call(this, new PIXI.Program(shaderVert, shaderFrag), {\n                animationFrame: new Float32Array(2),\n                uSamplers: [],\n                uSamplerSize: [],\n                projTransMatrix: new PIXI.Matrix()\n            }) || this;\n            _this.maxTextures = 0;\n            _this.maxTextures = maxTextures;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return TilemapShader;\n    }(PIXI.Shader));\n    pixi_tilemap.TilemapShader = TilemapShader;\n    var RectTileShader = (function (_super) {\n        __extends(RectTileShader, _super);\n        function RectTileShader(maxTextures) {\n            var _this = _super.call(this, maxTextures, rectShaderVert, pixi_tilemap.shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)) || this;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return RectTileShader;\n    }(TilemapShader));\n    pixi_tilemap.RectTileShader = RectTileShader;\n    var RectTileGeom = (function (_super) {\n        __extends(RectTileGeom, _super);\n        function RectTileGeom() {\n            var _this = _super.call(this) || this;\n            _this.vertSize = 11;\n            _this.vertPerQuad = 4;\n            _this.stride = _this.vertSize * 4;\n            _this.lastTimeAccess = 0;\n            var buf = _this.buf = new PIXI.Buffer(new Float32Array(2), true, false);\n            _this.addAttribute('aVertexPosition', buf, 0, false, 0, _this.stride, 0)\n                .addAttribute('aTextureCoord', buf, 0, false, 0, _this.stride, 2 * 4)\n                .addAttribute('aFrame', buf, 0, false, 0, _this.stride, 4 * 4)\n                .addAttribute('aAnim', buf, 0, false, 0, _this.stride, 8 * 4)\n                .addAttribute('aTextureId', buf, 0, false, 0, _this.stride, 10 * 4);\n            return _this;\n        }\n        return RectTileGeom;\n    }(PIXI.Geometry));\n    pixi_tilemap.RectTileGeom = RectTileGeom;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var TileRenderer = (function (_super) {\n        __extends(TileRenderer, _super);\n        function TileRenderer(renderer) {\n            var _this = _super.call(this, renderer) || this;\n            _this.sn = -1;\n            _this.indexBuffer = null;\n            _this.ibLen = 0;\n            _this.tileAnim = [0, 0];\n            _this.texLoc = [];\n            _this.texResources = [];\n            _this.rectShader = new pixi_tilemap.RectTileShader(pixi_tilemap.Constant.maxTextures);\n            _this.indexBuffer = new PIXI.Buffer(undefined, true, true);\n            _this.checkIndexBuffer(2000);\n            _this.initBounds();\n            return _this;\n        }\n        TileRenderer.prototype.initBounds = function () {\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                return;\n            }\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            for (var i = 0; i < maxTextures; i++) {\n                var resource = new pixi_tilemap.MultiTextureResource(pixi_tilemap.Constant);\n                var baseTex = new PIXI.BaseTexture(resource);\n                baseTex.scaleMode = pixi_tilemap.Constant.SCALE_MODE;\n                baseTex.wrapMode = PIXI.WRAP_MODES.CLAMP;\n                this.texResources.push(resource);\n            }\n        };\n        TileRenderer.prototype.bindTexturesWithoutRT = function (renderer, shader, textures) {\n            var samplerSize = shader.uniforms.uSamplerSize;\n            this.texLoc.length = 0;\n            for (var i = 0; i < textures.length; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid) {\n                    return;\n                }\n                renderer.texture.bind(textures[i], i);\n                samplerSize[i * 2] = 1.0 / textures[i].baseTexture.width;\n                samplerSize[i * 2 + 1] = 1.0 / textures[i].baseTexture.height;\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        };\n        TileRenderer.prototype.bindTextures = function (renderer, shader, textures) {\n            var len = textures.length;\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            if (len > pixi_tilemap.Constant.boundCountPerBuffer * maxTextures) {\n                return;\n            }\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                this.bindTexturesWithoutRT(renderer, shader, textures);\n                return;\n            }\n            var i = 0;\n            for (; i < len; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid)\n                    continue;\n                var multi = this.texResources[i >> 2];\n                multi.setTexture(i & 3, texture);\n            }\n            var gltsUsed = (i + 3) >> 2;\n            for (i = 0; i < gltsUsed; i++) {\n                renderer.texture.bind(this.texResources[i].baseTex, i);\n            }\n        };\n        TileRenderer.prototype.start = function () {\n        };\n        TileRenderer.prototype.createVb = function () {\n            var geom = new pixi_tilemap.RectTileGeom();\n            geom.addIndex(this.indexBuffer);\n            geom.lastTimeAccess = Date.now();\n            return geom;\n        };\n        TileRenderer.prototype.checkIndexBuffer = function (size, vb) {\n            if (vb === void 0) { vb = null; }\n            var totalIndices = size * 6;\n            if (totalIndices <= this.ibLen) {\n                return;\n            }\n            var len = totalIndices;\n            while (len < totalIndices) {\n                len <<= 1;\n            }\n            this.ibLen = totalIndices;\n            this.indexBuffer.update(PIXI.utils.createIndicesForQuads(size, pixi_tilemap.Constant.use32bitIndex));\n        };\n        TileRenderer.prototype.getShader = function () {\n            return this.rectShader;\n        };\n        TileRenderer.prototype.destroy = function () {\n            _super.prototype.destroy.call(this);\n            this.rectShader = null;\n        };\n        return TileRenderer;\n    }(PIXI.ObjectRenderer));\n    pixi_tilemap.TileRenderer = TileRenderer;\n    PIXI.Renderer.registerPlugin('tilemap', TileRenderer);\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var ZLayer = (function (_super) {\n        __extends(ZLayer, _super);\n        function ZLayer(tilemap, zIndex) {\n            var _this = _super.call(this) || this;\n            _this._lastAnimationFrame = -1;\n            _this.tilemap = tilemap;\n            _this.z = zIndex;\n            return _this;\n        }\n        ZLayer.prototype.clear = function () {\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++)\n                layers[i].clear();\n            this._previousLayers = 0;\n        };\n        ZLayer.prototype.cacheIfDirty = function () {\n            var tilemap = this.tilemap;\n            var layers = this.children;\n            var modified = this._previousLayers !== layers.length;\n            this._previousLayers = layers.length;\n            var buf = this.canvasBuffer;\n            var tempRender = this._tempRender;\n            if (!buf) {\n                buf = this.canvasBuffer = document.createElement('canvas');\n                tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, { view: buf });\n                tempRender.context = tempRender.rootContext;\n                tempRender.plugins.tilemap.dontUseTransform = true;\n            }\n            if (buf.width !== tilemap._layerWidth ||\n                buf.height !== tilemap._layerHeight) {\n                buf.width = tilemap._layerWidth;\n                buf.height = tilemap._layerHeight;\n                modified = true;\n            }\n            var i;\n            if (!modified) {\n                for (i = 0; i < layers.length; i++) {\n                    if (layers[i].isModified(this._lastAnimationFrame !== tilemap.animationFrame)) {\n                        modified = true;\n                        break;\n                    }\n                }\n            }\n            this._lastAnimationFrame = tilemap.animationFrame;\n            if (modified) {\n                if (tilemap._hackRenderer) {\n                    tilemap._hackRenderer(tempRender);\n                }\n                tempRender.context.clearRect(0, 0, buf.width, buf.height);\n                for (i = 0; i < layers.length; i++) {\n                    layers[i].clearModify();\n                    layers[i].renderCanvas(tempRender);\n                }\n            }\n            this.layerTransform = this.worldTransform;\n            for (i = 0; i < layers.length; i++) {\n                this.layerTransform = layers[i].worldTransform;\n                break;\n            }\n        };\n        ZLayer.prototype.renderCanvas = function (renderer) {\n            this.cacheIfDirty();\n            var wt = this.layerTransform;\n            renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            var tilemap = this.tilemap;\n            renderer.context.drawImage(this.canvasBuffer, 0, 0);\n        };\n        return ZLayer;\n    }(PIXI.Container));\n    pixi_tilemap.ZLayer = ZLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    PIXI.tilemap = pixi_tilemap;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var shaderGenerator;\n    (function (shaderGenerator) {\n        function fillSamplers(shader, maxTextures) {\n            var sampleValues = [];\n            for (var i = 0; i < maxTextures; i++) {\n                sampleValues[i] = i;\n            }\n            shader.uniforms.uSamplers = sampleValues;\n            var samplerSize = [];\n            for (var i = 0; i < maxTextures; i++) {\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        }\n        shaderGenerator.fillSamplers = fillSamplers;\n        function generateFragmentSrc(maxTextures, fragmentSrc) {\n            return fragmentSrc.replace(/%count%/gi, maxTextures + \"\")\n                .replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\n        }\n        shaderGenerator.generateFragmentSrc = generateFragmentSrc;\n        function generateSampleSrc(maxTextures) {\n            var src = '';\n            src += '\\n';\n            src += '\\n';\n            src += 'if(vTextureId <= -1.0) {';\n            src += '\\n\\tcolor = shadowColor;';\n            src += '\\n}';\n            for (var i = 0; i < maxTextures; i++) {\n                src += '\\nelse ';\n                if (i < maxTextures - 1) {\n                    src += 'if(textureId == ' + i + '.0)';\n                }\n                src += '\\n{';\n                src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], textureCoord * uSamplerSize[' + i + ']);';\n                src += '\\n}';\n            }\n            src += '\\n';\n            src += '\\n';\n            return src;\n        }\n        shaderGenerator.generateSampleSrc = generateSampleSrc;\n    })(shaderGenerator = pixi_tilemap.shaderGenerator || (pixi_tilemap.shaderGenerator = {}));\n})(pixi_tilemap || (pixi_tilemap = {}));\n\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"4473ae86e186768231ce.worker.js\");\n};","// Delaunay code adapted from https://github.com/ironwallaby/delaunay\n\nconst EPSILON = 1.0 / 1048576.0;\n\nfunction supertriangle(vertices)\n{\n    let xmin = Number.POSITIVE_INFINITY,\n        ymin = Number.POSITIVE_INFINITY,\n        xmax = Number.NEGATIVE_INFINITY,\n        ymax = Number.NEGATIVE_INFINITY,\n        i, dx, dy, dmax, xmid, ymid;\n\n    for (i = vertices.length; i--;)\n    {\n        if (vertices[i * 2] < xmin)\n        {\n            xmin = vertices[i * 2];\n        }\n        if (vertices[i * 2] > xmax)\n        {\n            xmax = vertices[i * 2];\n        }\n        if (vertices[i * 2 + 1] < ymin)\n        {\n            ymin = vertices[i * 2 + 1];\n        }\n        if (vertices[i * 2 + 1] > ymax)\n        {\n            ymax = vertices[i * 2 + 1];\n        }\n    }\n\n    dx = xmax - xmin;\n    dy = ymax - ymin;\n    dmax = Math.max(dx, dy);\n    xmid = xmin + dx * 0.5;\n    ymid = ymin + dy * 0.5;\n\n    return [\n        xmid - 20 * dmax, ymid - dmax,\n        xmid, ymid + 20 * dmax,\n        xmid + 20 * dmax, ymid - dmax\n    ];\n}\n\n\nfunction circumcircle(vertices, i, j, k)\n{\n    const x1 = vertices[i * 2],\n        y1 = vertices[i * 2 + 1],\n        x2 = vertices[j * 2],\n        y2 = vertices[j * 2 + 1],\n        x3 = vertices[k * 2],\n        y3 = vertices[k * 2 + 1],\n        fabsy1y2 = Math.abs(y1 - y2),\n        fabsy2y3 = Math.abs(y2 - y3);\n    let xc, yc, m1, m2, mx1, mx2, my1, my2, dx, dy;\n\n    /* Check for coincident points */\n    if (fabsy1y2 < EPSILON && fabsy2y3 < EPSILON)\n    {\n        throw new Error(\"Eek! Coincident points!\");\n    }\n\n    if (fabsy1y2 < EPSILON)\n    {\n        m2 = -((x3 - x2) / (y3 - y2));\n        mx2 = (x2 + x3) / 2.0;\n        my2 = (y2 + y3) / 2.0;\n        xc = (x2 + x1) / 2.0;\n        yc = m2 * (xc - mx2) + my2;\n    }\n\n    else if (fabsy2y3 < EPSILON)\n    {\n        m1 = -((x2 - x1) / (y2 - y1));\n        mx1 = (x1 + x2) / 2.0;\n        my1 = (y1 + y2) / 2.0;\n        xc = (x3 + x2) / 2.0;\n        yc = m1 * (xc - mx1) + my1;\n    }\n\n    else\n    {\n        m1 = -((x2 - x1) / (y2 - y1));\n        m2 = -((x3 - x2) / (y3 - y2));\n        mx1 = (x1 + x2) / 2.0;\n        mx2 = (x2 + x3) / 2.0;\n        my1 = (y1 + y2) / 2.0;\n        my2 = (y2 + y3) / 2.0;\n        xc = (m1 * mx1 - m2 * mx2 + my2 - my1) / (m1 - m2);\n        yc = (fabsy1y2 > fabsy2y3) ?\n            m1 * (xc - mx1) + my1 :\n            m2 * (xc - mx2) + my2;\n    }\n\n    dx = x2 - xc;\n    dy = y2 - yc;\n    return {i: i, j: j, k: k, x: xc, y: yc, r: dx * dx + dy * dy};\n}\n\n\nfunction dedup(edges)\n{\n    let i, j, a, b, m, n;\n\n    for (j = edges.length; j;)\n    {\n        b = edges[--j];\n        a = edges[--j];\n\n        for (i = j; i;)\n        {\n            n = edges[--i];\n            m = edges[--i];\n\n            if ((a === m && b === n) || (a === n && b === m))\n            {\n                edges.splice(j, 2);\n                edges.splice(i, 2);\n                break;\n            }\n        }\n    }\n}\n\n\nconst Delaunay = {\n    triangulate: function (vertices) {\n        const n = vertices.length / 2;\n        let i, j, indices, superTri, open, closed, edges, dx, dy, a, b, c;\n\n        /* Bail if there aren't enough vertices to form any triangles. */\n        if (n < 3)\n        {\n            return [];\n        }\n\n        /* Slice out the actual vertices from the passed objects. (Duplicate the\n         * array even if we don't, though, since we need to make a supertriangle\n         * later on!) */\n        vertices = vertices.slice(0);\n\n        /* Make an array of indices into the vertex array, sorted by the\n         * vertices' x-position. Force stable sorting by comparing indices if\n         * the x-positions are equal. */\n        indices = new Array(n);\n\n        for (i = n; i--;)\n        {\n            indices[i] = i;\n        }\n\n        indices.sort(function (i, j) {\n            const diff = vertices[j * 2] - vertices[i * 2];\n            return diff !== 0 ? diff : i - j;\n        });\n\n        /* Next, find the vertices of the supertriangle (which contains all other\n         * triangles), and append them onto the end of a (copy of) the vertex\n         * array. */\n        superTri = supertriangle(vertices);\n        vertices = vertices.concat(superTri);\n\n        /* Initialize the open list (containing the supertriangle and nothing\n         * else) and the closed list (which is empty since we havn't processed\n         * any triangles yet). */\n        open = [circumcircle(vertices, n + 0, n + 1, n + 2)];\n        closed = [];\n        edges = [];\n\n        /* Incrementally add each vertex to the mesh. */\n        for (i = indices.length; i--; edges.length = 0)\n        {\n            c = indices[i];\n\n            /* For each open triangle, check to see if the current point is\n             * inside it's circumcircle. If it is, remove the triangle and add\n             * it's edges to an edge list. */\n            for (j = open.length; j--;)\n            {\n                /* If this point is to the right of this triangle's circumcircle,\n                 * then this triangle should never get checked again. Remove it\n                 * from the open list, add it to the closed list, and skip. */\n                dx = vertices[c * 2] - open[j].x;\n                if (dx > 0.0 && dx * dx > open[j].r)\n                {\n                    closed.push(open[j]);\n                    open.splice(j, 1);\n                    continue;\n                }\n\n                /* If we're outside the circumcircle, skip this triangle. */\n                dy = vertices[c * 2 + 1] - open[j].y;\n                if (dx * dx + dy * dy - open[j].r > EPSILON)\n                {\n                    continue;\n                }\n\n                /* Remove the triangle and add it's edges to the edge list. */\n                edges.push(\n                    open[j].i, open[j].j,\n                    open[j].j, open[j].k,\n                    open[j].k, open[j].i\n                );\n                open.splice(j, 1);\n            }\n\n            /* Remove any doubled edges. */\n            dedup(edges);\n\n            /* Add a new triangle for each edge. */\n            for (j = edges.length; j;)\n            {\n                b = edges[--j];\n                a = edges[--j];\n                open.push(circumcircle(vertices, a, b, c));\n            }\n        }\n\n        /* Copy any remaining open triangles to the closed list, and then\n         * remove any triangles that share a vertex with the supertriangle,\n         * building a list of triplets that represent triangles. */\n        for (i = open.length; i--;)\n        {\n            closed.push(open[i]);\n        }\n        open.length = 0;\n\n        for (i = closed.length; i--;)\n        {\n            if (closed[i].i < n && closed[i].j < n && closed[i].k < n)\n            {\n                open.push(closed[i].i, closed[i].j, closed[i].k);\n            }\n        }\n\n        // we double all offsets so that they match our linear input buffer. Positions returned are 0,2,4,... sparing\n        // the consumer of doing the multiplication\n        for (let k = 0; k < open.length; k++)\n        {\n            open[k] *= 2;\n        }\n\n        /* Yay, we're done! */\n        return open;\n    },\n\n    contains: function (vertices, offsetA, offsetB, offsetC, px, py, uvOut) {\n        /* Bounding box test first, for quick rejections. */\n        if ((px < vertices[offsetA] && px < vertices[offsetB] && px < vertices[offsetC]) ||\n            (px > vertices[offsetA] && px > vertices[offsetB] && px > vertices[offsetC]) ||\n            (py < vertices[offsetA + 1] && py < vertices[offsetB + 1] && py < vertices[offsetC + 1]) ||\n            (py > vertices[offsetA + 1] && py > vertices[offsetB + 1] && py > vertices[offsetC + 1]))\n        {\n            uvOut.isNull = true;\n        }\n        else\n        {\n\n            const a = vertices[offsetB] - vertices[offsetA],\n                b = vertices[offsetC] - vertices[offsetA],\n                c = vertices[offsetB + 1] - vertices[offsetA + 1],\n                d = vertices[offsetC + 1] - vertices[offsetA + 1],\n                i = a * d - b * c;\n\n            /* Degenerate tri. */\n            if (i === 0.0)\n            {\n                return null;\n            }\n\n            const u = (d * (px - vertices[offsetA]) - b * (py - vertices[offsetA + 1])) / i,\n                v = (a * (py - vertices[offsetA + 1]) - c * (px - vertices[offsetA])) / i;\n\n            /* If we're outside the tri, fail. */\n            if (u < 0.0 || v < 0.0 || (u + v) > 1.0)\n            {\n                uvOut.isNull = true;\n            }\n            else\n            {\n                uvOut.u = u;\n                uvOut.v = v;\n                uvOut.isNull = false;\n            }\n        }\n    }\n};\n\nexport default Delaunay\n","\n\nexport class Scene {\n    constructor(ctx, input, parent = null)\n    {\n        this.ctx = ctx;\n        this.parent = parent;\n        this.input = input;\n    }\n}\n\n\nfunction checkClass({classes}, cls)\n{\n\n    for (let i = 0; i < classes.length; i++)\n    {\n        const c = classes[i];\n        if (c === cls)\n        {\n            return;\n        }\n    }\n\n    throw new Error(cls + \" is not a registered class in this scene graph\")\n\n}\n\n\nclass SceneGraph {\n    constructor(classes, ctx, input)\n    {\n        this.classes = classes;\n        this.ctx = ctx;\n\n        this.ctx.graph = this;\n\n        this.current = new classes[0](this.ctx, input);\n\n        console.log(\"SCENE-GRAPH\", this);\n    }\n\n\n    start()\n    {\n        this.onEnter();\n    }\n\n\n    onEnter()\n    {\n        if (typeof this.current.onEnter === \"function\")\n        {\n            this.current.onEnter();\n        }\n    }\n\n\n    onExit()\n    {\n        if (typeof this.current.onExit === \"function\")\n        {\n            this.current.onExit();\n        }\n    }\n\n\n    ticker(delta)\n    {\n        if (typeof this.current.ticker === \"function\")\n        {\n            this.current.ticker(delta);\n        }\n\n        if (typeof this.current.render === \"function\")\n        {\n            this.current.render();\n        }\n    }\n\n    push(SceneClass, input)\n    {\n        checkClass(this, SceneClass);\n        this.current = new SceneClass(this.ctx, input, this.current)\n    }\n\n    pop()\n    {\n        const { parent } = this.current;\n        if (!parent)\n        {\n            throw new Error(\"Cannot pop without parent\");\n        }\n\n        this.onExit();\n        this.current = parent;\n    }\n\n\n\n    goto(SceneClass, input)\n    {\n        checkClass(this, SceneClass);\n        this.current = new SceneClass(this.ctx, input, null)\n    }\n\n}\n\n\nexport default SceneGraph\n","\nlet layerMask;\n\nexport const TEXTURES = [\n    \"ms-dark.png\",\n    \"ms-water.png\",\n    \"ms-sand.png\",\n    \"ms-grass.png\",\n    \"ms-dirt.png\",\n    \"ms-rock.png\",\n    \"ms-woods.png\",\n    \"ms-woods2.png\",\n    \"ms-river.png\",\n    \"ms-ice.png\",\n    \"ms-ice2.png\"\n];\nexport const THING_TEXTURES = [\n    null,\n    null,\n    \"plant.png\",\n    \"plant2.png\",\n    \"plant3.png\",\n    \"dot.png\",\n    null,\n    null,\n    null,\n    null,\n    \"large-tree.png\",\n    \"large-tree2.png\",\n    \"small-tree.png\",\n    \"small-tree2.png\",\n    \"small-tree3.png\",\n    \"boulder.png\",\n    \"boulder2.png\",\n    \"boulder3.png\",\n    \"house.png\",\n];\n\nexport function getCurrentLayerMask()\n{\n    return layerMask;\n}\n\nexport default function drawTiles(ctx, map, posX, posY, drawPlayer = true)\n{\n    const { tileLayer, atlas, width, height } = ctx;\n\n    const halfWidth = width / 2;\n    const halfHeight = height / 2;\n\n    const widthInTiles = Math.ceil(width / 16) + 5;\n    const heightInTiles = Math.ceil(height / 16) + 9;\n\n    tileLayer.clear();\n\n    const { sizeMask, fineMask, size } = map;\n\n    let xOffset = (posX - halfWidth) & fineMask;\n    let yOffset = (posY - halfHeight)& fineMask;\n\n    let screenX = -32 + -(xOffset & 15);\n    let screenY = -32 + -(yOffset & 15);\n\n    const mapX = ( -2 + (xOffset >> 4)) & sizeMask;\n    const mapY = ( -2 + (yOffset >> 4)) & sizeMask;\n\n    //console.log(\"Map pos\", mapX, mapY, sizeMask);\n    //console.log({screenX, screenY, txSteps, tySteps, mapX, mapY})\n\n    const yPosInTiles = (posY >> 4)|0;\n\n    const { length : numTextures } = TEXTURES;\n\n    layerMask = 0;\n\n    let tileMask = 1;\n\n    for (let i=0; i < numTextures; i++)\n    {\n\n        if (i === 0 || (layerMask & tileMask))\n        {\n\n            // DRAW TILES\n            for (let y = 0; y < heightInTiles; y++)\n            {\n                for (let x = 0; x < widthInTiles; x++)\n                {\n                    const t8 = map.read(mapX + x, mapY + y);\n                    const t4 = map.read(mapX + x + 1, mapY + y);\n                    const t1 = map.read(mapX + x, mapY + y + 1);\n                    const t2 = map.read(mapX + x + 1, mapY + y + 1);\n                    let cellCase =\n                        (t8 === i ? 8 : 0) +\n                        (t4 === i ? 4 : 0) +\n                        (t1 === i ? 1 : 0) +\n                        (t2 === i ? 2 : 0);\n\n                    if (i === 0)\n                    {\n                        layerMask |= 1 << t8;\n                    }\n\n                    if (cellCase !== 0)\n                    {\n                        // fix multi-color gaps\n                        if (cellCase === 1 && t2 !== t8)\n                        {\n                            cellCase = 16;\n                        }\n                        else if (cellCase === 2 && t4 !== t1)\n                        {\n                            cellCase = 17;\n                        }\n                        else if (cellCase === 4 && t8 !== t2)\n                        {\n                            cellCase = 18;\n                        }\n                        else if (cellCase === 8 && t1 !== t4)\n                        {\n                            cellCase = 19;\n                        }\n\n                        let texture = TEXTURES[i];\n\n                        texture += \"-\" + cellCase;\n\n                        const tex = atlas.frames[texture];\n                        if (tex === null)\n                        {\n                            throw new Error(\"No texture '\" + texture + \"'\")\n                        }\n                        const {pivot, frame} = tex;\n\n                        tileLayer.addFrame(\n                            texture,\n                            screenX + (x << 4) - ((pivot.x * frame.w) | 0),\n                            screenY + (y << 4) - ((pivot.y * frame.h) | 0)\n                        );\n                    }\n                }\n            }\n        }\n        tileMask *= 2;\n    }\n\n\n    for (let y = 0; y < heightInTiles; y++)\n    {\n        if (drawPlayer && ((mapY + y) & sizeMask) === ((yPosInTiles + 1) & sizeMask) && (posY & 15) < 8)\n        {\n            tileLayer.addFrame(\n                \"bunny.png\",\n                halfWidth,\n                halfHeight - 20\n            );\n        }\n\n        for (let x = 0; x < widthInTiles; x++)\n        {\n            const thing = map.getThing((mapX + x) & sizeMask, (mapY + y) & sizeMask);\n\n            const texture = THING_TEXTURES[thing];\n            if (texture)\n            {\n                const {pivot, frame} = atlas.frames[texture];\n                tileLayer.addFrame(\n                    texture,\n                    screenX + (x << 4) - (pivot.x * frame.w) | 0,\n                    screenY + (y << 4) - (pivot.y * frame.h) | 0\n                );\n            }\n        }\n\n        if (drawPlayer &&((mapY + y) & sizeMask) === ((yPosInTiles + 1) & sizeMask) && (posY & 15) >= 8)\n        {\n            tileLayer.addFrame(\n                \"bunny.png\",\n                halfWidth,\n                halfHeight - 20\n            );\n        }\n    }\n\n    if (drawPlayer)\n    {\n        tileLayer.addFrame(\n            \"bunny-outline.png\",\n            halfWidth,\n            halfHeight - 20\n        );\n    }\n}\n","import { Scene } from \"../SceneGraph\";\nimport { HOUSE } from \"../WorldMap\";\nimport drawTiles from \"../drawTiles\";\n\nconst HOUSE_X = 1023;\nconst HOUSE_Y = 1193;\n\n\nclass WorldScene extends Scene {\n\n    constructor(ctx, input, parent)\n    {\n        super(ctx, input, parent);\n\n        const { map } = input;\n\n        map.putThing(HOUSE_X, HOUSE_Y, HOUSE);\n\n        this.ctx.map = map;\n\n    }\n\n\n    ticker(delta)\n    {\n    }\n\n    render()\n    {\n        drawTiles(\n            this.ctx,\n            this.input.map,\n            this.ctx.posX,\n            this.ctx.posY\n        );\n    }\n}\n\nexport default WorldScene\n","import MapWorker from \"./workers/map.worker\";\nimport WorldMap from \"./WorldMap\";\n\n\nlet counter = 0;\n\nconst storage = {};\n\nconst worker = new MapWorker();\nworker.addEventListener(\"message\", event => {\n\n    const { data } = event;\n\n    const { type, ticket } = data;\n    const entry = storage[ticket];\n\n    if (!entry)\n    {\n        console.log(\"INVALID TICKET: \" + JSON.stringify(data));\n        return;\n    }\n    \n    const { resolve, onProgress } = entry;\n\n    switch (type)\n    {\n        case \"MAPRESULT\":\n            resolve(\n                WorldMap.deserialize(data.payload)\n            );\n\n            storage[ticket] = null;\n            break;\n        case \"PROGRESS\":\n            if (onProgress)\n            {\n                onProgress(data.percent);\n            }\n            else\n            {\n                console.log(Math.round(data.percent * 100) + \"%\");\n            }\n            break;\n    }\n\n}, true);\n\nexport default function generateAsync(seed, onProgress)\n{\n    const ticket = ++counter;\n\n    return new Promise((resolve => {\n\n        worker.postMessage({\n            type: \"GENERATE\",\n            seed,\n            ticket\n        });\n\n        storage[ticket] = {resolve, onProgress};\n    }));\n\n}\n","const digits = [\n    [\n        0, 2, 0, 0,\n        2, 0, 2, 0,\n        2, 0, 2, 0,\n        2, 0, 2, 0,\n        0, 2, 0, 0\n    ],\n    [\n        2, 2, 0, 0,\n        0, 2, 0, 0,\n        0, 2, 0, 0,\n        0, 2, 0, 0,\n        0, 2, 0, 0\n    ],\n    [\n        2, 2, 2, 0,\n        0, 0, 2, 0,\n        0, 2, 2, 0,\n        2, 0, 0, 0,\n        2, 2, 2, 0\n    ],\n    [\n        2, 2, 0, 0,\n        0, 0, 2, 0,\n        0, 2, 0, 0,\n        0, 0, 2, 0,\n        2, 2, 0, 0\n    ],\n    [\n        2, 0, 2, 0,\n        2, 0, 2, 0,\n        2, 2, 2, 0,\n        0, 0, 2, 0,\n        0, 0, 2, 0\n    ],\n    [\n        2, 2, 2, 0,\n        2, 0, 0, 0,\n        2, 2, 0, 0,\n        0, 0, 2, 0,\n        2, 2, 0, 0\n    ],\n    [\n        0, 2, 2, 0,\n        2, 0, 0, 0,\n        2, 2, 0, 0,\n        2, 0, 2, 0,\n        0, 2, 0, 0\n    ],\n    [\n        2, 2, 2, 0,\n        0, 0, 2, 0,\n        0, 0, 2, 0,\n        0, 0, 2, 0,\n        0, 0, 2, 0\n    ],\n    [\n        0, 2, 0, 0,\n        2, 0, 2, 0,\n        0, 2, 0, 0,\n        2, 0, 2, 0,\n        0, 2, 0, 0\n    ],\n    [\n        0, 2, 0, 0,\n        2, 0, 2, 0,\n        0, 2, 2, 0,\n        0, 0, 2, 0,\n        2, 2, 2, 0\n    ],\n    [\n        1, 0, 0, 1,\n        0, 0, 1, 0,\n        0, 1, 1, 0,\n        0, 1, 0, 0,\n        1, 0, 0, 1\n    ]\n\n];\n\n\nexport function drawDigit(map, sx, sy, digit)\n{\n    let off = 0;\n\n    const array = digits[digit];\n    if (!array)\n    {\n        throw new Error(\"No array for \" + digit);\n    }\n\n\n    for (let y = 0 ; y < 5; y++)\n    {\n        for (let x = 0; x < 4; x++)\n        {\n            map.write(\n                sx + x,\n                sy + y,\n                array[off]\n            );\n            off++;\n        }\n    }\n}\n","import * as PIXI from \"pixi.js\"\nimport \"./pixi-tilemap\"\n// noinspection ES6UnusedImports\nimport STYLES from \"./style.css\"\nimport SceneGraph from \"./SceneGraph\";\nimport WorldScene from \"./scenes/WorldScene\";\nimport StartScene from \"./scenes/StartScene\";\n\n\nfunction determineScale(width)\n{\n    let scale = 1;\n\n    let curr = width;\n    while (curr > 1024)\n    {\n        curr /= 2;\n        scale *= 2;\n    }\n\n    console.log(\"Set scale to\", scale);\n\n    return scale;\n}\n\n\n\nwindow.onload = () => {\n\n    PIXI.Loader.shared\n        .add(\"atlas/atlas-0.json\")\n        .load(setup);\n};\n\n// PIXI.Loader.shared.onProgress.add(function (ev) {\n//     console.log(ev.progress);\n// });\n\nlet tileLayer;\n\nconst START_X = 1025 * 16;\nconst START_Y = 1197 * 16;\n\nlet posX = START_X;\nlet posY = START_Y;\nlet dx = 0;\nlet dy = 0;\n\nconst ACCELERATION = 0.5;\nconst SPEED_LIMIT = 12;\n\n/**\n * Global context object for the scene graph.\n *\n * @type {{app: PIXI.Application, atlas: object, container: PIXI.Container, posX: number, posY: number, controls: {moveUpDown: number, moveLeftRight: number}, tileLayer: PIXI.tilemap.CompositeRectTileLayer, width: number, height: number, scale: number}}\n */\n\nconst ctx = {\n    app: null,\n    /** atlas.json data **/\n    atlas : null,\n    /**\n     * Container around our tilemap\n     */\n    container: null,\n    /** Current WorldMap */\n    map : null,\n    /**\n     * Current width\n     */\n    width: -1,\n    /**\n     * Current height\n     */\n    height: -1,\n    /**\n     * CompositeRectTileLayer\n     */\n    tileLayer : null,\n    /**\n     * Current scale\n     */\n    scale: 2,\n    /**\n     * Current scale\n     */\n    posX: START_X,\n    posY: START_Y,\n\n    /**\n     * Current user input\n     */\n    controls: {\n        moveLeftRight: 0,\n        moveUpDown: 0,\n        action: false,\n        meta: false\n    }\n};\n\n\nfunction handleMovement(delta)\n{\n    const {moveLeftRight, moveUpDown} = ctx.controls;\n\n    if (moveLeftRight)\n    {\n        dx += moveLeftRight * ACCELERATION;\n        if (Math.abs(dx) > SPEED_LIMIT)\n        {\n            dx = Math.sign(dx) * SPEED_LIMIT;\n        }\n    }\n    else\n    {\n        dx = Math.abs(dx) > 0.1 ? dx * 0.8 : 0;\n    }\n    if (moveUpDown)\n    {\n        dy += moveUpDown * ACCELERATION;\n        if (Math.abs(dy) > SPEED_LIMIT)\n        {\n            dy = Math.sign(dy) * SPEED_LIMIT;\n        }\n    }\n    else\n    {\n        dy = Math.abs(dy) > 0.1 ? dy * 0.8 : 0;\n    }\n\n    if (ctx.map)\n    {\n        posX = (posX + dx * delta) & ctx.map.fineMask;\n        posY = (posY + dy * delta) & ctx.map.fineMask;\n\n        ctx.posX = posX;\n        ctx.posY = posY;\n    }\n}\n\n\nfunction setup(loader, resources)\n{\n    const atlas = resources[\"atlas/atlas-0.json\"].data;\n\n    //console.log(\"setup\", resources);\n\n    const scale = determineScale(window.innerWidth);\n\n    const width = (window.innerWidth / scale)|0;\n    const height = (window.innerHeight / scale)|0;\n\n    console.log({width, height})\n\n    const halfWidth = width/2;\n    const halfHeight = height/2;\n\n\n    const app = new PIXI.Application({\n        width: width,\n        height: height,\n        backgroundColor: 0x111111,\n        resolution: (window.devicePixelRatio || 1) * scale,\n    });\n    document.body.appendChild(app.view);\n\n\n    //PIXI.tilemap.Constant.use32bitIndex = true;\n    tileLayer = new PIXI.tilemap.CompositeRectTileLayer(0, PIXI.utils.TextureCache[\"atlas/atlas-0.json_image\"]);\n\n    const container = new PIXI.Container();\n    container.addChild(tileLayer);\n    app.stage.addChild(container);\n\n    container.x = app.screen.width / 2;\n    container.y = app.screen.height / 2;\n    container.pivot.x = halfWidth;\n    container.pivot.y = halfHeight;\n\n    // initialize context fields\n    Object.assign(ctx ,{\n        tileLayer,\n        atlas,\n        width,\n        height,\n        app,\n        container,\n        scale,\n        posX,\n        posY\n    });\n\n    const sceneGraph = new SceneGraph([\n        StartScene,\n        WorldScene\n    ], ctx);\n\n    app.ticker.add((delta) => {\n\n        handleMovement(delta);\n        sceneGraph.ticker(delta);\n    });\n\n    window.addEventListener(\"keydown\", ev => {\n        const keyCode = ev.keyCode;\n\n\n        switch(keyCode)\n        {\n            case 80:\n                console.log(\"POS\", (posX >> 4)|0, (posY >> 4)|0, \", fine = \", posX, posY, \", layerMask = \", getCurrentLayerMask())\n                break;\n            case 36:\n                posX = START_X;\n                posY = START_Y;\n                break;\n            case 35:\n                posX = 0;\n                posY = 0;\n                break;\n            case 38:\n            case 87:\n                ctx.controls.moveUpDown = -1;\n                break;\n            case 37:\n            case 65:\n                ctx.controls.moveLeftRight = -1;\n                break;\n            case 40:\n            case 83:\n                ctx.controls.moveUpDown = 1;\n                break;\n            case 39:\n            case 68:\n                ctx.controls.moveLeftRight = 1;\n                break;\n            default:\n                console.log(\"keyCode = \", keyCode);\n        }\n    }, true);\n    window.addEventListener(\"keyup\", ev => {\n        const keyCode = ev.keyCode;\n\n        //console.log(\"keyCode = \", keyCode);\n\n        switch(keyCode)\n        {\n            case 38:\n            case 87:\n            case 40:\n            case 83:\n                ctx.controls.moveUpDown = 0;\n                break;\n            case 37:\n            case 65:\n            case 39:\n            case 68:\n                ctx.controls.moveLeftRight = 0;\n                break;\n        }\n    }, true);\n\n    window.addEventListener(\"resize\", ev => {\n\n        ctx.width = (window.innerWidth / ctx.scale)|0;\n        ctx.height = (window.innerHeight / ctx.scale)|0;\n\n        app.renderer.resize(ctx.width,ctx.height)\n\n        //console.log(\"Window resized to \" + ctx.width + \" x \" + ctx.height)\n\n    }, true);\n\n    sceneGraph.start();\n}\n","import { Scene } from \"../SceneGraph\";\nimport WorldMap from \"../WorldMap\";\nimport generateAsync from \"../generateAsync\";\nimport WorldScene from \"./WorldScene\";\nimport { drawDigit } from \"../util/drawDigit\";\nimport drawTiles from \"../drawTiles\";\n\n\nclass StartScene extends Scene\n{\n    constructor(ctx, input, parent)\n    {\n        super(ctx, input, parent);\n    }\n\n    onEnter()\n    {\n        this.map = new WorldMap(128, \"start\");\n\n        generateAsync(\"floppy-disk\", percent => {\n\n            const text = String(Math.round(percent * 100));\n\n            const off = Math.round(((text.length + 1) * 4)/2);\n\n            for (let i = 0; i < text.length; i++)\n            {\n                const digit = text.charCodeAt(i) - 48;\n\n                drawDigit(this.map, -off + i * 4,-3, digit)\n            }\n\n            drawDigit(this.map, -off + text.length * 4,-3, 10)\n\n        }).then(\n            newMap => this.ctx.graph.goto(WorldScene, { map: newMap })\n        );\n    }\n\n    render()\n    {\n        drawTiles(\n            this.ctx,\n            this.map,\n            0,\n            0,\n            false\n        );\n\n    }\n\n}\n\nexport default StartScene;\n"],"sourceRoot":""}