{"version":3,"sources":["webpack://Game/webpack/bootstrap","webpack://Game/./src/index.js","webpack://Game/./src/pixi-tilemap.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","pixi_js__WEBPACK_IMPORTED_MODULE_1__","simplex_noise__WEBPACK_IMPORTED_MODULE_3__","loading","groundTiles","noise","SimplexNoise","NOISE_SCALE","NOISE_SCALE2","WATER_LINE","SAND_LINE","onload","document","querySelector","PIXI","shared","add","load","setup","GRASS","DIRT","SAND","WATER","loader","resources","parentNode","removeChild","scale","width","curr","console","log","determineScale","innerWidth","height","innerHeight","app","backgroundColor","resolution","devicePixelRatio","body","appendChild","view","CompositeRectTileLayer","TextureCache","widthInTiles","heightInTiles","y","x","v","noise2D","v2","texture","Math","random","addFrame","drawTiles","stage","addChild","pixi_tilemap","CanvasTileRenderer","renderer","this","tileAnim","dontUseTransform","cr","CanvasRenderer","registerPlugin","extendStatics","__extends","setPrototypeOf","__proto__","Array","b","__","constructor","_super","zIndex","bitmaps","texPerChild","_this","modificationMarker","shadowColor","Float32Array","_globalMat","initialize","arguments","updateTransform","displayObjectUpdateTransform","z","Constant","boundCountPerBuffer","maxTextures","setBitmaps","len1","children","len2","ceil","textures","layer","RectTileLayer","compositeParent","offsetX","boundSize","offsetY","clear","addRect","textureIndex","u","tileWidth","tileHeight","childIndex","textureId","texture_","animX","animY","ind","Texture","from","tex","child","baseTexture","frame","renderCanvas","visible","worldAlpha","renderable","plugins","tilemap","wt","worldTransform","context","setTransform","a","tx","ty","layers","renderCanvasCore","render","plugin","shader","getShader","batch","setObjectRenderer","uniforms","projTransMatrix","globalUniforms","projectionMatrix","copyTo","append","animationFrame","renderWebGLCore","isModified","anim","clearModify","Container","bufferSize","use32bitIndex","SCALE_MODE","SCALE_MODES","LINEAR","DO_CLEAR","GraphicsLayer","transform","Matrix","IDENTITY","graphics","globalAlpha","Graphics","MultiTextureResource","options","_clearBuffer","baseTex","boundSprites","dirties","bounds","spr","Sprite","position","Error","setTexture","update","dirtyId","upload","glTexture","gl","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","texImage2D","target","format","type","doClear","Uint8Array","res","resource","valid","source","texSubImage2D","Resource","pointsBuf","hasAnim","vbId","vb","vbBuffer","vbArray","vbInts","found","textureList","pb","points","fillStyle","x1","y1","x2","y2","w","h","drawImage","fillRect","destroyVb","destroy","rectsCount","bindTextures","createVb","id","checkIndexBuffer","vertexBuf","getBuffer","vertices","vertPerQuad","vs","stride","byteLength","bk","ArrayBuffer","Uint32Array","arr","sz","shiftU","shiftV","geometry","draw","DRAW_MODES","TRIANGLES","rectShaderFrag","rectShaderVert","TilemapShader","shaderVert","shaderFrag","Program","uSamplers","uSamplerSize","shaderGenerator","fillSamplers","Shader","RectTileShader","generateFragmentSrc","RectTileGeom","vertSize","lastTimeAccess","buf","Buffer","addAttribute","Geometry","TileRenderer","sn","indexBuffer","ibLen","texLoc","texResources","rectShader","undefined","initBounds","BaseTexture","scaleMode","wrapMode","WRAP_MODES","CLAMP","bindTexturesWithoutRT","samplerSize","len","gltsUsed","start","geom","addIndex","Date","now","size","totalIndices","utils","createIndicesForQuads","ObjectRenderer","Renderer","ZLayer","_lastAnimationFrame","_previousLayers","cacheIfDirty","modified","canvasBuffer","tempRender","_tempRender","createElement","rootContext","_layerWidth","_layerHeight","_hackRenderer","clearRect","layerTransform","sampleValues","fragmentSrc","replace","generateSampleSrc","src"],"mappings":"qBACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAIA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,iBAAAA,OAAA,qBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAMA,OAFA1C,EAAAR,KAAA,QAEAU,sCCvJAO,EAAAgB,EAAAmB,GAAAnC,EAAA,OAAAoC,EAAApC,EAAA,GAAAqC,GAAArC,EAAA,GAAAA,EAAA,IAyBA,IAEIsC,EAqBAC,EAvBEC,EAAQ,IAzBdxC,EAAA2B,EAAAU,GAyBkBI,GAIZC,EAAc,IACdC,EAAe,GAEfC,EAAa,EACbC,EAAYD,EAAgC,IAAlB,EAAIA,GAEpCZ,OAAOc,OAAS,WAEZR,EAAUS,SAASC,cAAc,eAEjCC,SAAYC,OACPC,IAAI,sBACJC,KAAKC,IASd,IAAMC,EAAQ,CACV,YACA,aACA,cAEEC,EAAO,CACT,WACA,YACA,aAEEC,EAAO,CACT,WACA,YACA,aAGEC,EAAQ,CACV,YACA,aACA,cAIJ,SAASJ,EAAMK,EAAQC,GAGnBrB,EAAQsB,WAAWC,YAAYvB,GAI/B,IAAMwB,EAvEV,SAAwBC,GAKpB,IAHA,IAAID,EAAQ,EAERE,EAAOD,EACJC,EAAO,MAEVA,GAAQ,EACRF,GAAS,EAKb,OAFAG,QAAQC,IAAI,eAAgBJ,GAErBA,EA0DOK,CAAenC,OAAOoC,YAE9BL,EAAQ/B,OAAOoC,WAAaN,EAC5BO,EAASrC,OAAOsC,YAAcR,EAE9BS,EAAM,IAAItB,cAAiB,CAC7Bc,MAAOA,EACPM,OAAQA,EACRG,gBAAiB,QACjBC,YAAazC,OAAO0C,kBAAoB,GAAKZ,IAEjDf,SAAS4B,KAAKC,YAAYL,EAAIM,MAuE9BtC,EAAc,IAAIU,UAAa6B,uBAAuB,EAAG7B,QAAW8B,aAAa,6BApEjF,WAMI,IAHA,IAAMC,EAAgBjB,EAAQ,GAAM,EAC9BkB,EAAiBZ,EAAS,GAAM,EAE7Ba,EAAI,EAAGA,EAAID,EAAeC,IAE/B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAcG,IAClC,CAEI,IAAMC,EAAI5C,EAAM6C,QAAQF,EAAIzC,EAAcwC,EAAIxC,GACxC4C,EAAK9C,EAAM6C,QAAQH,EAAIvC,EAAewC,EAAIxC,GAE5C4C,OAAO,EAGPA,EAFAH,EAAIxC,EAEMa,EAAO+B,KAAKC,SAAWhC,EAAM5E,OAAU,GAE5CuG,EAAIvC,EAECW,EAAMgC,KAAKC,SAAWjC,EAAK3E,OAAU,GAI3CyG,GAAM,GAEIhC,EAAOkC,KAAKC,SAAWnC,EAAMzE,OAAU,GAIvC0E,EAAMiC,KAAKC,SAAWlC,EAAK1E,OAAU,GAIvD0D,EAAYmD,SAASH,EAAa,GAAJJ,EAAY,GAAJD,IAkClDS,GAEApB,EAAIqB,MAAMC,SAAStD,4CCrKvB,SAAAU,IACA,SAAW6C,GACP,IAAIC,EACA,SAA4BC,GACxBC,KAAKC,SAAW,CAAC,EAAG,GACpBD,KAAKE,kBAAmB,EACxBF,KAAKD,SAAWA,EAChBC,KAAKC,SAAW,CAAC,EAAG,IAI5BJ,EAAaC,mBAAqBA,EAClC,IAAIK,EAAKnD,EAAKoD,eACVD,GACAA,EAAGE,eAAe,UAAWP,GAbrC,CAeGD,IAAiBA,EAAe,KACnC,IACQS,EA6zBJT,EA9zBAU,EAAaP,MAAQA,KAAKO,YACtBD,EAAgBvH,OAAOyH,gBACtB,CAAEC,UAAW,cAAgBC,OAAS,SAAUlG,EAAGmG,GAAKnG,EAAEiG,UAAYE,IACvE,SAAUnG,EAAGmG,GAAK,IAAK,IAAI9E,KAAK8E,EAAOA,EAAE1H,eAAe4C,KAAIrB,EAAEqB,GAAK8E,EAAE9E,KAClE,SAAUrB,EAAGmG,GAEhB,SAASC,IAAOZ,KAAKa,YAAcrG,EADnC8F,EAAc9F,EAAGmG,GAEjBnG,EAAExB,UAAkB,OAAN2H,EAAa5H,OAAOwC,OAAOoF,IAAMC,EAAG5H,UAAY2H,EAAE3H,UAAW,IAAI4H,MAIvF,SAAWf,GACP,IAAIhB,EAA0B,SAAUiC,GAEpC,SAASjC,EAAuBkC,EAAQC,EAASC,GAC7C,IAAIC,EAAQJ,EAAO5H,KAAK8G,OAASA,KAKjC,OAJAkB,EAAMC,mBAAqB,EAC3BD,EAAME,YAAc,IAAIC,aAAa,CAAC,EAAK,EAAK,EAAK,KACrDH,EAAMI,WAAa,KACnBJ,EAAMK,WAAWhI,MAAM2H,EAAOM,WACvBN,EA8JX,OArKAX,EAAU1B,EAAwBiC,GASlCjC,EAAuB7F,UAAUyI,gBAAkB,WAC/CzB,KAAK0B,gCAET7C,EAAuB7F,UAAUuI,WAAa,SAAUR,EAAQC,EAASC,IACjD,IAAhBA,IACAA,EAAc,GAElBjB,KAAK2B,EAAI3B,KAAKe,OAASA,EACvBf,KAAKiB,YAAcA,GAAepB,EAAa+B,SAASC,oBAAsBhC,EAAa+B,SAASE,YAChGd,GACAhB,KAAK+B,WAAWf,IAGxBnC,EAAuB7F,UAAU+I,WAAa,SAAUf,GACpD,IAGItI,EAHAuI,EAAcjB,KAAKiB,YACnBe,EAAOhC,KAAKiC,SAASrJ,OACrBsJ,EAAO3C,KAAK4C,KAAKnB,EAAQpI,OAASqI,GAEtC,IAAKvI,EAAI,EAAGA,EAAIsJ,EAAMtJ,IAClBsH,KAAKiC,SAASvJ,GAAG0J,SAAWpB,EAAQ/E,MAAMvD,EAAIuI,GAAcvI,EAAI,GAAKuI,GAEzE,IAAKvI,EAAIsJ,EAAMtJ,EAAIwJ,EAAMxJ,IAAK,CAC1B,IAAI2J,EAAQ,IAAIxC,EAAayC,cAActC,KAAKe,OAAQC,EAAQ/E,MAAMvD,EAAIuI,GAAcvI,EAAI,GAAKuI,IACjGoB,EAAME,iBAAkB,EACxBF,EAAMG,QAAU3C,EAAa+B,SAASa,UACtCJ,EAAMK,QAAU7C,EAAa+B,SAASa,UACtCzC,KAAKJ,SAASyC,KAGtBxD,EAAuB7F,UAAU2J,MAAQ,WACrC,IAAK,IAAIjK,EAAI,EAAGA,EAAIsH,KAAKiC,SAASrJ,OAAQF,IACtCsH,KAAKiC,SAASvJ,GAAGiK,QAErB3C,KAAKmB,mBAAqB,GAE9BtC,EAAuB7F,UAAU4J,QAAU,SAAUC,EAAcC,EAAG3D,EAAGD,EAAGD,EAAG8D,EAAWC,GACtF,IAAIC,EAAaJ,EAAe7C,KAAKiB,aAAe,EAChDiC,EAAYL,EAAe7C,KAAKiB,YAChCjB,KAAKiC,SAASgB,IAAejD,KAAKiC,SAASgB,GAAYb,UACvDpC,KAAKiC,SAASgB,GAAYL,QAAQM,EAAWJ,EAAG3D,EAAGD,EAAGD,EAAG8D,EAAWC,IAG5EnE,EAAuB7F,UAAUyG,SAAW,SAAU0D,EAAUjE,EAAGD,EAAGmE,EAAOC,GACzE,IAAI/D,EACA+C,EAAQ,KACRiB,EAAM,EACNrB,EAAWjC,KAAKiC,SACpB,GAAwB,iBAAbkB,EAAuB,CAG9B,GADAd,EAAQJ,EADSkB,EAAWnD,KAAKiB,aAAe,GAU5CqC,EAAMH,EAAWnD,KAAKiB,gBARd,CAER,KADAoB,EAAQJ,EAAS,IAEb,OAAO,EAEXqB,EAAM,EAKVhE,EAAU+C,EAAMD,SAASkB,OAExB,CAEGhE,EADoB,iBAAb6D,EACGnG,EAAKuG,QAAQC,KAAKL,GAGlBA,EAEd,IAAK,IAAIzK,EAAI,EAAGA,EAAIuJ,EAASrJ,OAAQF,IAAK,CAGtC,IAFA,IACI+K,GADAC,EAAQzB,EAASvJ,IACL0J,SACPxI,EAAI,EAAGA,EAAI6J,EAAI7K,OAAQgB,IAC5B,GAAI6J,EAAI7J,GAAG+J,cAAgBrE,EAAQqE,YAAa,CAC5CtB,EAAQqB,EACRJ,EAAM1J,EACN,MAGR,GAAIyI,EACA,MAGR,IAAKA,EAAO,CACR,IAAS3J,EAAI,EAAGA,EAAIuJ,EAASrJ,OAAQF,IAAK,CACtC,IAAIgL,EACJ,IADIA,EAAQzB,EAASvJ,IACX0J,SAASxJ,OAASoH,KAAKiB,YAAa,CAC1CoB,EAAQqB,EACRJ,EAAMI,EAAMtB,SAASxJ,OACrB8K,EAAMtB,SAAStJ,KAAKwG,GACpB,OAGH+C,KACDA,EAAQ,IAAIxC,EAAayC,cAActC,KAAKe,OAAQzB,IAC9CiD,iBAAkB,EACxBF,EAAMG,QAAU3C,EAAa+B,SAASa,UACtCJ,EAAMK,QAAU7C,EAAa+B,SAASa,UACtCR,EAASnJ,KAAKuJ,GACdiB,EAAM,IAKlB,OADAjB,EAAMO,QAAQU,EAAKhE,EAAQsE,MAAM1E,EAAGI,EAAQsE,MAAM3E,EAAGC,EAAGD,EAAGK,EAAQsE,MAAM9F,MAAOwB,EAAQsE,MAAMxF,OAAQgF,EAAOC,IACtG,GAEXxE,EAAuB7F,UAAU6K,aAAe,SAAU9D,GACtD,GAAKC,KAAK8D,WAAW9D,KAAK+D,YAAc,IAAM/D,KAAKgE,WAAnD,CAIA,IADajE,EAASkE,QAAQC,QAClBhE,iBAAkB,CAC1B,IAAIiE,EAAKnE,KAAKoE,eACdrE,EAASsE,QAAQC,aAAaH,EAAGI,EAAGJ,EAAGxD,EAAGwD,EAAG5J,EAAG4J,EAAG3J,EAAG2J,EAAGK,GAAKzE,EAASvB,WAAY2F,EAAGM,GAAK1E,EAASvB,YAGxG,IADA,IAAIkG,EAAS1E,KAAKiC,SACTvJ,EAAI,EAAGA,EAAIgM,EAAO9L,OAAQF,IAC/BgM,EAAOhM,GAAGiM,iBAAiB5E,KAGnClB,EAAuB7F,UAAU4L,OAAS,SAAU7E,GAChD,GAAKC,KAAK8D,WAAW9D,KAAK+D,YAAc,IAAM/D,KAAKgE,WAAnD,CAGA,IAAIa,EAAS9E,EAASkE,QAAT,QACTa,EAASD,EAAOE,YACpBhF,EAASiF,MAAMC,kBAAkBJ,GACjC7E,KAAKsB,WAAawD,EAAOI,SAASC,gBAClCpF,EAASqF,eAAeF,SAASG,iBAAiBC,OAAOtF,KAAKsB,YAAYiE,OAAOvF,KAAKoE,gBACtFU,EAAOI,SAAS9D,YAAcpB,KAAKoB,YACnC0D,EAAOI,SAASM,eAAiBX,EAAO5E,SACxCF,EAAS+E,OAAOrJ,KAAKqJ,GAAQ,GAE7B,IADA,IAAIJ,EAAS1E,KAAKiC,SACTvJ,EAAI,EAAGA,EAAIgM,EAAO9L,OAAQF,IAC/BgM,EAAOhM,GAAG+M,gBAAgB1F,EAAU8E,KAG5ChG,EAAuB7F,UAAU0M,WAAa,SAAUC,GACpD,IAAIjB,EAAS1E,KAAKiC,SAClB,GAAIjC,KAAKmB,qBAAuBuD,EAAO9L,OACnC,OAAO,EAEX,IAAK,IAAIF,EAAI,EAAGA,EAAIgM,EAAO9L,OAAQF,IAC/B,GAAIgM,EAAOhM,GAAGgN,WAAWC,GACrB,OAAO,EAGf,OAAO,GAEX9G,EAAuB7F,UAAU4M,YAAc,WAC3C,IAAIlB,EAAS1E,KAAKiC,SAClBjC,KAAKmB,mBAAqBuD,EAAO9L,OACjC,IAAK,IAAIF,EAAI,EAAGA,EAAIgM,EAAO9L,OAAQF,IAC/BgM,EAAOhM,GAAGkN,eAGX/G,EAtKmB,CAuK5B7B,EAAK6I,WACPhG,EAAahB,uBAAyBA,EAzK1C,CA0KGgB,IAAiBA,EAAe,KAEnC,SAAWA,GACPA,EAAa+B,SAAW,CACpBE,YAAa,EACbgE,WAAY,KACZrD,UAAW,KACXZ,oBAAqB,EACrBkE,eAAe,EACfC,WAAYhJ,EAAKiJ,YAAYC,OAC7BC,UAAU,GARlB,CAUGtG,IAAiBA,EAAe,KA6BhCA,IAAiBA,EAAe,IA1BV,SAAUiB,GAE3B,SAASsF,EAAcrF,GACnB,IAAIG,EAAQJ,EAAO5H,KAAK8G,OAASA,KAEjC,OADAkB,EAAMH,OAASA,EACRG,EAJXX,EAAU6F,EAAetF,GAMzBsF,EAAcpN,UAAU6K,aAAe,SAAU9D,GAC7C,IAAIoE,EAAK,KACLpE,EAASkE,QAAQC,QAAQhE,mBACzBiE,EAAKnE,KAAKqG,UAAUjC,eACpBpE,KAAKqG,UAAUjC,eAAiBpH,EAAKsJ,OAAOC,UAEhDxG,EAASkE,QAAQuC,SAAS5B,OAAO5E,MAC7BD,EAASkE,QAAQC,QAAQhE,mBACzBF,KAAKqG,UAAUjC,eAAiBD,GAEpCpE,EAASsE,QAAQoC,YAAc,GAEnCL,EAAcpN,UAAU0M,WAAa,SAAUC,GAC3C,OAAO,GAEXS,EAAcpN,UAAU4M,YAAc,aAtBrB,CAyBnB5I,EAAK0J,UAGX,SAAW7G,GACP,IAAI8G,EAAwB,SAAU7F,GAElC,SAAS6F,EAAqBC,GAC1B,IAAI1F,EAAQJ,EAAO5H,KAAK8G,KAAM4G,EAAQd,WAAYc,EAAQd,aAAe9F,KACzEkB,EAAMiF,UAAW,EACjBjF,EAAMuB,UAAY,EAClBvB,EAAM2F,aAAe,KACrB3F,EAAM4F,QAAU,KAChB5F,EAAM6F,aAAe,GACrB7F,EAAM8F,QAAU,GAChB,IAAIC,EAAS/F,EAAM6F,aACfC,EAAU9F,EAAM8F,QACpB9F,EAAMuB,UAAYmE,EAAQnE,UAC1B,IAAK,IAAI7I,EAAI,EAAGA,EAAIgN,EAAQ/E,oBAAqBjI,IAAK,CAClD,IAAIsN,EAAM,IAAIlK,EAAKmK,OACnBD,EAAIE,SAASlI,EAAI0H,EAAQnE,WAAiB,EAAJ7I,GACtCsN,EAAIE,SAASnI,EAAI2H,EAAQnE,WAAa7I,GAAK,GAC3CqN,EAAOnO,KAAKoO,GACZF,EAAQlO,KAAK,GAGjB,OADAoI,EAAMiF,WAAaS,EAAQT,SACpBjF,EAiDX,OArEAX,EAAUoG,EAAsB7F,GAsBhC6F,EAAqB3N,UAAUyC,KAAO,SAAUkI,GAC5C,GAAI3D,KAAK8G,QACL,MAAM,IAAIO,MAAM,sDAEpBrH,KAAK8G,QAAUnD,EACf7C,EAAO9H,UAAUyC,KAAKvC,KAAK8G,KAAM2D,IAErCgD,EAAqB3N,UAAUsO,WAAa,SAAUhE,EAAKhE,GACvD,IAAI4H,EAAMlH,KAAK+G,aAAazD,GACxB4D,EAAI5H,QAAQqE,cAAgBrE,EAAQqE,cAGxCuD,EAAI5H,QAAUA,EACdU,KAAK8G,QAAQS,SACbvH,KAAKgH,QAAQ1D,GAAOtD,KAAK8G,QAAQU,UAErCb,EAAqB3N,UAAUyO,OAAS,SAAU1H,EAAUT,EAASoI,GACjE,IAAIC,EAAK5H,EAAS4H,GACH7J,EAANkC,KAAiBlC,MAAOM,EAAxB4B,KAAoC5B,OAC7CuJ,EAAGC,YAAYD,EAAGE,+BAAgCvI,EAAQwI,kBACtDJ,EAAUF,QAAU,IACpBE,EAAU5J,MAAQA,EAClB4J,EAAUtJ,OAASA,EACnBuJ,EAAGI,WAAWzI,EAAQ0I,OAAQ,EAAG1I,EAAQ2I,OAAQnK,EAAOM,EAAQ,EAAGkB,EAAQ2I,OAAQ3I,EAAQ4I,KAAM,OAErG,IAAIC,EAAUnI,KAAKmG,SACfgC,IAAYnI,KAAK6G,eACjB7G,KAAK6G,aAAe,IAAIuB,WAAWvI,EAAa+B,SAASa,UAAY5C,EAAa+B,SAASa,UAAY,IAG3G,IADA,IAAIwE,EAASjH,KAAK+G,aACTrO,EAAI,EAAGA,EAAIuO,EAAOrO,OAAQF,IAAK,CACpC,IAAIwO,EAAMD,EAAOvO,GACb+K,EAAMyD,EAAI5H,QAAQqE,YACtB,KAAI+D,EAAUF,SAAWxH,KAAKgH,QAAQtO,IAAtC,CAGA,IAAI2P,EAAM5E,EAAI6E,SACT7E,EAAI8E,OAAUF,GAAQA,EAAIG,SAG3BL,IAAY1E,EAAI3F,MAAQkC,KAAKyC,WAAagB,EAAIrF,OAAS4B,KAAKyC,YAC5DkF,EAAGc,cAAcnJ,EAAQ0I,OAAQ,EAAGd,EAAIE,SAASlI,EAAGgI,EAAIE,SAASnI,EAAGe,KAAKyC,UAAWzC,KAAKyC,UAAWnD,EAAQ2I,OAAQ3I,EAAQ4I,KAAMlI,KAAK6G,cAE3Ic,EAAGc,cAAcnJ,EAAQ0I,OAAQ,EAAGd,EAAIE,SAASlI,EAAGgI,EAAIE,SAASnI,EAAGK,EAAQ2I,OAAQ3I,EAAQ4I,KAAMG,EAAIG,UAE1G,OAAO,GAEJ7B,EAtEiB,CAuE1B3J,EAAKU,UAAUgL,UACjB7I,EAAa8G,qBAAuBA,EAzExC,CA0EG9G,IAAiBA,EAAe,KAEnC,SAAWA,GACP,IAAIyC,EAAiB,SAAUxB,GAE3B,SAASwB,EAAcvB,EAAQzB,GAC3B,IAAI4B,EAAQJ,EAAO5H,KAAK8G,OAASA,KAgBjC,OAfAkB,EAAMH,OAAS,EACfG,EAAMC,mBAAqB,EAC3BD,EAAME,YAAc,IAAIC,aAAa,CAAC,EAAK,EAAK,EAAK,KACrDH,EAAMI,WAAa,KACnBJ,EAAMyH,UAAY,GAClBzH,EAAM0H,SAAU,EAChB1H,EAAMsB,QAAU,EAChBtB,EAAMwB,QAAU,EAChBxB,EAAMqB,iBAAkB,EACxBrB,EAAM2H,KAAO,EACb3H,EAAM4H,GAAK,KACX5H,EAAM6H,SAAW,KACjB7H,EAAM8H,QAAU,KAChB9H,EAAM+H,OAAS,KACf/H,EAAMK,WAAWR,EAAQzB,GAClB4B,EAqRX,OAvSAX,EAAU+B,EAAexB,GAoBzBwB,EAActJ,UAAUuI,WAAa,SAAUR,EAAQqB,GAC9CA,EAGMA,aAAoB1B,QAAU0B,EAASuB,cAC9CvB,EAAW,CAACA,IAHZA,EAAW,GAKfpC,KAAKoC,SAAWA,EAChBpC,KAAKe,OAASA,GAElBuB,EAActJ,UAAU2J,MAAQ,WAC5B3C,KAAK2I,UAAU/P,OAAS,EACxBoH,KAAKmB,mBAAqB,EAC1BnB,KAAK4I,SAAU,GAEnBtG,EAActJ,UAAUyG,SAAW,SAAU0D,EAAUjE,EAAGD,EAAGmE,EAAOC,GAChE,IAAI/D,EACAuD,EAAe,EACnB,GAAwB,iBAAbM,EACPN,EAAeM,EACf7D,EAAUU,KAAKoC,SAASS,OAEvB,CAEGvD,EADoB,iBAAb6D,EACGnG,EAAKuG,QAAQC,KAAKL,GAGlBA,EAId,IAFA,IAAI+F,GAAQ,EACRC,EAAcnJ,KAAKoC,SACd1J,EAAI,EAAGA,EAAIyQ,EAAYvQ,OAAQF,IACpC,GAAIyQ,EAAYzQ,GAAGiL,cAAgBrE,EAAQqE,YAAa,CACpDd,EAAenK,EACfwQ,GAAQ,EACR,MAGR,IAAKA,EACD,OAAO,EAIf,OADAlJ,KAAK4C,QAAQC,EAAcvD,EAAQsE,MAAM1E,EAAGI,EAAQsE,MAAM3E,EAAGC,EAAGD,EAAGK,EAAQsE,MAAM9F,MAAOwB,EAAQsE,MAAMxF,OAAQgF,EAAOC,IAC9G,GAEXf,EAActJ,UAAU4J,QAAU,SAAUC,EAAcC,EAAG3D,EAAGD,EAAGD,EAAG8D,EAAWC,EAAYI,EAAOC,QAClF,IAAVD,IAAoBA,EAAQ,QAClB,IAAVC,IAAoBA,EAAQ,GAChC,IAAI+F,EAAKpJ,KAAK2I,UAEd,GADA3I,KAAK4I,QAAU5I,KAAK4I,SAAWxF,EAAQ,GAAKC,EAAQ,EAChDN,IAAcC,EACdoG,EAAGtQ,KAAKgK,GACRsG,EAAGtQ,KAAKqG,GACRiK,EAAGtQ,KAAKoG,GACRkK,EAAGtQ,KAAKmG,GACRmK,EAAGtQ,KAAKiK,GACRqG,EAAGtQ,KAAKkK,GACRoG,EAAGtQ,KAAa,EAARsK,GACRgG,EAAGtQ,KAAa,EAARuK,GACR+F,EAAGtQ,KAAK+J,OAEP,CACD,IAAInK,OAAI,EACR,GAAIqK,EAAYC,GAAe,EAC3B,IAAKtK,EAAI,EAAGA,EAAIqK,EAAYC,EAAYtK,IACpC0Q,EAAGtQ,KAAKgK,EAAIpK,EAAIsK,GAChBoG,EAAGtQ,KAAKqG,GACRiK,EAAGtQ,KAAKoG,EAAIxG,EAAIsK,GAChBoG,EAAGtQ,KAAKmG,GACRmK,EAAGtQ,KAAKkK,GACRoG,EAAGtQ,KAAKkK,GACRoG,EAAGtQ,KAAa,EAARsK,GACRgG,EAAGtQ,KAAa,EAARuK,GACR+F,EAAGtQ,KAAK+J,QAGX,GAAIG,EAAaD,GAAc,EAChC,IAAKrK,EAAI,EAAGA,EAAIsK,EAAaD,EAAWrK,IACpC0Q,EAAGtQ,KAAKgK,GACRsG,EAAGtQ,KAAKqG,EAAIzG,EAAIqK,GAChBqG,EAAGtQ,KAAKoG,GACRkK,EAAGtQ,KAAKmG,EAAIvG,EAAIqK,GAChBqG,EAAGtQ,KAAKiK,GACRqG,EAAGtQ,KAAKiK,GACRqG,EAAGtQ,KAAa,EAARsK,GACRgG,EAAGtQ,KAAa,EAARuK,GACR+F,EAAGtQ,KAAK+J,QAIZuG,EAAGtQ,KAAKgK,GACRsG,EAAGtQ,KAAKqG,GACRiK,EAAGtQ,KAAKoG,GACRkK,EAAGtQ,KAAKmG,GACRmK,EAAGtQ,KAAKiK,GACRqG,EAAGtQ,KAAKkK,GACRoG,EAAGtQ,KAAa,EAARsK,GACRgG,EAAGtQ,KAAa,EAARuK,GACR+F,EAAGtQ,KAAK+J,KAIpBP,EAActJ,UAAU6K,aAAe,SAAU9D,GAE7C,IADaA,EAASkE,QAAQC,QAClBhE,iBAAkB,CAC1B,IAAIiE,EAAKnE,KAAKoE,eACdrE,EAASsE,QAAQC,aAAaH,EAAGI,EAAGJ,EAAGxD,EAAGwD,EAAG5J,EAAG4J,EAAG3J,EAAG2J,EAAGK,GAAKzE,EAASvB,WAAY2F,EAAGM,GAAK1E,EAASvB,YAExGwB,KAAK2E,iBAAiB5E,IAE1BuC,EAActJ,UAAU2L,iBAAmB,SAAU5E,GACjD,GAA6B,IAAzBC,KAAKoC,SAASxJ,OAAlB,CAEA,IAAIyQ,EAASrJ,KAAK2I,UAClB5I,EAASsE,QAAQiF,UAAY,UAC7B,IAAK,IAAI5Q,EAAI,EAAGgD,EAAI2N,EAAOzQ,OAAQF,EAAIgD,EAAGhD,GAAK,EAAG,CAC9C,IAAI6Q,EAAKF,EAAO3Q,GAAI8Q,EAAKH,EAAO3Q,EAAI,GAChC+Q,EAAKJ,EAAO3Q,EAAI,GAAIgR,EAAKL,EAAO3Q,EAAI,GACpCiR,EAAIN,EAAO3Q,EAAI,GACfkR,EAAIP,EAAO3Q,EAAI,GACnB6Q,GAAMF,EAAO3Q,EAAI,GAAKqH,EAASkE,QAAQC,QAAQjE,SAAS,GACxDuJ,GAAMH,EAAO3Q,EAAI,GAAKqH,EAASkE,QAAQC,QAAQjE,SAAS,GACxD,IAAI4C,EAAewG,EAAO3Q,EAAI,GAC1BmK,GAAgB,EAChB9C,EAASsE,QAAQwF,UAAU7J,KAAKoC,SAASS,GAAcc,YAAY6E,OAAQe,EAAIC,EAAIG,EAAGC,EAAGH,EAAIC,EAAIC,EAAGC,IAGpG7J,EAASsE,QAAQoC,YAAc,GAC/B1G,EAASsE,QAAQyF,SAASL,EAAIC,EAAIC,EAAGC,GACrC7J,EAASsE,QAAQoC,YAAc,MAI3CnE,EAActJ,UAAU+Q,UAAY,WAC5B/J,KAAK8I,KACL9I,KAAK8I,GAAGkB,UACRhK,KAAK8I,GAAK,OAGlBxG,EAActJ,UAAU4L,OAAS,SAAU7E,GACvC,IAAI8E,EAAS9E,EAASkE,QAAT,QACTa,EAASD,EAAOE,YACpBhF,EAASiF,MAAMC,kBAAkBJ,GACjC7E,KAAKsB,WAAawD,EAAOI,SAASC,gBAClCpF,EAASqF,eAAeF,SAASG,iBAAiBC,OAAOtF,KAAKsB,YAAYiE,OAAOvF,KAAKoE,gBACtFU,EAAOI,SAAS9D,YAAcpB,KAAKoB,YACnC0D,EAAOI,SAASM,eAAiBX,EAAO5E,SACxCF,EAAS+E,OAAOrJ,KAAKqJ,GAAQ,GAC7B9E,KAAKyF,gBAAgB1F,EAAU8E,IAEnCvC,EAActJ,UAAUyM,gBAAkB,SAAU1F,EAAU8E,GAC1D,IAAIwE,EAASrJ,KAAK2I,UAClB,GAAsB,IAAlBU,EAAOzQ,OAAX,CAEA,IAAIqR,EAAaZ,EAAOzQ,OAAS,EAC7BkM,EAASD,EAAOE,YAChB3C,EAAWpC,KAAKoC,SACpB,GAAwB,IAApBA,EAASxJ,OAAb,CAEAiM,EAAOqF,aAAanK,EAAU+E,EAAQ1C,GACtC,IAAI0G,EAAK9I,KAAK8I,GACTA,IACDA,EAAKjE,EAAOsF,WACZnK,KAAK8I,GAAKA,EACV9I,KAAK6I,KAAOC,EAAGsB,GACfpK,KAAK+I,SAAW,KAChB/I,KAAKmB,mBAAqB,GAE9B0D,EAAOwF,iBAAiBJ,EAAYnB,GACpC,IAAIjH,EAAsBhC,EAAa+B,SAASC,oBAC5CyI,EAAYxB,EAAGyB,UAAU,mBACzBC,EAAWP,EAAanB,EAAG2B,YAC/B,GAAiB,IAAbD,EAAJ,CAEA,GAAIxK,KAAKmB,qBAAuBqJ,EAAU,CACtCxK,KAAKmB,mBAAqBqJ,EAC1B,IAAIE,EAAK5B,EAAG6B,OAASH,EACrB,IAAKxK,KAAK+I,UAAY/I,KAAK+I,SAAS6B,WAAaF,EAAI,CAEjD,IADA,IAAIG,EAAK/B,EAAG6B,OACLE,EAAKH,GACRG,GAAM,EAEV7K,KAAK+I,SAAW,IAAI+B,YAAYD,GAChC7K,KAAKgJ,QAAU,IAAI3H,aAAarB,KAAK+I,UACrC/I,KAAKiJ,OAAS,IAAI8B,YAAY/K,KAAK+I,UACnCuB,EAAU/C,OAAOvH,KAAK+I,UAQ1B,IANA,IAAIiC,EAAMhL,KAAKgJ,QACXiC,GAD2BjL,KAAKiJ,OAC3B,GACL/F,EAAY,EACZgI,EAASlL,KAAKwC,QACd2I,EAASnL,KAAK0C,QAEThK,EAAI,EAAGA,EAAI2Q,EAAOzQ,OAAQF,GAAK,EAAG,CAEnCsH,KAAKuC,kBACDV,EAAsB,GACtBqB,EAAamG,EAAO3Q,EAAI,IAAM,EAC9BwS,EAASlL,KAAKwC,SAA2B,EAAhB6G,EAAO3Q,EAAI,IACpCyS,EAASnL,KAAK0C,SAAY2G,EAAO3Q,EAAI,IAAM,EAAK,KAGhDwK,EAAYmG,EAAO3Q,EAAI,GACvBwS,EAAS,EACTC,EAAS,IAGjB,IAAIjM,EAAImK,EAAO3Q,EAAI,GAAIuG,EAAIoK,EAAO3Q,EAAI,GAClCiR,EAAIN,EAAO3Q,EAAI,GAAIkR,EAAIP,EAAO3Q,EAAI,GAClCoK,EAAIuG,EAAO3Q,GAAKwS,EAAQ/L,EAAIkK,EAAO3Q,EAAI,GAAKyS,EAC5C/H,EAAQiG,EAAO3Q,EAAI,GAAI2K,EAAQgG,EAAO3Q,EAAI,GAC9CsS,EAAIC,KAAQ/L,EACZ8L,EAAIC,KAAQhM,EACZ+L,EAAIC,KAAQnI,EACZkI,EAAIC,KAAQ9L,EACZ6L,EAAIC,KAAQnI,EArBF,GAsBVkI,EAAIC,KAAQ9L,EAtBF,GAuBV6L,EAAIC,KAAQnI,EAAI6G,EAvBN,GAwBVqB,EAAIC,KAAQ9L,EAAIyK,EAxBN,GAyBVoB,EAAIC,KAAQ7H,EACZ4H,EAAIC,KAAQ5H,EACZ2H,EAAIC,KAAQ/H,EACZ8H,EAAIC,KAAQ/L,EAAIyK,EAChBqB,EAAIC,KAAQhM,EACZ+L,EAAIC,KAAQnI,EAAI6G,EAChBqB,EAAIC,KAAQ9L,EACZ6L,EAAIC,KAAQnI,EAhCF,GAiCVkI,EAAIC,KAAQ9L,EAjCF,GAkCV6L,EAAIC,KAAQnI,EAAI6G,EAlCN,GAmCVqB,EAAIC,KAAQ9L,EAAIyK,EAnCN,GAoCVoB,EAAIC,KAAQ7H,EACZ4H,EAAIC,KAAQ5H,EACZ2H,EAAIC,KAAQ/H,EACZ8H,EAAIC,KAAQ/L,EAAIyK,EAChBqB,EAAIC,KAAQhM,EAAI2K,EAChBoB,EAAIC,KAAQnI,EAAI6G,EAChBqB,EAAIC,KAAQ9L,EAAIyK,EAChBoB,EAAIC,KAAQnI,EA3CF,GA4CVkI,EAAIC,KAAQ9L,EA5CF,GA6CV6L,EAAIC,KAAQnI,EAAI6G,EA7CN,GA8CVqB,EAAIC,KAAQ9L,EAAIyK,EA9CN,GA+CVoB,EAAIC,KAAQ7H,EACZ4H,EAAIC,KAAQ5H,EACZ2H,EAAIC,KAAQ/H,EACZ8H,EAAIC,KAAQ/L,EACZ8L,EAAIC,KAAQhM,EAAI2K,EAChBoB,EAAIC,KAAQnI,EACZkI,EAAIC,KAAQ9L,EAAIyK,EAChBoB,EAAIC,KAAQnI,EAtDF,GAuDVkI,EAAIC,KAAQ9L,EAvDF,GAwDV6L,EAAIC,KAAQnI,EAAI6G,EAxDN,GAyDVqB,EAAIC,KAAQ9L,EAAIyK,EAzDN,GA0DVoB,EAAIC,KAAQ7H,EACZ4H,EAAIC,KAAQ5H,EACZ2H,EAAIC,KAAQ/H,EAEhBoH,EAAU/C,OAAOyD,GAErBjL,EAASqL,SAAS3P,KAAKqN,EAAIhE,GAC3B/E,EAASqL,SAASC,KAAKrO,EAAKsO,WAAWC,UAAwB,EAAbtB,EAAgB,OAEtE3H,EAActJ,UAAU0M,WAAa,SAAUC,GAC3C,SAAI3F,KAAKmB,qBAAuBnB,KAAK2I,UAAU/P,QAC3C+M,GAAQ3F,KAAK4I,UAKrBtG,EAActJ,UAAU4M,YAAc,WAClC5F,KAAKmB,mBAAqBnB,KAAK2I,UAAU/P,QAE7C0J,EAActJ,UAAUgR,QAAU,SAAUpD,GACxC9F,EAAO9H,UAAUgR,QAAQ9Q,KAAK8G,KAAM4G,GACpC5G,KAAK+J,aAEFzH,EAxSU,CAySnBtF,EAAK6I,WACPhG,EAAayC,cAAgBA,EA3SjC,CA4SGzC,IAAiBA,EAAe,KAEnC,SAAWA,GACP,IAAI2L,EAAiB,8XACjBC,EAAiB,miBACjBC,EAAiB,SAAU5K,GAE3B,SAAS4K,EAAc5J,EAAa6J,EAAYC,GAC5C,IAAI1K,EAAQJ,EAAO5H,KAAK8G,KAAM,IAAIhD,EAAK6O,QAAQF,EAAYC,GAAa,CACpEpG,eAAgB,IAAInE,aAAa,GACjCyK,UAAW,GACXC,aAAc,GACd5G,gBAAiB,IAAInI,EAAKsJ,UACxBtG,KAIN,OAHAkB,EAAMY,YAAc,EACpBZ,EAAMY,YAAcA,EACpBjC,EAAamM,gBAAgBC,aAAa/K,EAAOA,EAAMY,aAChDZ,EAEX,OAbAX,EAAUmL,EAAe5K,GAalB4K,EAdU,CAenB1O,EAAKkP,QACPrM,EAAa6L,cAAgBA,EAC7B,IAAIS,EAAkB,SAAUrL,GAE5B,SAASqL,EAAerK,GACpB,IAAIZ,EAAQJ,EAAO5H,KAAK8G,KAAM8B,EAAa2J,EAAgB5L,EAAamM,gBAAgBI,oBAAoBtK,EAAa0J,KAAoBxL,KAE7I,OADAH,EAAamM,gBAAgBC,aAAa/K,EAAOA,EAAMY,aAChDZ,EAEX,OANAX,EAAU4L,EAAgBrL,GAMnBqL,EAPW,CAQpBT,GACF7L,EAAasM,eAAiBA,EAC9B,IAAIE,EAAgB,SAAUvL,GAE1B,SAASuL,IACL,IAAInL,EAAQJ,EAAO5H,KAAK8G,OAASA,KACjCkB,EAAMoL,SAAW,GACjBpL,EAAMuJ,YAAc,EACpBvJ,EAAMyJ,OAA0B,EAAjBzJ,EAAMoL,SACrBpL,EAAMqL,eAAiB,EACvB,IAAIC,EAAMtL,EAAMsL,IAAM,IAAIxP,EAAKyP,OAAO,IAAIpL,aAAa,IAAI,GAAM,GAMjE,OALAH,EAAMwL,aAAa,kBAAmBF,EAAK,GAAG,EAAO,EAAGtL,EAAMyJ,OAAQ,GACjE+B,aAAa,gBAAiBF,EAAK,GAAG,EAAO,EAAGtL,EAAMyJ,OAAQ,GAC9D+B,aAAa,SAAUF,EAAK,GAAG,EAAO,EAAGtL,EAAMyJ,OAAQ,IACvD+B,aAAa,QAASF,EAAK,GAAG,EAAO,EAAGtL,EAAMyJ,OAAQ,IACtD+B,aAAa,aAAcF,EAAK,GAAG,EAAO,EAAGtL,EAAMyJ,OAAQ,IACzDzJ,EAEX,OAfAX,EAAU8L,EAAcvL,GAejBuL,EAhBS,CAiBlBrP,EAAK2P,UACP9M,EAAawM,aAAeA,EAhDhC,CAiDGxM,IAAiBA,EAAe,KAEnC,SAAWA,GACP,IAAI+M,EAAgB,SAAU9L,GAE1B,SAAS8L,EAAa7M,GAClB,IAAImB,EAAQJ,EAAO5H,KAAK8G,KAAMD,IAAaC,KAW3C,OAVAkB,EAAM2L,IAAM,EACZ3L,EAAM4L,YAAc,KACpB5L,EAAM6L,MAAQ,EACd7L,EAAMjB,SAAW,CAAC,EAAG,GACrBiB,EAAM8L,OAAS,GACf9L,EAAM+L,aAAe,GACrB/L,EAAMgM,WAAa,IAAIrN,EAAasM,eAAetM,EAAa+B,SAASE,aACzEZ,EAAM4L,YAAc,IAAI9P,EAAKyP,YAAOU,GAAW,GAAM,GACrDjM,EAAMmJ,iBAAiB,KACvBnJ,EAAMkM,aACClM,EAgFX,OA7FAX,EAAUqM,EAAc9L,GAexB8L,EAAa5T,UAAUoU,WAAa,WAChC,KAAIvN,EAAa+B,SAASC,qBAAuB,GAIjD,IADA,IAAIC,EAAcjC,EAAa+B,SAASE,YAC/BpJ,EAAI,EAAGA,EAAIoJ,EAAapJ,IAAK,CAClC,IAAI4P,EAAW,IAAIzI,EAAa8G,qBAAqB9G,EAAa+B,UAC9DkF,EAAU,IAAI9J,EAAKqQ,YAAY/E,GACnCxB,EAAQwG,UAAYzN,EAAa+B,SAASoE,WAC1Cc,EAAQyG,SAAWvQ,EAAKwQ,WAAWC,MACnCzN,KAAKiN,aAAanU,KAAKwP,KAG/BsE,EAAa5T,UAAU0U,sBAAwB,SAAU3N,EAAU+E,EAAQ1C,GACvE,IAAIuL,EAAc7I,EAAOI,SAAS6G,aAClC/L,KAAKgN,OAAOpU,OAAS,EACrB,IAAK,IAAIF,EAAI,EAAGA,EAAI0J,EAASxJ,OAAQF,IAAK,CACtC,IAAI4G,EAAU8C,EAAS1J,GACvB,IAAK4G,IAAYA,EAAQiJ,MACrB,OAEJxI,EAAST,QAAQ7D,KAAK2G,EAAS1J,GAAIA,GACnCiV,EAAgB,EAAJjV,GAAS,EAAM0J,EAAS1J,GAAGiL,YAAY7F,MACnD6P,EAAgB,EAAJjV,EAAQ,GAAK,EAAM0J,EAAS1J,GAAGiL,YAAYvF,OAE3D0G,EAAOI,SAAS6G,aAAe4B,GAEnCf,EAAa5T,UAAUkR,aAAe,SAAUnK,EAAU+E,EAAQ1C,GAC9D,IAAIwL,EAAMxL,EAASxJ,OACfkJ,EAAcjC,EAAa+B,SAASE,YACxC,KAAI8L,EAAM/N,EAAa+B,SAASC,oBAAsBC,GAGtD,GAAIjC,EAAa+B,SAASC,qBAAuB,EAC7C7B,KAAK0N,sBAAsB3N,EAAU+E,EAAQ1C,OADjD,CAKA,IADA,IAAI1J,EAAI,EACDA,EAAIkV,EAAKlV,IAAK,CACjB,IAAI4G,EAAU8C,EAAS1J,GACvB,GAAK4G,GAAYA,EAAQiJ,MAEbvI,KAAKiN,aAAavU,GAAK,GAC7B4O,WAAe,EAAJ5O,EAAO4G,GAE5B,IAAIuO,EAAYnV,EAAI,GAAM,EAC1B,IAAKA,EAAI,EAAGA,EAAImV,EAAUnV,IACtBqH,EAAST,QAAQ7D,KAAKuE,KAAKiN,aAAavU,GAAGoO,QAASpO,KAG5DkU,EAAa5T,UAAU8U,MAAQ,aAE/BlB,EAAa5T,UAAUmR,SAAW,WAC9B,IAAI4D,EAAO,IAAIlO,EAAawM,aAG5B,OAFA0B,EAAKC,SAAShO,KAAK8M,aACnBiB,EAAKxB,eAAiB0B,KAAKC,MACpBH,GAEXnB,EAAa5T,UAAUqR,iBAAmB,SAAU8D,EAAMrF,QAC3C,IAAPA,IAAiBA,EAAK,MAC1B,IAAIsF,EAAsB,EAAPD,EACnB,KAAIC,GAAgBpO,KAAK+M,OAAzB,CAIA,IADA,IAAIa,EAAMQ,EACHR,EAAMQ,GACTR,IAAQ,EAEZ5N,KAAK+M,MAAQqB,EACbpO,KAAK8M,YAAYvF,OAAOvK,EAAKqR,MAAMC,sBAAsBH,EAAMtO,EAAa+B,SAASmE,kBAEzF6G,EAAa5T,UAAU+L,UAAY,WAC/B,OAAO/E,KAAKkN,YAEhBN,EAAa5T,UAAUgR,QAAU,WAC7BlJ,EAAO9H,UAAUgR,QAAQ9Q,KAAK8G,MAC9BA,KAAKkN,WAAa,MAEfN,EA9FS,CA+FlB5P,EAAKuR,gBACP1O,EAAa+M,aAAeA,EAC5B5P,EAAKwR,SAASnO,eAAe,UAAWuM,GAlG5C,CAmGG/M,IAAiBA,EAAe,KAEnC,SAAWA,GACP,IAAI4O,EAAU,SAAU3N,GAEpB,SAAS2N,EAAOvK,EAASnD,GACrB,IAAIG,EAAQJ,EAAO5H,KAAK8G,OAASA,KAIjC,OAHAkB,EAAMwN,qBAAuB,EAC7BxN,EAAMgD,QAAUA,EAChBhD,EAAMS,EAAIZ,EACHG,EA4DX,OAlEAX,EAAUkO,EAAQ3N,GAQlB2N,EAAOzV,UAAU2J,MAAQ,WAErB,IADA,IAAI+B,EAAS1E,KAAKiC,SACTvJ,EAAI,EAAGA,EAAIgM,EAAO9L,OAAQF,IAC/BgM,EAAOhM,GAAGiK,QACd3C,KAAK2O,gBAAkB,GAE3BF,EAAOzV,UAAU4V,aAAe,WAC5B,IAAI1K,EAAUlE,KAAKkE,QACfQ,EAAS1E,KAAKiC,SACd4M,EAAW7O,KAAK2O,kBAAoBjK,EAAO9L,OAC/CoH,KAAK2O,gBAAkBjK,EAAO9L,OAC9B,IAcIF,EAdA8T,EAAMxM,KAAK8O,aACXC,EAAa/O,KAAKgP,YActB,GAbKxC,IACDA,EAAMxM,KAAK8O,aAAehS,SAASmS,cAAc,WACjDF,EAAa/O,KAAKgP,YAAc,IAAIhS,EAAKoD,eAAe,IAAK,IAAK,CAAExB,KAAM4N,KAC/DnI,QAAU0K,EAAWG,YAChCH,EAAW9K,QAAQC,QAAQhE,kBAAmB,GAE9CsM,EAAI1O,QAAUoG,EAAQiL,aACtB3C,EAAIpO,SAAW8F,EAAQkL,eACvB5C,EAAI1O,MAAQoG,EAAQiL,YACpB3C,EAAIpO,OAAS8F,EAAQkL,aACrBP,GAAW,IAGVA,EACD,IAAKnW,EAAI,EAAGA,EAAIgM,EAAO9L,OAAQF,IAC3B,GAAIgM,EAAOhM,GAAGgN,WAAW1F,KAAK0O,sBAAwBxK,EAAQsB,gBAAiB,CAC3EqJ,GAAW,EACX,MAKZ,GADA7O,KAAK0O,oBAAsBxK,EAAQsB,eAC/BqJ,EAKA,IAJI3K,EAAQmL,eACRnL,EAAQmL,cAAcN,GAE1BA,EAAW1K,QAAQiL,UAAU,EAAG,EAAG9C,EAAI1O,MAAO0O,EAAIpO,QAC7C1F,EAAI,EAAGA,EAAIgM,EAAO9L,OAAQF,IAC3BgM,EAAOhM,GAAGkN,cACVlB,EAAOhM,GAAGmL,aAAakL,GAI/B,IADA/O,KAAKuP,eAAiBvP,KAAKoE,eACtB1L,EAAI,EAAGA,EAAIgM,EAAO9L,OAAQF,IAAK,CAChCsH,KAAKuP,eAAiB7K,EAAOhM,GAAG0L,eAChC,QAGRqK,EAAOzV,UAAU6K,aAAe,SAAU9D,GACtCC,KAAK4O,eACL,IAAIzK,EAAKnE,KAAKuP,eACdxP,EAASsE,QAAQC,aAAaH,EAAGI,EAAGJ,EAAGxD,EAAGwD,EAAG5J,EAAG4J,EAAG3J,EAAG2J,EAAGK,GAAKzE,EAASvB,WAAY2F,EAAGM,GAAK1E,EAASvB,YACtFwB,KAAKkE,QACnBnE,EAASsE,QAAQwF,UAAU7J,KAAK8O,aAAc,EAAG,IAE9CL,EAnEG,CAoEZzR,EAAK6I,WACPhG,EAAa4O,OAASA,EAtE1B,CAuEG5O,IAAiBA,EAAe,KAEnC,SAAWA,GACP7C,EAAKkH,QAAUrE,EADnB,CAEGA,IAAiBA,EAAe,KAEnC,SAAWA,IAEP,SAAWmM,GAcPA,EAAgBC,aAbhB,SAAsBnH,EAAQhD,GAE1B,IADA,IAAI0N,EAAe,GACV9W,EAAI,EAAGA,EAAIoJ,EAAapJ,IAC7B8W,EAAa9W,GAAKA,EAEtBoM,EAAOI,SAAS4G,UAAY0D,EAC5B,IAAI7B,EAAc,GAClB,IAASjV,EAAI,EAAGA,EAAIoJ,EAAapJ,IAC7BiV,EAAY7U,KAAK,EAAM+G,EAAa+B,SAASkE,YAC7C6H,EAAY7U,KAAK,EAAM+G,EAAa+B,SAASkE,YAEjDhB,EAAOI,SAAS6G,aAAe4B,GAOnC3B,EAAgBI,oBAJhB,SAA6BtK,EAAa2N,GACtC,OAAOA,EAAYC,QAAQ,YAAa5N,EAAc,IACjD4N,QAAQ,cAAe1P,KAAK2P,kBAAkB7N,KAuBvDkK,EAAgB2D,kBApBhB,SAA2B7N,GACvB,IAAI8N,EAAM,GACVA,GAAO,KACPA,GAAO,KACPA,GAAO,2BACPA,GAAO,2BACPA,GAAO,MACP,IAAK,IAAIlX,EAAI,EAAGA,EAAIoJ,EAAapJ,IAC7BkX,GAAO,UACHlX,EAAIoJ,EAAc,IAClB8N,GAAO,mBAAqBlX,EAAI,OAEpCkX,GAAO,MACPA,GAAO,mCAAqClX,EAAI,kCAAoCA,EAAI,MACxFkX,GAAO,MAIX,OAFAA,GAAO,KACPA,GAAO,MArCf,CAyCqB/P,EAAamM,kBAAoBnM,EAAamM,gBAAkB,KA3CzF,CA4CGnM,IAAiBA,EAAe","file":"bundle-main-86bb43a88b3352f9d588.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpGame\"] = window[\"webpackJsonpGame\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([17,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// noinspection ES6UnusedImports\nimport STYLES from \"./style.css\"\n// noinspection ES6UnusedImports\n\nimport * as PIXI from \"pixi.js\"\nimport \"./pixi-tilemap\"\n\nimport SimplexNoise from \"simplex-noise\"\n\nfunction determineScale(width)\n{\n    let scale = 1;\n\n    let curr = width;\n    while (curr > 1024)\n    {\n        curr /= 2;\n        scale *= 2;\n    }\n\n    console.log(\"Set scale to\", scale);\n\n    return scale;\n}\n\nconst noise = new SimplexNoise();\n\nlet loading;\n\nconst NOISE_SCALE = 0.03;\nconst NOISE_SCALE2 = 0.2;\n\nconst WATER_LINE = 0;\nconst SAND_LINE = WATER_LINE + (1 - WATER_LINE) * 0.2;\n\nwindow.onload = () => {\n\n    loading = document.querySelector(\"div.loading\");\n\n    PIXI.Loader.shared\n        .add(\"atlas/atlas-0.json\")\n        .load(setup);\n};\n\n// PIXI.Loader.shared.onProgress.add(function (ev) {\n//     console.log(ev.progress);\n// });\n\nlet groundTiles;\n\nconst GRASS = [\n    \"grass.png\",\n    \"grass2.png\",\n    \"grass3.png\"\n];\nconst DIRT = [\n    \"dirt.png\",\n    \"dirt2.png\",\n    \"dirt3.png\"\n];\nconst SAND = [\n    \"sand.png\",\n    \"sand2.png\",\n    \"sand3.png\"\n];\n\nconst WATER = [\n    \"water.png\",\n    \"water2.png\",\n    \"water3.png\"\n];\n\n\nfunction setup(loader, resources)\n{\n\n    loading.parentNode.removeChild(loading);\n\n    //console.log({loader,resources});\n\n    const scale = determineScale(window.innerWidth);\n\n    const width = window.innerWidth / scale;\n    const height = window.innerHeight / scale;\n\n    const app = new PIXI.Application({\n        width: width,\n        height: height,\n        backgroundColor: 0x1099bb,\n        resolution: (window.devicePixelRatio || 1) * scale,\n    });\n    document.body.appendChild(app.view);\n\n\n    function drawTiles()\n    {\n        // The +5 gives us a buffer around the current player\n        const widthInTiles = (width / 16) | 0;\n        const heightInTiles = (height / 16) | 0;\n\n        for (let y = 0; y < heightInTiles; y++)\n        {\n            for (let x = 0; x < widthInTiles; x++)\n            {\n\n                const v = noise.noise2D(x * NOISE_SCALE,  y * NOISE_SCALE);\n                const v2 = noise.noise2D(y * NOISE_SCALE2,  x * NOISE_SCALE2);\n\n                let texture;\n                if (v < WATER_LINE)\n                {\n                    texture = WATER[(Math.random() * WATER.length) | 0];\n                }\n                else if (v < SAND_LINE)\n                {\n                    texture = SAND[(Math.random() * SAND.length) | 0];\n                }\n                else\n                {\n                    if (v2 > -0.4)\n                    {\n                        texture = GRASS[(Math.random() * GRASS.length) | 0];\n                    }\n                    else\n                    {\n                        texture = DIRT[(Math.random() * DIRT.length) | 0];\n                    }\n                }\n\n                groundTiles.addFrame(texture, x * 16, y * 16);\n            }\n        }\n    }\n\n\n    // const container = new PIXI.Container();\n    //\n    // app.stage.addChild(container);\n    //\n    // // Create a new texture\n    // const texture = resources[ATLAS].texture;\n    //\n    // // Create a 5x5 grid of bunnies\n    // for (let i = 0; i < 25; i++)\n    // {\n    //     const bunny = new PIXI.Sprite(texture);\n    //     bunny.anchor.set(0.5);\n    //     bunny.x = (i % 5) * 40;\n    //     bunny.y = Math.floor(i / 5) * 40;\n    //     container.addChild(bunny);\n    // }\n    //\n    // // Move container to the center\n    // container.x = app.screen.width / 2;\n    // container.y = app.screen.height / 2;\n    //\n    // // Center bunny sprite in local container coordinates\n    // container.pivot.x = container.width / 2;\n    // container.pivot.y = container.height / 2;\n\n    // Create our tile map based on the ground texture\n\n    groundTiles = new PIXI.tilemap.CompositeRectTileLayer(0, PIXI.utils.TextureCache[\"atlas/atlas-0.json_image\"]);\n    drawTiles();\n\n    app.stage.addChild(groundTiles);\n\n    // // Listen for animate update\n    // app.ticker.add((delta) => {\n    //     // rotate the container!\n    //     // use delta to create frame-independent transform\n    //     container.rotation -= 0.01 * delta;\n    // });\n}\n","var pixi_tilemap;\n(function (pixi_tilemap) {\n    var CanvasTileRenderer = (function () {\n        function CanvasTileRenderer(renderer) {\n            this.tileAnim = [0, 0];\n            this.dontUseTransform = false;\n            this.renderer = renderer;\n            this.tileAnim = [0, 0];\n        }\n        return CanvasTileRenderer;\n    }());\n    pixi_tilemap.CanvasTileRenderer = CanvasTileRenderer;\n    var cr = PIXI.CanvasRenderer;\n    if (cr) {\n        cr.registerPlugin('tilemap', CanvasTileRenderer);\n    }\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var CompositeRectTileLayer = (function (_super) {\n        __extends(CompositeRectTileLayer, _super);\n        function CompositeRectTileLayer(zIndex, bitmaps, texPerChild) {\n            var _this = _super.call(this) || this;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.initialize.apply(_this, arguments);\n            return _this;\n        }\n        CompositeRectTileLayer.prototype.updateTransform = function () {\n            this.displayObjectUpdateTransform();\n        };\n        CompositeRectTileLayer.prototype.initialize = function (zIndex, bitmaps, texPerChild) {\n            if (texPerChild === true) {\n                texPerChild = 0;\n            }\n            this.z = this.zIndex = zIndex;\n            this.texPerChild = texPerChild || pixi_tilemap.Constant.boundCountPerBuffer * pixi_tilemap.Constant.maxTextures;\n            if (bitmaps) {\n                this.setBitmaps(bitmaps);\n            }\n        };\n        CompositeRectTileLayer.prototype.setBitmaps = function (bitmaps) {\n            var texPerChild = this.texPerChild;\n            var len1 = this.children.length;\n            var len2 = Math.ceil(bitmaps.length / texPerChild);\n            var i;\n            for (i = 0; i < len1; i++) {\n                this.children[i].textures = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\n            }\n            for (i = len1; i < len2; i++) {\n                var layer = new pixi_tilemap.RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild));\n                layer.compositeParent = true;\n                layer.offsetX = pixi_tilemap.Constant.boundSize;\n                layer.offsetY = pixi_tilemap.Constant.boundSize;\n                this.addChild(layer);\n            }\n        };\n        CompositeRectTileLayer.prototype.clear = function () {\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i].clear();\n            }\n            this.modificationMarker = 0;\n        };\n        CompositeRectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight) {\n            var childIndex = textureIndex / this.texPerChild >> 0;\n            var textureId = textureIndex % this.texPerChild;\n            if (this.children[childIndex] && this.children[childIndex].textures) {\n                this.children[childIndex].addRect(textureId, u, v, x, y, tileWidth, tileHeight);\n            }\n        };\n        CompositeRectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var layer = null;\n            var ind = 0;\n            var children = this.children;\n            if (typeof texture_ === \"number\") {\n                var childIndex = texture_ / this.texPerChild >> 0;\n                layer = children[childIndex];\n                if (!layer) {\n                    layer = children[0];\n                    if (!layer) {\n                        return false;\n                    }\n                    ind = 0;\n                }\n                else {\n                    ind = texture_ % this.texPerChild;\n                }\n                texture = layer.textures[ind];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    var tex = child.textures;\n                    for (var j = 0; j < tex.length; j++) {\n                        if (tex[j].baseTexture === texture.baseTexture) {\n                            layer = child;\n                            ind = j;\n                            break;\n                        }\n                    }\n                    if (layer) {\n                        break;\n                    }\n                }\n                if (!layer) {\n                    for (var i = 0; i < children.length; i++) {\n                        var child = children[i];\n                        if (child.textures.length < this.texPerChild) {\n                            layer = child;\n                            ind = child.textures.length;\n                            child.textures.push(texture);\n                            break;\n                        }\n                    }\n                    if (!layer) {\n                        layer = new pixi_tilemap.RectTileLayer(this.zIndex, texture);\n                        layer.compositeParent = true;\n                        layer.offsetX = pixi_tilemap.Constant.boundSize;\n                        layer.offsetY = pixi_tilemap.Constant.boundSize;\n                        children.push(layer);\n                        ind = 0;\n                    }\n                }\n            }\n            layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        CompositeRectTileLayer.prototype.renderCanvas = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderCanvasCore(renderer);\n            }\n        };\n        CompositeRectTileLayer.prototype.render = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderWebGLCore(renderer, plugin);\n            }\n        };\n        CompositeRectTileLayer.prototype.isModified = function (anim) {\n            var layers = this.children;\n            if (this.modificationMarker !== layers.length) {\n                return true;\n            }\n            for (var i = 0; i < layers.length; i++) {\n                if (layers[i].isModified(anim)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        CompositeRectTileLayer.prototype.clearModify = function () {\n            var layers = this.children;\n            this.modificationMarker = layers.length;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].clearModify();\n            }\n        };\n        return CompositeRectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.CompositeRectTileLayer = CompositeRectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    pixi_tilemap.Constant = {\n        maxTextures: 4,\n        bufferSize: 2048,\n        boundSize: 1024,\n        boundCountPerBuffer: 1,\n        use32bitIndex: false,\n        SCALE_MODE: PIXI.SCALE_MODES.LINEAR,\n        DO_CLEAR: true\n    };\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var GraphicsLayer = (function (_super) {\n        __extends(GraphicsLayer, _super);\n        function GraphicsLayer(zIndex) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = zIndex;\n            return _this;\n        }\n        GraphicsLayer.prototype.renderCanvas = function (renderer) {\n            var wt = null;\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                wt = this.transform.worldTransform;\n                this.transform.worldTransform = PIXI.Matrix.IDENTITY;\n            }\n            renderer.plugins.graphics.render(this);\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                this.transform.worldTransform = wt;\n            }\n            renderer.context.globalAlpha = 1.0;\n        };\n        GraphicsLayer.prototype.isModified = function (anim) {\n            return false;\n        };\n        GraphicsLayer.prototype.clearModify = function () {\n        };\n        return GraphicsLayer;\n    }(PIXI.Graphics));\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var MultiTextureResource = (function (_super) {\n        __extends(MultiTextureResource, _super);\n        function MultiTextureResource(options) {\n            var _this = _super.call(this, options.bufferSize, options.bufferSize) || this;\n            _this.DO_CLEAR = false;\n            _this.boundSize = 0;\n            _this._clearBuffer = null;\n            _this.baseTex = null;\n            _this.boundSprites = [];\n            _this.dirties = [];\n            var bounds = _this.boundSprites;\n            var dirties = _this.dirties;\n            _this.boundSize = options.boundSize;\n            for (var j = 0; j < options.boundCountPerBuffer; j++) {\n                var spr = new PIXI.Sprite();\n                spr.position.x = options.boundSize * (j & 1);\n                spr.position.y = options.boundSize * (j >> 1);\n                bounds.push(spr);\n                dirties.push(0);\n            }\n            _this.DO_CLEAR = !!options.DO_CLEAR;\n            return _this;\n        }\n        MultiTextureResource.prototype.bind = function (baseTexture) {\n            if (this.baseTex) {\n                throw new Error('Only one baseTexture is allowed for this resource!');\n            }\n            this.baseTex = baseTexture;\n            _super.prototype.bind.call(this, baseTexture);\n        };\n        MultiTextureResource.prototype.setTexture = function (ind, texture) {\n            var spr = this.boundSprites[ind];\n            if (spr.texture.baseTexture === texture.baseTexture) {\n                return;\n            }\n            spr.texture = texture;\n            this.baseTex.update();\n            this.dirties[ind] = this.baseTex.dirtyId;\n        };\n        MultiTextureResource.prototype.upload = function (renderer, texture, glTexture) {\n            var gl = renderer.gl;\n            var _a = this, width = _a.width, height = _a.height;\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n            if (glTexture.dirtyId < 0) {\n                glTexture.width = width;\n                glTexture.height = height;\n                gl.texImage2D(texture.target, 0, texture.format, width, height, 0, texture.format, texture.type, null);\n            }\n            var doClear = this.DO_CLEAR;\n            if (doClear && !this._clearBuffer) {\n                this._clearBuffer = new Uint8Array(pixi_tilemap.Constant.boundSize * pixi_tilemap.Constant.boundSize * 4);\n            }\n            var bounds = this.boundSprites;\n            for (var i = 0; i < bounds.length; i++) {\n                var spr = bounds[i];\n                var tex = spr.texture.baseTexture;\n                if (glTexture.dirtyId >= this.dirties[i]) {\n                    continue;\n                }\n                var res = tex.resource;\n                if (!tex.valid || !res || !res.source) {\n                    continue;\n                }\n                if (doClear && (tex.width < this.boundSize || tex.height < this.boundSize)) {\n                    gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, this.boundSize, this.boundSize, texture.format, texture.type, this._clearBuffer);\n                }\n                gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, texture.format, texture.type, res.source);\n            }\n            return true;\n        };\n        return MultiTextureResource;\n    }(PIXI.resources.Resource));\n    pixi_tilemap.MultiTextureResource = MultiTextureResource;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var RectTileLayer = (function (_super) {\n        __extends(RectTileLayer, _super);\n        function RectTileLayer(zIndex, texture) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = 0;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.pointsBuf = [];\n            _this.hasAnim = false;\n            _this.offsetX = 0;\n            _this.offsetY = 0;\n            _this.compositeParent = false;\n            _this.vbId = 0;\n            _this.vb = null;\n            _this.vbBuffer = null;\n            _this.vbArray = null;\n            _this.vbInts = null;\n            _this.initialize(zIndex, texture);\n            return _this;\n        }\n        RectTileLayer.prototype.initialize = function (zIndex, textures) {\n            if (!textures) {\n                textures = [];\n            }\n            else if (!(textures instanceof Array) && textures.baseTexture) {\n                textures = [textures];\n            }\n            this.textures = textures;\n            this.zIndex = zIndex;\n        };\n        RectTileLayer.prototype.clear = function () {\n            this.pointsBuf.length = 0;\n            this.modificationMarker = 0;\n            this.hasAnim = false;\n        };\n        RectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var textureIndex = 0;\n            if (typeof texture_ === \"number\") {\n                textureIndex = texture_;\n                texture = this.textures[textureIndex];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                var found = false;\n                var textureList = this.textures;\n                for (var i = 0; i < textureList.length; i++) {\n                    if (textureList[i].baseTexture === texture.baseTexture) {\n                        textureIndex = i;\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    return false;\n                }\n            }\n            this.addRect(textureIndex, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        RectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight, animX, animY) {\n            if (animX === void 0) { animX = 0; }\n            if (animY === void 0) { animY = 0; }\n            var pb = this.pointsBuf;\n            this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\n            if (tileWidth === tileHeight) {\n                pb.push(u);\n                pb.push(v);\n                pb.push(x);\n                pb.push(y);\n                pb.push(tileWidth);\n                pb.push(tileHeight);\n                pb.push(animX | 0);\n                pb.push(animY | 0);\n                pb.push(textureIndex);\n            }\n            else {\n                var i = void 0;\n                if (tileWidth % tileHeight === 0) {\n                    for (i = 0; i < tileWidth / tileHeight; i++) {\n                        pb.push(u + i * tileHeight);\n                        pb.push(v);\n                        pb.push(x + i * tileHeight);\n                        pb.push(y);\n                        pb.push(tileHeight);\n                        pb.push(tileHeight);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else if (tileHeight % tileWidth === 0) {\n                    for (i = 0; i < tileHeight / tileWidth; i++) {\n                        pb.push(u);\n                        pb.push(v + i * tileWidth);\n                        pb.push(x);\n                        pb.push(y + i * tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else {\n                    pb.push(u);\n                    pb.push(v);\n                    pb.push(x);\n                    pb.push(y);\n                    pb.push(tileWidth);\n                    pb.push(tileHeight);\n                    pb.push(animX | 0);\n                    pb.push(animY | 0);\n                    pb.push(textureIndex);\n                }\n            }\n        };\n        RectTileLayer.prototype.renderCanvas = function (renderer) {\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            this.renderCanvasCore(renderer);\n        };\n        RectTileLayer.prototype.renderCanvasCore = function (renderer) {\n            if (this.textures.length === 0)\n                return;\n            var points = this.pointsBuf;\n            renderer.context.fillStyle = '#000000';\n            for (var i = 0, n = points.length; i < n; i += 9) {\n                var x1 = points[i], y1 = points[i + 1];\n                var x2 = points[i + 2], y2 = points[i + 3];\n                var w = points[i + 4];\n                var h = points[i + 5];\n                x1 += points[i + 6] * renderer.plugins.tilemap.tileAnim[0];\n                y1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[1];\n                var textureIndex = points[i + 8];\n                if (textureIndex >= 0) {\n                    renderer.context.drawImage(this.textures[textureIndex].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\n                }\n                else {\n                    renderer.context.globalAlpha = 0.5;\n                    renderer.context.fillRect(x2, y2, w, h);\n                    renderer.context.globalAlpha = 1;\n                }\n            }\n        };\n        RectTileLayer.prototype.destroyVb = function () {\n            if (this.vb) {\n                this.vb.destroy();\n                this.vb = null;\n            }\n        };\n        RectTileLayer.prototype.render = function (renderer) {\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            this.renderWebGLCore(renderer, plugin);\n        };\n        RectTileLayer.prototype.renderWebGLCore = function (renderer, plugin) {\n            var points = this.pointsBuf;\n            if (points.length === 0)\n                return;\n            var rectsCount = points.length / 9;\n            var shader = plugin.getShader();\n            var textures = this.textures;\n            if (textures.length === 0)\n                return;\n            plugin.bindTextures(renderer, shader, textures);\n            var vb = this.vb;\n            if (!vb) {\n                vb = plugin.createVb();\n                this.vb = vb;\n                this.vbId = vb.id;\n                this.vbBuffer = null;\n                this.modificationMarker = 0;\n            }\n            plugin.checkIndexBuffer(rectsCount, vb);\n            var boundCountPerBuffer = pixi_tilemap.Constant.boundCountPerBuffer;\n            var vertexBuf = vb.getBuffer('aVertexPosition');\n            var vertices = rectsCount * vb.vertPerQuad;\n            if (vertices === 0)\n                return;\n            if (this.modificationMarker !== vertices) {\n                this.modificationMarker = vertices;\n                var vs = vb.stride * vertices;\n                if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\n                    var bk = vb.stride;\n                    while (bk < vs) {\n                        bk *= 2;\n                    }\n                    this.vbBuffer = new ArrayBuffer(bk);\n                    this.vbArray = new Float32Array(this.vbBuffer);\n                    this.vbInts = new Uint32Array(this.vbBuffer);\n                    vertexBuf.update(this.vbBuffer);\n                }\n                var arr = this.vbArray, ints = this.vbInts;\n                var sz = 0;\n                var textureId = 0;\n                var shiftU = this.offsetX;\n                var shiftV = this.offsetY;\n                var tint = -1;\n                for (var i = 0; i < points.length; i += 9) {\n                    var eps = 0.5;\n                    if (this.compositeParent) {\n                        if (boundCountPerBuffer > 1) {\n                            textureId = (points[i + 8] >> 2);\n                            shiftU = this.offsetX * (points[i + 8] & 1);\n                            shiftV = this.offsetY * ((points[i + 8] >> 1) & 1);\n                        }\n                        else {\n                            textureId = points[i + 8];\n                            shiftU = 0;\n                            shiftV = 0;\n                        }\n                    }\n                    var x = points[i + 2], y = points[i + 3];\n                    var w = points[i + 4], h = points[i + 5];\n                    var u = points[i] + shiftU, v = points[i + 1] + shiftV;\n                    var animX = points[i + 6], animY = points[i + 7];\n                    arr[sz++] = x;\n                    arr[sz++] = y;\n                    arr[sz++] = u;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                }\n                vertexBuf.update(arr);\n            }\n            renderer.geometry.bind(vb, shader);\n            renderer.geometry.draw(PIXI.DRAW_MODES.TRIANGLES, rectsCount * 6, 0);\n        };\n        RectTileLayer.prototype.isModified = function (anim) {\n            if (this.modificationMarker !== this.pointsBuf.length ||\n                anim && this.hasAnim) {\n                return true;\n            }\n            return false;\n        };\n        RectTileLayer.prototype.clearModify = function () {\n            this.modificationMarker = this.pointsBuf.length;\n        };\n        RectTileLayer.prototype.destroy = function (options) {\n            _super.prototype.destroy.call(this, options);\n            this.destroyVb();\n        };\n        return RectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.RectTileLayer = RectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var rectShaderFrag = \"\\nvarying vec2 vTextureCoord;\\nvarying vec4 vFrame;\\nvarying float vTextureId;\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\n\\nvoid main(void){\\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\\n   float textureId = floor(vTextureId + 0.5);\\n\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\\n\";\n    var rectShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aFrame;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\n\\nuniform mat3 projTransMatrix;\\nuniform vec2 animationFrame;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vTextureId;\\nvarying vec4 vFrame;\\n\\nvoid main(void){\\n   gl_Position = vec4((projTransMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vec2 anim = aAnim * animationFrame;\\n   vTextureCoord = aTextureCoord + anim;\\n   vFrame = aFrame + vec4(anim, anim);\\n   vTextureId = aTextureId;\\n}\\n\";\n    var TilemapShader = (function (_super) {\n        __extends(TilemapShader, _super);\n        function TilemapShader(maxTextures, shaderVert, shaderFrag) {\n            var _this = _super.call(this, new PIXI.Program(shaderVert, shaderFrag), {\n                animationFrame: new Float32Array(2),\n                uSamplers: [],\n                uSamplerSize: [],\n                projTransMatrix: new PIXI.Matrix()\n            }) || this;\n            _this.maxTextures = 0;\n            _this.maxTextures = maxTextures;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return TilemapShader;\n    }(PIXI.Shader));\n    pixi_tilemap.TilemapShader = TilemapShader;\n    var RectTileShader = (function (_super) {\n        __extends(RectTileShader, _super);\n        function RectTileShader(maxTextures) {\n            var _this = _super.call(this, maxTextures, rectShaderVert, pixi_tilemap.shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)) || this;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return RectTileShader;\n    }(TilemapShader));\n    pixi_tilemap.RectTileShader = RectTileShader;\n    var RectTileGeom = (function (_super) {\n        __extends(RectTileGeom, _super);\n        function RectTileGeom() {\n            var _this = _super.call(this) || this;\n            _this.vertSize = 11;\n            _this.vertPerQuad = 4;\n            _this.stride = _this.vertSize * 4;\n            _this.lastTimeAccess = 0;\n            var buf = _this.buf = new PIXI.Buffer(new Float32Array(2), true, false);\n            _this.addAttribute('aVertexPosition', buf, 0, false, 0, _this.stride, 0)\n                .addAttribute('aTextureCoord', buf, 0, false, 0, _this.stride, 2 * 4)\n                .addAttribute('aFrame', buf, 0, false, 0, _this.stride, 4 * 4)\n                .addAttribute('aAnim', buf, 0, false, 0, _this.stride, 8 * 4)\n                .addAttribute('aTextureId', buf, 0, false, 0, _this.stride, 10 * 4);\n            return _this;\n        }\n        return RectTileGeom;\n    }(PIXI.Geometry));\n    pixi_tilemap.RectTileGeom = RectTileGeom;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var TileRenderer = (function (_super) {\n        __extends(TileRenderer, _super);\n        function TileRenderer(renderer) {\n            var _this = _super.call(this, renderer) || this;\n            _this.sn = -1;\n            _this.indexBuffer = null;\n            _this.ibLen = 0;\n            _this.tileAnim = [0, 0];\n            _this.texLoc = [];\n            _this.texResources = [];\n            _this.rectShader = new pixi_tilemap.RectTileShader(pixi_tilemap.Constant.maxTextures);\n            _this.indexBuffer = new PIXI.Buffer(undefined, true, true);\n            _this.checkIndexBuffer(2000);\n            _this.initBounds();\n            return _this;\n        }\n        TileRenderer.prototype.initBounds = function () {\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                return;\n            }\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            for (var i = 0; i < maxTextures; i++) {\n                var resource = new pixi_tilemap.MultiTextureResource(pixi_tilemap.Constant);\n                var baseTex = new PIXI.BaseTexture(resource);\n                baseTex.scaleMode = pixi_tilemap.Constant.SCALE_MODE;\n                baseTex.wrapMode = PIXI.WRAP_MODES.CLAMP;\n                this.texResources.push(resource);\n            }\n        };\n        TileRenderer.prototype.bindTexturesWithoutRT = function (renderer, shader, textures) {\n            var samplerSize = shader.uniforms.uSamplerSize;\n            this.texLoc.length = 0;\n            for (var i = 0; i < textures.length; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid) {\n                    return;\n                }\n                renderer.texture.bind(textures[i], i);\n                samplerSize[i * 2] = 1.0 / textures[i].baseTexture.width;\n                samplerSize[i * 2 + 1] = 1.0 / textures[i].baseTexture.height;\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        };\n        TileRenderer.prototype.bindTextures = function (renderer, shader, textures) {\n            var len = textures.length;\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            if (len > pixi_tilemap.Constant.boundCountPerBuffer * maxTextures) {\n                return;\n            }\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                this.bindTexturesWithoutRT(renderer, shader, textures);\n                return;\n            }\n            var i = 0;\n            for (; i < len; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid)\n                    continue;\n                var multi = this.texResources[i >> 2];\n                multi.setTexture(i & 3, texture);\n            }\n            var gltsUsed = (i + 3) >> 2;\n            for (i = 0; i < gltsUsed; i++) {\n                renderer.texture.bind(this.texResources[i].baseTex, i);\n            }\n        };\n        TileRenderer.prototype.start = function () {\n        };\n        TileRenderer.prototype.createVb = function () {\n            var geom = new pixi_tilemap.RectTileGeom();\n            geom.addIndex(this.indexBuffer);\n            geom.lastTimeAccess = Date.now();\n            return geom;\n        };\n        TileRenderer.prototype.checkIndexBuffer = function (size, vb) {\n            if (vb === void 0) { vb = null; }\n            var totalIndices = size * 6;\n            if (totalIndices <= this.ibLen) {\n                return;\n            }\n            var len = totalIndices;\n            while (len < totalIndices) {\n                len <<= 1;\n            }\n            this.ibLen = totalIndices;\n            this.indexBuffer.update(PIXI.utils.createIndicesForQuads(size, pixi_tilemap.Constant.use32bitIndex));\n        };\n        TileRenderer.prototype.getShader = function () {\n            return this.rectShader;\n        };\n        TileRenderer.prototype.destroy = function () {\n            _super.prototype.destroy.call(this);\n            this.rectShader = null;\n        };\n        return TileRenderer;\n    }(PIXI.ObjectRenderer));\n    pixi_tilemap.TileRenderer = TileRenderer;\n    PIXI.Renderer.registerPlugin('tilemap', TileRenderer);\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var ZLayer = (function (_super) {\n        __extends(ZLayer, _super);\n        function ZLayer(tilemap, zIndex) {\n            var _this = _super.call(this) || this;\n            _this._lastAnimationFrame = -1;\n            _this.tilemap = tilemap;\n            _this.z = zIndex;\n            return _this;\n        }\n        ZLayer.prototype.clear = function () {\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++)\n                layers[i].clear();\n            this._previousLayers = 0;\n        };\n        ZLayer.prototype.cacheIfDirty = function () {\n            var tilemap = this.tilemap;\n            var layers = this.children;\n            var modified = this._previousLayers !== layers.length;\n            this._previousLayers = layers.length;\n            var buf = this.canvasBuffer;\n            var tempRender = this._tempRender;\n            if (!buf) {\n                buf = this.canvasBuffer = document.createElement('canvas');\n                tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, { view: buf });\n                tempRender.context = tempRender.rootContext;\n                tempRender.plugins.tilemap.dontUseTransform = true;\n            }\n            if (buf.width !== tilemap._layerWidth ||\n                buf.height !== tilemap._layerHeight) {\n                buf.width = tilemap._layerWidth;\n                buf.height = tilemap._layerHeight;\n                modified = true;\n            }\n            var i;\n            if (!modified) {\n                for (i = 0; i < layers.length; i++) {\n                    if (layers[i].isModified(this._lastAnimationFrame !== tilemap.animationFrame)) {\n                        modified = true;\n                        break;\n                    }\n                }\n            }\n            this._lastAnimationFrame = tilemap.animationFrame;\n            if (modified) {\n                if (tilemap._hackRenderer) {\n                    tilemap._hackRenderer(tempRender);\n                }\n                tempRender.context.clearRect(0, 0, buf.width, buf.height);\n                for (i = 0; i < layers.length; i++) {\n                    layers[i].clearModify();\n                    layers[i].renderCanvas(tempRender);\n                }\n            }\n            this.layerTransform = this.worldTransform;\n            for (i = 0; i < layers.length; i++) {\n                this.layerTransform = layers[i].worldTransform;\n                break;\n            }\n        };\n        ZLayer.prototype.renderCanvas = function (renderer) {\n            this.cacheIfDirty();\n            var wt = this.layerTransform;\n            renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            var tilemap = this.tilemap;\n            renderer.context.drawImage(this.canvasBuffer, 0, 0);\n        };\n        return ZLayer;\n    }(PIXI.Container));\n    pixi_tilemap.ZLayer = ZLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    PIXI.tilemap = pixi_tilemap;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var shaderGenerator;\n    (function (shaderGenerator) {\n        function fillSamplers(shader, maxTextures) {\n            var sampleValues = [];\n            for (var i = 0; i < maxTextures; i++) {\n                sampleValues[i] = i;\n            }\n            shader.uniforms.uSamplers = sampleValues;\n            var samplerSize = [];\n            for (var i = 0; i < maxTextures; i++) {\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        }\n        shaderGenerator.fillSamplers = fillSamplers;\n        function generateFragmentSrc(maxTextures, fragmentSrc) {\n            return fragmentSrc.replace(/%count%/gi, maxTextures + \"\")\n                .replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\n        }\n        shaderGenerator.generateFragmentSrc = generateFragmentSrc;\n        function generateSampleSrc(maxTextures) {\n            var src = '';\n            src += '\\n';\n            src += '\\n';\n            src += 'if(vTextureId <= -1.0) {';\n            src += '\\n\\tcolor = shadowColor;';\n            src += '\\n}';\n            for (var i = 0; i < maxTextures; i++) {\n                src += '\\nelse ';\n                if (i < maxTextures - 1) {\n                    src += 'if(textureId == ' + i + '.0)';\n                }\n                src += '\\n{';\n                src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], textureCoord * uSamplerSize[' + i + ']);';\n                src += '\\n}';\n            }\n            src += '\\n';\n            src += '\\n';\n            return src;\n        }\n        shaderGenerator.generateSampleSrc = generateSampleSrc;\n    })(shaderGenerator = pixi_tilemap.shaderGenerator || (pixi_tilemap.shaderGenerator = {}));\n})(pixi_tilemap || (pixi_tilemap = {}));\n"],"sourceRoot":""}