{"version":3,"sources":["webpack://Game/webpack/bootstrap","webpack://Game/./src/index.js","webpack://Game/./src/flood.js","webpack://Game/./src/WorldMap.js","webpack://Game/./src/pixi-tilemap.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","__webpack_exports__","loading","groundTiles","map","pixi_js__WEBPACK_IMPORTED_MODULE_0__","_WorldMap__WEBPACK_IMPORTED_MODULE_3__","textures","thingTextures","onload","document","querySelector","PIXI","shared","add","load","setup","START_X","START_Y","posX","posY","dx","dy","keyX","keyY","ACCELERATION","SPEED_LIMIT","loader","resources","console","log","WorldMap","generate","tiles","MARKER","atlasJSON","parentNode","removeChild","scale","width","curr","determineScale","innerWidth","height","innerHeight","halfWidth","halfHeight","widthInTiles","Math","ceil","heightInTiles","app","backgroundColor","resolution","devicePixelRatio","drawTiles","clear","sizeMask","fineMask","xOffset","yOffset","screenX","screenY","mapX","mapY","yPosInTiles","y","x","tile","read","texture","_atlasJSON$frames$tex","frames","pivot","frame","addFrame","w","h","thing","getThing","Error","_atlasJSON$frames$_te","body","appendChild","view","CompositeRectTileLayer","TextureCache","stage","addChild","ticker","delta","abs","sign","addEventListener","ev","keyCode","flood","off","size","things","BLOCKED","TILE_TO_BASE_TILE","WATER","pickVariant","RIVER","TAU","PI","N3","N4","WATER_LINE","BEACH_LINE","WOODS_LINE","MOUNTAIN_LINE","SAND","GRASS","DIRT","ROCK","WOODS","WOODS2","LARGE_TREE","LARGE_TREE_2","BOULDER","calcWeightSum","array","sum","tileNames","variants","_defineProperty","_variants","Array","sTile","baseTile","variantArray","spawnTable","table","normalizeSpawnTable","_normalizeSpawnTable","base","values","last","random","nextInt","isVariant","spawnForBlock","mapOffset","spawns","next","pos","spawn","prev2Offset","prevOffset","nextOffset","next2Offset","next3Offset","determineBaseTile","coords","heightCoords","heightFn","nx","ny","nz","nw","n3","noise4D","n4","createBase","seed","directions","climbUp","probe","currentHigh","currentX","currentY","improved","points","createSprings","probes","probeCount","randomProbes","walkingStart","firstWalker","filtered","uniqueProbes","unique","other","removeDuplicates","amount","arguments","undefined","multis","xOff","yOff","_objectSpread","concat","jitter","flow","currentLow","Infinity","currentTile","currentDirection","_map$heightCoords","dir","drawRivers","springs","flowingStart","firstFlower","min","_this","this","_classCallCheck","Prando","noise","SimplexNoise","factor","Uint8Array","Date","getTime","start","now","afterBase","end","thingStats","reduce","a","b","cos","sin","v","n0","n1","ctx","imageData","createImageData","tileOffset","dataOffset","z","pixi_tilemap","CanvasTileRenderer","renderer","tileAnim","dontUseTransform","cr","CanvasRenderer","registerPlugin","extendStatics","__extends","setPrototypeOf","__proto__","__","constructor","_super","zIndex","bitmaps","texPerChild","modificationMarker","shadowColor","Float32Array","_globalMat","initialize","updateTransform","displayObjectUpdateTransform","Constant","boundCountPerBuffer","maxTextures","setBitmaps","len1","children","len2","layer","RectTileLayer","compositeParent","offsetX","boundSize","offsetY","addRect","textureIndex","u","tileWidth","tileHeight","childIndex","textureId","texture_","animX","animY","ind","Texture","from","tex","child","baseTexture","renderCanvas","visible","worldAlpha","renderable","plugins","tilemap","wt","worldTransform","context","setTransform","tx","ty","layers","renderCanvasCore","render","plugin","shader","getShader","batch","setObjectRenderer","uniforms","projTransMatrix","globalUniforms","projectionMatrix","copyTo","append","animationFrame","renderWebGLCore","isModified","anim","clearModify","Container","bufferSize","use32bitIndex","SCALE_MODE","SCALE_MODES","LINEAR","DO_CLEAR","GraphicsLayer","transform","Matrix","IDENTITY","graphics","globalAlpha","Graphics","MultiTextureResource","options","_clearBuffer","baseTex","boundSprites","dirties","bounds","spr","Sprite","position","setTexture","update","dirtyId","upload","glTexture","gl","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","texImage2D","target","format","type","doClear","res","resource","valid","source","texSubImage2D","Resource","pointsBuf","hasAnim","vbId","vb","vbBuffer","vbArray","vbInts","found","textureList","pb","fillStyle","x1","y1","x2","y2","drawImage","fillRect","destroyVb","destroy","rectsCount","bindTextures","createVb","id","checkIndexBuffer","vertexBuf","getBuffer","vertices","vertPerQuad","vs","stride","byteLength","bk","ArrayBuffer","Uint32Array","arr","sz","shiftU","shiftV","geometry","draw","DRAW_MODES","TRIANGLES","rectShaderFrag","rectShaderVert","TilemapShader","shaderVert","shaderFrag","Program","uSamplers","uSamplerSize","shaderGenerator","fillSamplers","Shader","RectTileShader","generateFragmentSrc","RectTileGeom","vertSize","lastTimeAccess","buf","Buffer","addAttribute","Geometry","TileRenderer","sn","indexBuffer","ibLen","texLoc","texResources","rectShader","initBounds","BaseTexture","scaleMode","wrapMode","WRAP_MODES","CLAMP","bindTexturesWithoutRT","samplerSize","len","gltsUsed","geom","addIndex","totalIndices","utils","createIndicesForQuads","ObjectRenderer","Renderer","ZLayer","_lastAnimationFrame","_previousLayers","cacheIfDirty","modified","canvasBuffer","tempRender","_tempRender","createElement","rootContext","_layerWidth","_layerHeight","_hackRenderer","clearRect","layerTransform","sampleValues","fragmentSrc","replace","generateSampleSrc","src"],"mappings":"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","file":"bundle-main-e769baf0226735bed825.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpGame\"] = window[\"webpackJsonpGame\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([19,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import * as PIXI from \"pixi.js\"\nimport \"./pixi-tilemap\"\n// noinspection ES6UnusedImports\nimport STYLES from \"./style.css\"\nimport WorldMap, { MARKER, BLOCKED } from \"./WorldMap\";\n\n\nconst textures = [\n    \"water.png\",\n    \"water2.png\",\n    \"water3.png\",\n    \"sand.png\",\n    \"sand2.png\",\n    \"sand3.png\",\n    \"grass.png\",\n    \"grass2.png\",\n    \"grass3.png\",\n    \"dirt.png\",\n    \"dirt2.png\",\n    \"dirt3.png\",\n    \"rock.png\",\n    \"rock2.png\",\n    \"rock3.png\",\n    \"woods.png\",\n    \"woods2.png\",\n    \"woods.png\",\n    \"woods2.png\",\n    \"river.png\",\n    \"river2.png\",\n    \"river3.png\",\n    \"marker.png\",\n    \"marker2.png\",\n    \"marker3.png\",\n    \"bunny.png\"\n];\nconst thingTextures = [\n    \"none.png\",\n    \"marker2.png\", //null,  \n    \"large-tree.png\",\n    \"large-tree2.png\",\n    \"small-tree.png\",\n    \"small-tree2.png\",\n    \"small-tree3.png\",\n    \"plant.png\",\n    \"plant2.png\",\n    \"plant3.png\",\n    \"boulder.png\",\n    \"boulder2.png\",\n    \"marker3.png\"\n];\n\n\nfunction determineScale(width)\n{\n    let scale = 1;\n\n    let curr = width;\n    while (curr > 1024)\n    {\n        curr /= 2;\n        scale *= 2;\n    }\n\n    console.log(\"Set scale to\", scale);\n\n    return scale;\n}\n\n\nlet loading;\n\nwindow.onload = () => {\n\n    loading = document.querySelector(\"div.loading\");\n\n    PIXI.Loader.shared\n        .add(\"atlas/atlas-0.json\")\n        .load(setup);\n};\n\n// PIXI.Loader.shared.onProgress.add(function (ev) {\n//     console.log(ev.progress);\n// });\n\nlet groundTiles;\n\nlet map;\n\nconst START_X = 1029 * 16;\nconst START_Y = 1197 * 16;\n\nlet posX = START_X;\nlet posY = START_Y;\nlet dx = 0;\nlet dy = 0;\nlet keyX = 0;\nlet keyY = 0;\n\nconst ACCELERATION = 0.5;\nconst SPEED_LIMIT = 12;\n\nfunction setup(loader, resources)\n{\n    console.log(\"setup\", resources);\n\n    map = WorldMap.generate(2048, \"floppy-disk\");\n\n    map.tiles[0] = MARKER;\n\n    const atlasJSON = resources[\"atlas/atlas-0.json\"].data;\n    console.log(\"ATLAS\", atlasJSON);\n\n    loading.parentNode.removeChild(loading);\n\n    //console.log({loader,resources});\n\n    const scale = determineScale(window.innerWidth);\n\n    const width = (window.innerWidth / scale)|0;\n    const height = (window.innerHeight / scale)|0;\n\n    const halfWidth = width/2;\n    const halfHeight = height/2;\n\n    const widthInTiles = Math.ceil(width / 16) + 5;\n    const heightInTiles = Math.ceil(height / 16) + 9;\n\n    const app = new PIXI.Application({\n        width: width,\n        height: height,\n        backgroundColor: 0x111111,\n        resolution: (window.devicePixelRatio || 1) * scale,\n    });\n    document.body.appendChild(app.view);\n\n\n    function drawTiles(map)\n    {\n        groundTiles.clear();\n\n        const { sizeMask, fineMask } = map;\n\n        let xOffset = (posX - halfWidth) & fineMask;\n        let yOffset = (posY - halfHeight)& fineMask;\n\n        let screenX = -32 + -(xOffset & 15);\n        let screenY = -32 + -(yOffset & 15);\n\n        const mapX = ( -2 + (xOffset >> 4)) & sizeMask;\n        const mapY = ( -2 + (yOffset >> 4)) & sizeMask;\n\n        //console.log(\"Map pos\", mapX, mapY, sizeMask);\n        //console.log({screenX, screenY, txSteps, tySteps, mapX, mapY})\n\n        const yPosInTiles = (posY >> 4)|0;\n\n        // DRAW TILES\n        for (let y = 0 ; y < heightInTiles; y++)\n        {\n            for (let x = 0; x < widthInTiles; x++)\n            {\n                const tile = map.read((mapX + x) & sizeMask, (mapY + y) & sizeMask);\n                const texture = textures[tile];\n                const { pivot, frame } = atlasJSON.frames[texture];\n\n                groundTiles.addFrame(\n                    texture,\n                    screenX + (x << 4) - ((pivot.x * frame.w)|0),\n                    screenY + (y << 4) - ((pivot.y * frame.h)|0)\n                );\n\n            }\n        }\n\n        for (let y = 0 ; y < heightInTiles; y++)\n        {\n            if (((mapY + y) & sizeMask) === ((yPosInTiles + 1) & sizeMask) && (posY & 15) < 8)\n            {\n                groundTiles.addFrame(\n                    \"bunny.png\",\n                    halfWidth,\n                    halfHeight - 20\n                );\n            }\n\n            for (let x = 0; x < widthInTiles; x++)\n            {\n                const thing = map.getThing((mapX + x) & sizeMask, (mapY + y) & sizeMask);\n\n                if (thing > 0)//BLOCKED)\n                {\n                    const texture = thingTextures[thing];\n                    if (!texture)\n                    {\n                        throw new Error(\"No texture for \" + thing)\n                    }\n                    //console.log({texture, x: screenX + x * 16, y:screenY + y * 16})\n\n\n                    const { pivot, frame } = atlasJSON.frames[texture];\n                    groundTiles.addFrame(\n                        texture,\n                        screenX + (x << 4) - (pivot.x * frame.w)|0,\n                        screenY + (y << 4) - (pivot.y * frame.h)|0\n                    );\n                }\n            }\n\n\n            if (((mapY + y) & sizeMask) === ((yPosInTiles + 1) & sizeMask) && (posY & 15) >= 8)\n            {\n                groundTiles.addFrame(\n                    \"bunny.png\",\n                    halfWidth,\n                    halfHeight - 20\n                );\n            }\n        }\n\n        groundTiles.addFrame(\n            \"bunny-outline.png\",\n            halfWidth,\n            halfHeight - 20\n        );\n    }\n\n    //PIXI.tilemap.Constant.use32bitIndex = true;\n    groundTiles = new PIXI.tilemap.CompositeRectTileLayer(0, PIXI.utils.TextureCache[\"atlas/atlas-0.json_image\"]);\n    drawTiles(map);\n\n    app.stage.addChild(groundTiles);\n\n\n\n    app.ticker.add((delta) => {\n        // rotate the container!\n        // use delta to create frame-independent transform\n        //container.rotation -= 0.01 * delta;\n\n        if (keyX)\n        {\n            dx += keyX * ACCELERATION;\n            if (Math.abs(dx) > SPEED_LIMIT)\n            {\n                dx = Math.sign(dx) * SPEED_LIMIT;\n            }\n        }\n        else\n        {\n            dx *= 0.5;\n        }\n        if (keyY)\n        {\n            dy += keyY * ACCELERATION;\n            if (Math.abs(dy) > SPEED_LIMIT)\n            {\n                dy = Math.sign(dy) * SPEED_LIMIT;\n            }\n        }\n        else\n        {\n            dy *= 0.5;\n        }\n\n        posX = (posX + dx * delta) & map.fineMask;\n        posY = (posY + dy * delta) & map.fineMask;\n        \n        drawTiles(map);\n\n        //console.log(posX);\n    });\n\n\n    window.addEventListener(\"keydown\", ev => {\n        const keyCode = ev.keyCode;\n\n        //console.log(\"keyCode = \", keyCode);\n\n        switch(keyCode)\n        {\n            case 36:\n                posX = START_X;\n                posY = START_Y;\n                break;\n            case 35:\n                posX = 0;\n                posY = 0;\n                break;\n            case 38:\n            case 87:\n                keyY = -1;\n                break;\n            case 37:\n            case 65:\n                keyX = -1;\n                break;\n            case 40:\n            case 83:\n                keyY = 1;\n                break;\n            case 39:\n            case 68:\n                keyX = 1;\n                break;\n        }\n    }, true);\n    window.addEventListener(\"keyup\", ev => {\n        const keyCode = ev.keyCode;\n\n        //console.log(\"keyCode = \", keyCode);\n\n        switch(keyCode)\n        {\n            case 38:\n            case 87:\n            case 40:\n            case 83:\n                keyY = 0;\n                break;\n            case 37:\n            case 65:\n            case 39:\n            case 68:\n                keyX = 0;\n                break;\n        }\n    }, true);\n}\n","import { BLOCKED, pickVariant, RIVER, TILE_TO_BASE_TILE, WATER } from \"./WorldMap\";\n\n\nexport default function flood(map, x, y, width)\n{\n    const { size, tiles, things} = map;\n\n    let off;\n    //console.log(\"FLOOD\", width)\n\n    switch(width)\n    {\n        case 0:\n        case 1:\n            things[( y - 1) * size + x - 1] = BLOCKED;\n            things[( y - 1) * size + x] = BLOCKED;\n            things[( y - 1) * size +  x + 1] = BLOCKED;\n            things[y * size + x - 1] = BLOCKED;\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 1] = BLOCKED;\n            things[( y + 1) * size + x - 1] = BLOCKED;\n            things[( y + 1) * size + x] = BLOCKED;\n            things[( y + 1) * size +  x + 1] = BLOCKED;\n            break;\n        case 2:\n            things[( y - 1) * size + x - 1] = BLOCKED;\n            things[( y - 1) * size + x] = BLOCKED;\n            things[( y - 1) * size +  x + 1] = BLOCKED;\n            things[( y - 1) * size +  x + 2] = BLOCKED;\n            things[y * size + x - 1] = BLOCKED;\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 2] = BLOCKED;\n            things[( y + 1) * size + x - 1] = BLOCKED;\n            things[( y + 1) * size + x] = BLOCKED;\n            things[( y + 1) * size +  x + 1] = BLOCKED;\n            things[( y + 1) * size +  x + 2] = BLOCKED;\n            break;\n        case 3:\n            things[( y - 3) * size + x] = BLOCKED;\n            things[( y - 3) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size + x - 1] = BLOCKED;\n            things[( y - 2) * size + x] = BLOCKED;\n            things[( y - 2) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size + x - 2] = BLOCKED;\n            things[( y - 1) * size + x - 1] = BLOCKED;\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size +  x + 3] = BLOCKED;\n            things[y * size + x - 2] = BLOCKED;\n            things[y * size + x - 1] = BLOCKED;\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 2] = BLOCKED;\n            things[y * size +  x + 3] = BLOCKED;\n            things[( y + 1) * size + x - 1] = BLOCKED;\n            things[( y + 1) * size + x] = BLOCKED;\n            things[( y + 1) * size +  x + 1] = BLOCKED;\n            things[( y + 1) * size +  x + 2] = BLOCKED;\n            things[( y + 2) * size + x] = BLOCKED;\n            things[( y + 2) * size +  x + 1] = BLOCKED;\n            break;\n        case 4:\n            things[( y - 3) * size + x - 1] = BLOCKED;\n            things[( y - 3) * size + x] = BLOCKED;\n            things[( y - 3) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size + x - 2] = BLOCKED;\n            things[( y - 2) * size + x - 1] = BLOCKED;\n            things[( y - 2) * size + x] = BLOCKED;\n            things[( y - 2) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size + x - 3] = BLOCKED;\n            things[( y - 1) * size + x - 2] = BLOCKED;\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size +  x + 3] = BLOCKED;\n            things[y * size + x - 3] = BLOCKED;\n            things[y * size + x - 2] = BLOCKED;\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 2] = BLOCKED;\n            things[y * size +  x + 3] = BLOCKED;\n            things[( y + 1) * size + x - 2] = BLOCKED;\n            things[( y + 1) * size + x - 1] = BLOCKED;\n            things[( y + 1) * size + x] = BLOCKED;\n            things[( y + 1) * size +  x + 1] = BLOCKED;\n            things[( y + 1) * size +  x + 2] = BLOCKED;\n            things[( y + 2) * size + x - 1] = BLOCKED;\n            things[( y + 2) * size + x] = BLOCKED;\n            things[( y + 2) * size +  x + 1] = BLOCKED;\n            break;\n        case 5:\n            things[( y - 3) * size + x - 1] = BLOCKED;\n            things[( y - 3) * size + x] = BLOCKED;\n            things[( y - 3) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size + x - 2] = BLOCKED;\n            things[( y - 2) * size + x - 1] = BLOCKED;\n            things[( y - 2) * size + x] = BLOCKED;\n            things[( y - 2) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size + x - 3] = BLOCKED;\n            things[( y - 1) * size + x - 2] = BLOCKED;\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size +  x + 3] = BLOCKED;\n            things[y * size + x - 3] = BLOCKED;\n            things[y * size + x - 2] = BLOCKED;\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 2] = BLOCKED;\n            things[y * size +  x + 3] = BLOCKED;\n            things[( y + 1) * size + x - 3] = BLOCKED;\n            things[( y + 1) * size + x - 2] = BLOCKED;\n            off = ( y + 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 1) * size +  x + 2] = BLOCKED;\n            things[( y + 1) * size +  x + 3] = BLOCKED;\n            things[( y + 2) * size + x - 2] = BLOCKED;\n            things[( y + 2) * size + x - 1] = BLOCKED;\n            things[( y + 2) * size + x] = BLOCKED;\n            things[( y + 2) * size +  x + 1] = BLOCKED;\n            things[( y + 2) * size +  x + 2] = BLOCKED;\n            things[( y + 3) * size + x - 1] = BLOCKED;\n            things[( y + 3) * size + x] = BLOCKED;\n            things[( y + 3) * size +  x + 1] = BLOCKED;\n            break;\n        case 6:\n            things[( y - 4) * size + x - 1] = BLOCKED;\n            things[( y - 4) * size + x] = BLOCKED;\n            things[( y - 4) * size +  x + 1] = BLOCKED;\n            things[( y - 3) * size + x - 2] = BLOCKED;\n            things[( y - 3) * size + x - 1] = BLOCKED;\n            things[( y - 3) * size + x] = BLOCKED;\n            things[( y - 3) * size +  x + 1] = BLOCKED;\n            things[( y - 3) * size +  x + 2] = BLOCKED;\n            things[( y - 2) * size + x - 3] = BLOCKED;\n            things[( y - 2) * size + x - 2] = BLOCKED;\n            off = ( y - 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 2) * size +  x + 2] = BLOCKED;\n            things[( y - 2) * size +  x + 3] = BLOCKED;\n            things[( y - 1) * size + x - 4] = BLOCKED;\n            things[( y - 1) * size + x - 3] = BLOCKED;\n            off = ( y - 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 3] = BLOCKED;\n            things[( y - 1) * size +  x + 4] = BLOCKED;\n            things[y * size + x - 4] = BLOCKED;\n            things[y * size + x - 3] = BLOCKED;\n            off = y * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 3] = BLOCKED;\n            things[y * size +  x + 4] = BLOCKED;\n            things[( y + 1) * size + x - 4] = BLOCKED;\n            things[( y + 1) * size + x - 3] = BLOCKED;\n            off = ( y + 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 1) * size +  x + 3] = BLOCKED;\n            things[( y + 1) * size +  x + 4] = BLOCKED;\n            things[( y + 2) * size + x - 3] = BLOCKED;\n            things[( y + 2) * size + x - 2] = BLOCKED;\n            off = ( y + 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 2) * size +  x + 2] = BLOCKED;\n            things[( y + 2) * size +  x + 3] = BLOCKED;\n            things[( y + 3) * size + x - 2] = BLOCKED;\n            things[( y + 3) * size + x - 1] = BLOCKED;\n            things[( y + 3) * size + x] = BLOCKED;\n            things[( y + 3) * size +  x + 1] = BLOCKED;\n            things[( y + 3) * size +  x + 2] = BLOCKED;\n            things[( y + 4) * size + x - 1] = BLOCKED;\n            things[( y + 4) * size + x] = BLOCKED;\n            things[( y + 4) * size +  x + 1] = BLOCKED;\n            break;\n        case 7:\n            things[( y - 5) * size + x - 1] = BLOCKED;\n            things[( y - 5) * size + x] = BLOCKED;\n            things[( y - 5) * size +  x + 1] = BLOCKED;\n            things[( y - 4) * size + x - 2] = BLOCKED;\n            things[( y - 4) * size + x - 1] = BLOCKED;\n            things[( y - 4) * size + x] = BLOCKED;\n            things[( y - 4) * size +  x + 1] = BLOCKED;\n            things[( y - 4) * size +  x + 2] = BLOCKED;\n            things[( y - 3) * size + x - 3] = BLOCKED;\n            things[( y - 3) * size + x - 2] = BLOCKED;\n            off = ( y - 3) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 3) * size +  x + 2] = BLOCKED;\n            things[( y - 3) * size +  x + 3] = BLOCKED;\n            things[( y - 2) * size + x - 4] = BLOCKED;\n            things[( y - 2) * size + x - 3] = BLOCKED;\n            off = ( y - 2) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 2) * size +  x + 3] = BLOCKED;\n            things[( y - 2) * size +  x + 4] = BLOCKED;\n            things[( y - 1) * size + x - 5] = BLOCKED;\n            things[( y - 1) * size + x - 4] = BLOCKED;\n            off = ( y - 1) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 4] = BLOCKED;\n            things[( y - 1) * size +  x + 5] = BLOCKED;\n            things[y * size + x - 5] = BLOCKED;\n            things[y * size + x - 4] = BLOCKED;\n            off = y * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 4] = BLOCKED;\n            things[y * size +  x + 5] = BLOCKED;\n            things[( y + 1) * size + x - 5] = BLOCKED;\n            things[( y + 1) * size + x - 4] = BLOCKED;\n            off = ( y + 1) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 1) * size +  x + 4] = BLOCKED;\n            things[( y + 1) * size +  x + 5] = BLOCKED;\n            things[( y + 2) * size + x - 4] = BLOCKED;\n            things[( y + 2) * size + x - 3] = BLOCKED;\n            off = ( y + 2) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 2) * size +  x + 3] = BLOCKED;\n            things[( y + 2) * size +  x + 4] = BLOCKED;\n            things[( y + 3) * size + x - 3] = BLOCKED;\n            things[( y + 3) * size + x - 2] = BLOCKED;\n            off = ( y + 3) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 3) * size +  x + 2] = BLOCKED;\n            things[( y + 3) * size +  x + 3] = BLOCKED;\n            things[( y + 4) * size + x - 2] = BLOCKED;\n            things[( y + 4) * size + x - 1] = BLOCKED;\n            things[( y + 4) * size + x] = BLOCKED;\n            things[( y + 4) * size +  x + 1] = BLOCKED;\n            things[( y + 4) * size +  x + 2] = BLOCKED;\n            things[( y + 5) * size + x - 1] = BLOCKED;\n            things[( y + 5) * size + x] = BLOCKED;\n            things[( y + 5) * size +  x + 1] = BLOCKED;\n            break;\n        case 8:\n            things[( y - 6) * size + x - 1] = BLOCKED;\n            things[( y - 6) * size + x] = BLOCKED;\n            things[( y - 6) * size +  x + 1] = BLOCKED;\n            things[( y - 5) * size + x - 3] = BLOCKED;\n            things[( y - 5) * size + x - 2] = BLOCKED;\n            things[( y - 5) * size + x - 1] = BLOCKED;\n            things[( y - 5) * size + x] = BLOCKED;\n            things[( y - 5) * size +  x + 1] = BLOCKED;\n            things[( y - 5) * size +  x + 2] = BLOCKED;\n            things[( y - 5) * size +  x + 3] = BLOCKED;\n            things[( y - 4) * size + x - 4] = BLOCKED;\n            things[( y - 4) * size + x - 3] = BLOCKED;\n            things[( y - 4) * size + x - 2] = BLOCKED;\n            off = ( y - 4) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 4) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 4) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 4) * size +  x + 2] = BLOCKED;\n            things[( y - 4) * size +  x + 3] = BLOCKED;\n            things[( y - 4) * size +  x + 4] = BLOCKED;\n            things[( y - 3) * size + x - 5] = BLOCKED;\n            things[( y - 3) * size + x - 4] = BLOCKED;\n            things[( y - 3) * size + x - 3] = BLOCKED;\n            off = ( y - 3) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 3) * size +  x + 3] = BLOCKED;\n            things[( y - 3) * size +  x + 4] = BLOCKED;\n            things[( y - 3) * size +  x + 5] = BLOCKED;\n            things[( y - 2) * size + x - 5] = BLOCKED;\n            things[( y - 2) * size + x - 4] = BLOCKED;\n            off = ( y - 2) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 2) * size +  x + 4] = BLOCKED;\n            things[( y - 2) * size +  x + 5] = BLOCKED;\n            things[( y - 1) * size + x - 6] = BLOCKED;\n            things[( y - 1) * size + x - 5] = BLOCKED;\n            off = ( y - 1) * size + x - 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 5] = BLOCKED;\n            things[( y - 1) * size +  x + 6] = BLOCKED;\n            things[y * size + x - 6] = BLOCKED;\n            things[y * size + x - 5] = BLOCKED;\n            off = y * size + x - 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 5] = BLOCKED;\n            things[y * size +  x + 6] = BLOCKED;\n            things[( y + 1) * size + x - 6] = BLOCKED;\n            things[( y + 1) * size + x - 5] = BLOCKED;\n            off = ( y + 1) * size + x - 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 1) * size +  x + 5] = BLOCKED;\n            things[( y + 1) * size +  x + 6] = BLOCKED;\n            things[( y + 2) * size + x - 5] = BLOCKED;\n            things[( y + 2) * size + x - 4] = BLOCKED;\n            off = ( y + 2) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 2) * size +  x + 4] = BLOCKED;\n            things[( y + 2) * size +  x + 5] = BLOCKED;\n            things[( y + 3) * size + x - 5] = BLOCKED;\n            things[( y + 3) * size + x - 4] = BLOCKED;\n            things[( y + 3) * size + x - 3] = BLOCKED;\n            off = ( y + 3) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 3) * size +  x + 3] = BLOCKED;\n            things[( y + 3) * size +  x + 4] = BLOCKED;\n            things[( y + 3) * size +  x + 5] = BLOCKED;\n            things[( y + 4) * size + x - 4] = BLOCKED;\n            things[( y + 4) * size + x - 3] = BLOCKED;\n            things[( y + 4) * size + x - 2] = BLOCKED;\n            off = ( y + 4) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 4) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 4) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 4) * size +  x + 2] = BLOCKED;\n            things[( y + 4) * size +  x + 3] = BLOCKED;\n            things[( y + 4) * size +  x + 4] = BLOCKED;\n            things[( y + 5) * size + x - 3] = BLOCKED;\n            things[( y + 5) * size + x - 2] = BLOCKED;\n            things[( y + 5) * size + x - 1] = BLOCKED;\n            things[( y + 5) * size + x] = BLOCKED;\n            things[( y + 5) * size +  x + 1] = BLOCKED;\n            things[( y + 5) * size +  x + 2] = BLOCKED;\n            things[( y + 5) * size +  x + 3] = BLOCKED;\n            things[( y + 6) * size + x - 1] = BLOCKED;\n            things[( y + 6) * size + x] = BLOCKED;\n            things[( y + 6) * size +  x + 1] = BLOCKED;\n            break;\n\n        default:\n            throw new Error(\"Unhandled width: \" + width)\n\n    }\n}\n","import \"./pixi-tilemap\"\n\nimport SimplexNoise from \"simplex-noise\"\nimport Prando from \"prando\"\nimport now from \"performance-now\"\nimport flood from \"./flood\";\n\nconst TAU = Math.PI * 2;\n\nconst N1 = 0.4;\nconst N2 = 1.4;\nconst N3 = 20;\nconst N4 = 5;\n\nfunction clamp(v)\n{\n    return v < -1 ? -1 : v > 1 ? 1 : v;\n}\n\nconst WATER_LINE = 0.05;\nconst BEACH_LINE = 0.07;\nconst WOODS_LINE = 0.09;\nconst MOUNTAIN_LINE = 0.5;\n\n// tiles\nexport const WATER = 0;\nexport const WATER2 = 1;\nexport const WATER3 = 2;\nexport const SAND = 3;\nexport const SAND2 = 4;\nexport const SAND3 = 5;\nexport const GRASS = 6;\nexport const GRASS2 = 7;\nexport const GRASS3 = 8;\nexport const DIRT = 9;\nexport const DIRT2 = 10;\nexport const DIRT3 = 11;\nexport const ROCK = 12;\nexport const ROCK2 = 13;\nexport const ROCK3 = 14;\nexport const WOODS = 15;\nexport const WOODS2 = 16;\nexport const WOODS3 = 17;\nexport const WOODS4 = 18;\nexport const RIVER = 19;\nexport const RIVER2 = 20;\nexport const RIVER3 = 21;\nexport const MARKER = 22;\nexport const MARKER2 = 23;\nexport const MARKER3 = 24;\n\n// things\nexport const BLOCKED = 1;\nexport const LARGE_TREE = 2;\nexport const LARGE_TREE_2 = 3;\nexport const SMALL_TREE = 4;\nexport const SMALL_TREE_2 = 5;\nexport const SMALL_TREE_3 = 6;\nexport const PLANT = 7;\nexport const PLANT_2 = 8;\nexport const PLANT_3 = 9;\nexport const BOULDER = 10;\nexport const BOULDER_2 = 11;\nexport const BLOCKED_MARKER = 12;\n\nfunction calcWeightSum(array)\n{\n    if (!array)\n    {\n        return 0;\n    }\n\n    let sum = 0;\n    for (let i = 1; i < array.length; i += 2)\n    {\n        sum += array[i];\n    }\n    return sum;\n}\n\nconst tileNames = [\n    \"WATER\",\n    \"WATER2\",\n    \"WATER3\",\n    \"SAND\",\n    \"SAND2\",\n    \"SAND3\",\n    \"GRASS\",\n    \"GRASS2\",\n    \"GRASS3\",\n    \"DIRT\",\n    \"DIRT2\",\n    \"DIRT3\",\n    \"ROCK\",\n    \"ROCK2\",\n    \"ROCK3\",\n    \"WOODS\",\n    \"WOODS2\",\n    \"WOODS3\",\n    \"WOODS4\",\n    \"RIVER\",\n    \"RIVER2\",\n    \"RIVER3\",\n    \"MARKER\",\n    \"MARKER2\",\n    \"MARKER3\"\n];\n\nconst variants = {\n    [WATER] : [WATER, WATER2, WATER3],\n    [SAND] :  [SAND, SAND2, SAND3],\n    [GRASS] : [GRASS, GRASS2, GRASS3],\n    [DIRT] :  [DIRT, DIRT2, DIRT3],\n    [ROCK] :  [ROCK, ROCK2, ROCK3],\n    [WOODS] : [WOODS, WOODS3],\n    [WOODS2] :[WOODS2, WOODS4],\n    [RIVER] : [RIVER, RIVER2, RIVER3]\n};\n\n/**\n * Map to look up base tiles for tile codes.s\n *\n * @type {Array<Number>}\n */\nexport const TILE_TO_BASE_TILE = (() => {\n\n    const array = new Array(tileNames.length);\n\n    for (let sTile in variants)\n    {\n        if (variants.hasOwnProperty(sTile))\n        {\n            const baseTile = +sTile;\n            array[baseTile] = baseTile;\n\n            const variantArray = variants[sTile];\n            for (let i = 0; i < variantArray.length; i++)\n            {\n                const tile = variantArray[i];\n                array[tile] = baseTile;\n            }\n        }\n    }\n\n    //console.log(\"TILE2BASE\", array);\n\n    return array;\n\n})();\n\n\nfunction normalizeSpawnTable(table)\n{\n    for (let sTile in table)\n    {\n        if (table.hasOwnProperty(sTile))\n        {\n            const array = table[sTile];\n\n            if (array)\n            {\n                const sum = calcWeightSum(array);\n                for (let i = 1; i < array.length; i += 2)\n                {\n                    array[i] /= sum\n                }\n            }\n        }\n    }\n\n    return table;\n}\n\nconst spawnTable = normalizeSpawnTable({\n    [WATER] : false,\n    [SAND] :  [0, 500, BOULDER, 1, BOULDER_2, 1],\n    [GRASS] : [0, 1000, LARGE_TREE, 2, LARGE_TREE_2, 2, SMALL_TREE, 3, SMALL_TREE_3, 3, BOULDER, 1, BOULDER_2, 2],\n    [DIRT] :  [0, 1000, LARGE_TREE, 2, LARGE_TREE_2, 2, SMALL_TREE, 3, SMALL_TREE_3, 3, BOULDER, 1, BOULDER_2, 2],\n    [ROCK] :  [0, 4, BOULDER, 1, BOULDER_2, 1],\n    [WOODS] : [0, 150, LARGE_TREE, 2, LARGE_TREE_2, 2, SMALL_TREE, 5, SMALL_TREE_2, 5, SMALL_TREE_3, 5, PLANT, 1, PLANT_2, 1, PLANT_3, 1, BOULDER, 1, BOULDER_2, 2],\n    [WOODS2]: [0, 40, LARGE_TREE, 2, LARGE_TREE_2, 2, SMALL_TREE, 5, SMALL_TREE_2, 5, SMALL_TREE_3, 5, PLANT, 1, PLANT_2, 1, PLANT_3, 1, BOULDER, 1, BOULDER_2, 2],\n    [RIVER] : false\n});\n\n\n//console.log(\"VARIANTS\", JSON.stringify(variants, null, 4));\n\nexport function pickVariant(map, base)\n{\n    const values = variants[base];\n\n    let num;\n    let result;\n    if (!values)\n    {\n        result = base;\n    }\n    else\n    {\n        const last = values.length - 1;\n\n        if (last === 0)\n        {\n            result = values[0];\n        }\n        else\n        {\n            num = map.random.nextInt(0, last);\n            //console.log(`Pick from 0 to ${last}: ${num}`)\n            result = values[num];\n        }\n    }\n\n    //console.log(\"Variant of \", base, \"=>\", result);\n\n    return result;\n}\n\nexport function isVariant(tile, base)\n{\n    return TILE_TO_BASE_TILE[tile] === base;\n}\n\n\nfunction spawn(map, spawns)\n{\n    let value = map.random.next();\n    let pos = 1;\n    do\n    {\n        value -= spawns[pos];\n        pos += 2\n    } while (value > 0 && pos < spawns.length);\n\n    return spawns[pos - 3];\n}\n\n\nfunction spawnForBlock(map, mapOffset, baseTile)\n{\n    const { things, sizeMask } = map;\n\n    if (things[mapOffset] !== 0)\n    {\n        console.log(\"Skip spawning on \", things[mapOffset])\n        return;\n    }\n\n    const spawns = spawnTable[baseTile];\n    if (spawns)\n    {\n        const thing = spawn(map, spawns);\n        if (thing)\n        {\n            //console.log(\"THING\", thing);\n\n            if (thing === LARGE_TREE || thing === LARGE_TREE_2)\n            {\n\n                const prev3Offset = (mapOffset - 3) & sizeMask;\n                const prev2Offset = (mapOffset - 2) & sizeMask;\n                const prevOffset = (mapOffset - 1) & sizeMask;\n                const nextOffset = (mapOffset + 1) & sizeMask;\n                const next2Offset = (mapOffset + 2) & sizeMask;\n                const next3Offset = (mapOffset + 3) & sizeMask;\n\n                if (\n                    things[prev3Offset] !== BLOCKED &&\n                    things[prev2Offset] !== BLOCKED &&\n                    things[prevOffset] !== BLOCKED\n                )\n                {\n\n                    things[mapOffset] = thing;\n                    things[nextOffset] = BLOCKED;\n                    things[next2Offset] = BLOCKED;\n                    things[next3Offset] = BLOCKED;\n\n                    //console.log(\"Block for large tree\", mapOffset)\n                }\n            }\n            else if (thing === BOULDER)\n            {\n                const prevOffset = (mapOffset - 1) & sizeMask;\n                const nextOffset = (mapOffset + 1) & sizeMask;\n\n                //baseTile === ROCK && console.log(\"isLargeBoulder\", things[prevOffset], things[mapOffset], things[nextOffset])\n\n                if (\n                    things[prevOffset] !== BLOCKED\n                )\n                {\n\n                    things[mapOffset] = thing;\n                    things[nextOffset] = BLOCKED;\n                    //console.log(\"Block for large boulder\", mapOffset)\n                }\n            }\n            else\n            {\n                things[mapOffset] = thing;\n            }\n        }\n    }\n}\n\n\nfunction determineBaseTile(map, x, y)\n{\n    const coords = map.heightCoords(x, y);\n    const n = map.heightFn(x, y, coords);\n\n    if (n < WATER_LINE)\n    {\n        return WATER;\n    }\n    else if (n < BEACH_LINE)\n    {\n        return SAND;\n    }\n    else if (n < MOUNTAIN_LINE)\n    {\n        const {nx, ny, nz, nw} = coords;\n\n        const n3 = n > WOODS_LINE ? map.noise4D(nx * N4, nw * N4, ny * N4, nz * N4) : 1;\n        const n4 = map.noise4D(nx * N3, nw * N3, ny * N3, nz * N3);\n        if (n3 < 0)\n        {\n            if (n4 < 0)\n            {\n                return WOODS;\n            }\n            else\n            {\n                return WOODS2;\n            }\n\n        }\n        else\n        {\n            if (n4 < 0)\n            {\n                return GRASS;\n            }\n            else\n            {\n                return DIRT;\n            }\n        }\n    }\n    else\n    {\n        return ROCK;\n    }\n}\n\n\nfunction createBase(size, seed)\n{\n    const map = new WorldMap(size, seed);\n\n    const { tiles } = map;\n\n    let mapOffset = 0;\n    for (let y = 0; y < size; y++)\n    {\n        for (let x = 0; x < size; x++)\n        {\n            const baseTile = determineBaseTile(map, x, y);\n            tiles[mapOffset] = pickVariant(map, baseTile);\n\n            spawnForBlock(map, mapOffset, baseTile);\n\n            mapOffset++;\n        }\n    }\n    return map;\n}\n\nfunction randomProbes(map)\n{\n    const probes = [];\n\n    const { size } = map;\n\n    const probeCount = size * size / 1000;\n\n    console.log(\"Probe count =\", probeCount);\n\n    for (let i = 0; i < probeCount; i++)\n    {\n        const x = (map.random.next() * size) | 0;\n        const y = (map.random.next() * size) | 0;\n\n        const value = map.heightFn(x, y);\n\n        if (value > WATER_LINE)\n        {\n            probes.push({\n                x,\n                y,\n                value,\n                points: [],\n                tile: 0\n            })\n        }\n    }\n    return probes;\n}\n\n\nconst directions = [\n    0, -1,\n    -1, 0,\n    1, 0,\n    0, 1\n];\n\n\nfunction climbUp(map, probe)\n{\n    let currentHigh = probe.value;\n    let currentX = probe.x;\n    let currentY = probe.y;\n\n    const { size } = map;\n\n    let improved = false;\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const x = probe.x + directions[i];\n        const y = probe.y + directions[i + 1];\n\n        if (x > 0 && y > 0 && x < size && y < size)\n        {\n            const value = map.heightFn(x, y);\n            if (value > currentHigh)\n            {\n                currentHigh = value;\n                currentX = x;\n                currentY = y;\n                improved = true;\n            }\n        }\n    }\n\n    if (!improved)\n    {\n        return false;\n    }\n    else\n    {\n        return {\n            x: currentX,\n            y: currentY,\n            value: currentHigh,\n            points: []\n        };\n    }\n}\n\n\nfunction removeDuplicates(probes)\n{\n    const length = probes.length;\n\n    const uniqueProbes = [];\n\n    for (let i = 0; i < length; i++)\n    {\n        const probe = probes[i];\n        let unique = true;\n        for (let j = length - 1; j > i; j--)\n        {\n            const other = probes[j];\n            if (probe.x === other.x && probe.y === other.y)\n            {\n                unique = false;\n                break;\n            }\n        }\n\n        if (unique)\n        {\n            uniqueProbes.push(probe);\n        }\n    }\n\n    return uniqueProbes;\n}\n\n\nfunction jitter(map, filtered, amount = 8)\n{\n    const twice = amount * 2;\n\n    const multis = [];\n    for (let i = 0; i < filtered.length; i++)\n    {\n        const probe = filtered[i];\n        const xOff = map.random.nextInt(-amount, amount);\n        const yOff = map.random.nextInt(-amount, amount);\n        probe.x = probe.x + xOff;\n        probe.y = probe.y + yOff;\n\n        const v = map.heightFn(probe.x, probe.y);\n\n        if (v > MOUNTAIN_LINE && map.random.next() < 0.6)\n        {\n            multis.push(\n                {\n                    ...probe,\n                    x: (probe.x - amount - yOff) | 0,\n                    y: (probe.y - amount + xOff) | 0\n                }\n            );\n        }\n    }\n\n    return filtered.concat(multis);\n}\n\n\nfunction createSprings(map)\n{\n    const probes = randomProbes(map);\n\n    console.log(probes.length, \"random probes\");\n\n    const { size } = map;\n\n    const length = probes.length;\n    let walkingStart = 0, i = 0;\n    for (i = 0; i < size / 2 && walkingStart < length; i++)\n    {\n        //console.log(\"Walking \" + (length - walkingStart))\n        for (let j = walkingStart; j < length; j++)\n        {\n            const probe = probes[j];\n            const improved = climbUp(map, probe);\n            if (improved)\n            {\n                probes[j] = improved;\n            }\n            else\n            {\n                // swap current with first walker\n                const firstWalker = probes[walkingStart];\n                probes[walkingStart] = probes[j];\n                probes[j] = firstWalker;\n                // increase walking start\n                walkingStart++;\n            }\n        }\n\n        //drawSprings(probes, imageData, false);\n    }\n\n\n    const filtered = removeDuplicates(probes);\n\n    //console.log(filtered.length, \"springs\");\n    console.log(\"Stopped climbing after \", i, \" iterations: \" + filtered.length + \" springs\");\n\n    return jitter(map, filtered);\n}\n\n\nfunction flow(map, probe)\n{\n    let currentLow = Infinity;\n    let currentX = probe.x;\n    let currentY = probe.y;\n    let currentTile = -1;\n    let currentDirection = -1;\n\n    let improved = false;\n\n    const { size } = map;\n\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const x = probe.x + directions[i];\n        const y = probe.y + directions[i + 1];\n\n        if (x > 0 && y > 0 && x < size && y < size)\n        {\n            let tile = map.read(x, y);\n            if (!isVariant(tile ,RIVER))\n            {\n                if (isVariant(tile,ROCK))\n                {\n                    const {nx, ny, nz, nw} = map.heightCoords(x, y);\n                    const n3 = map.noise4D(nx * N3, nw * N3, ny * N3, nz * N3);\n                    if (n3 < 0)\n                    {\n                        tile = GRASS;\n                    }\n                    else\n                    {\n                        tile = DIRT;\n                    }\n                }\n\n                const value = map.heightFn(x, y) - (!isVariant(tile, SAND) && isVariant(tile, probe.tile) ? 0.001 : 0);\n                if (value < currentLow)\n                {\n                    currentLow = value;\n                    currentX = x;\n                    currentY = y;\n                    currentTile = tile;\n                    currentDirection = i;\n                    improved = true;\n                }\n            }\n        }\n    }\n\n    if (!improved)\n    {\n        const dir = map.random.nextInt(0,3) * 2;\n        probe.x += directions[dir];\n        probe.y += directions[dir + 1];\n        probe.tile = TILE_TO_BASE_TILE[map.read(probe.x, probe.y)];\n    }\n    else\n    {\n        const n = map.random.next();\n        if (n < 0.25)\n        {\n            const dir = ((currentDirection/2 + (n < 0.125 ? -1 : 1)) & 3)* 2;\n\n            probe.x += directions[dir];\n            probe.y += directions[dir + 1];\n\n            probe.points.push(probe.x, probe.y);\n\n            probe.x += directions[dir];\n            probe.y += directions[dir + 1];\n            probe.value = 1;\n            probe.tile = TILE_TO_BASE_TILE[map.read(probe.x, probe.y)];\n        }\n        else\n        {\n            probe.x = currentX;\n            probe.y = currentY;\n            probe.value = currentLow;\n            probe.tile = TILE_TO_BASE_TILE[currentTile];\n\n        }\n    }\n}\n\n\n\nfunction drawRivers(map)\n{\n    const springs = createSprings(map);\n\n    const { size } = map;\n\n    const length = springs.length;\n    let flowingStart = 0, i = 0;\n    for (i = 0; i < size && flowingStart < length; i++)\n    {\n        //console.log(\"Flowing \" + (length - flowingStart))\n        for (let j = flowingStart; j < length; j++)\n        {\n            const probe = springs[j];\n\n            const {x, y} = probe;\n            probe.points.push(x,y);\n\n            const currentTile = map.read(probe.x, probe.y);\n            if (isVariant(currentTile, WATER))\n            {\n                // swap current with first flower\n                const firstFlower = springs[flowingStart];\n                springs[flowingStart] = springs[j];\n                springs[j] = firstFlower;\n                // increase walking start\n                flowingStart++;\n                continue;\n            }\n            flow(map, probe);\n\n        }\n\n        //drawSprings(springs, imageData, false);\n    }\n    console.log(\"Stopped flowing after \", i, \" iterations\");\n\n    for (let i = 0; i < springs.length; i++)\n    {\n        const { points } = springs[i];\n\n        for (let j = 0; j < points.length; j += 2)\n        {\n\n            const width = Math.min(8, j * 0.004)|0;\n            flood(map, points[j], points[j + 1], width);\n        }\n    }\n\n\n    for (let i = 0; i < springs.length; i++)\n    {\n        console.log(\"Spring length\", springs[i].points.length)\n    }\n}\n\n\n\nexport default  class WorldMap {\n    constructor(size = 800, seed)\n    {\n        const lg = Math.log(size) / Math.log(2);\n        if ( (lg % 1) !== 0)\n        {\n            throw new Error(\"Size must be power of two: \" + size);\n        }\n\n        console.log(\"New map \" + size + \" x \" + size + \", seed = \" + seed)\n\n        this.random = new Prando(seed);\n        this.noise = new SimplexNoise(() => this.random.next());\n        this.size = size;\n\n        this.sizeMask = size - 1;\n        this.fineMask = (size << 4) - 1;\n\n        this.factor = 1 / size;\n        this.tiles = new Uint8Array(size * size);\n        this.things = new Uint8Array(size * size);\n    }\n\n\n    read(x, y)\n    {\n        return this.tiles[y * this.size + x];\n    }\n\n    getThing(x, y)\n    {\n        return this.things[y * this.size + x];\n    }\n\n    write(x, y, tile)\n    {\n        this.tiles[y * this.size + x] = tile;\n    }\n\n    putThing(x, y, thing)\n    {\n        this.things[y * this.size + x] = thing;\n    }\n\n\n    /**\n     * Returns the terrain height at the given tile coordinates\n     *\n     * @param {Number} x            tile x-coordinate\n     * @param {Number} y            tile y-coordinate\n     * @param {Object} [coords]     predetermined 4D coordinates\n     * @param {number} coords.nx    predetermined 4D x-coordinate\n     * @param {number} coords.ny    predetermined 4D y-coordinate\n     * @param {number} coords.nz    predetermined 4D z-coordinate\n     * @param {number} coords.nw    predetermined 4D w-coordinate\n     * \n     * @return {number} height between -1 and 1 inclusive\n     */\n    heightFn(x, y, coords)\n    {\n        const s = x * this.factor;\n        const t = y * this.factor;\n\n        let nx;\n        let ny;\n        let nz;\n        let nw;\n        if (coords)\n        {\n            nx = coords.nx;\n            ny = coords.ny;\n            nz = coords.nz;\n            nw = coords.nw;\n        }\n        else\n        {\n            nx = Math.cos(s * TAU);\n            ny = Math.cos(t * TAU);\n            nz = Math.sin(s * TAU);\n            nw = Math.sin(t * TAU);\n        }\n\n        const n0 = this.noise4D(nx * N1, ny * N1, nz * N1, nw * N1);\n        const n1 = this.noise4D(nx * N2, nw * N2, ny * N2, nz * N2);\n        return clamp(n0 < 0 ? -n0 * n0 : n0 * n0) + n1 * 0.3;\n    }\n\n\n    /**\n     * Returns the 4D coordinates for the given tile coordinates\n     *\n     * @param {Number} x    tile x-coordinate\n     * @param {Number} y    tile y-coordinate\n     * @return {{nw: number, nx: number, ny: number, nz: number}} 4D coordinates of 2 circles in 4D space\n     */\n    heightCoords(x, y)\n    {\n\n        const s = x * this.factor;\n        const t = y * this.factor;\n\n        const nx = Math.cos(s * TAU);\n        const ny = Math.cos(t * TAU);\n        const nz = Math.sin(s * TAU);\n        const nw = Math.sin(t * TAU);\n\n        return {\n            nx,\n            ny,\n            nz,\n            nw\n        };\n    }\n\n    render(ctx)\n    {\n        const { size } = this;\n\n        const imageData = ctx.createImageData(size, size);\n\n        const data = imageData.data;\n\n        let tileOffset = 0;\n        let dataOffset = 0;\n        for (let y = 0; y < size; y++)\n        {\n            for (let x = 0; x < size; x++)\n            {\n                const tile = this.tiles[tileOffset++];\n\n                switch (tile)\n                {\n                    case RIVER:\n                    case RIVER2:\n                    case RIVER3:\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WATER:\n                    case WATER2:\n                    case WATER3:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 32;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 255;\n                        break;\n                    case SAND:\n                    case SAND2:\n                    case SAND3:\n                        data[dataOffset++] = 192;\n                        data[dataOffset++] = 160;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case GRASS:\n                    case GRASS2:\n                    case GRASS3:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WOODS:\n                    case WOODS2:\n                    case WOODS3:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 108;\n                        data[dataOffset++] = 16;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WOODS4:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 32;\n                        data[dataOffset++] = 255;\n                        break;\n                    case DIRT:\n                    case DIRT2:\n                    case DIRT3:\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case ROCK:\n                    case ROCK2:\n                    case ROCK3:\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 255;\n                        break;\n                    case MARKER:\n                    case MARKER2:\n                    case MARKER3:\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 255;\n                        break;\n                }\n            }\n        }\n\n        return imageData;\n\n    }\n\n    noise4D(x,y,z,w)\n    {\n        return this.noise.noise4D(x,y,z,w);\n\n    }\n\n    static generate(size, seed = new Date().getTime()) {\n\n        const start = now();\n        const map = createBase(size, seed);\n        const afterBase = now();\n        drawRivers(map);\n        const end = now();\n        console.log(`Base in ${afterBase - start}ms`)\n        console.log(`Rivers in ${end - start}ms`)\n\n        console.log({ thingStats : map.things.reduce((a,b) =>(a[b] = a[b] === undefined ? 1: a[b] + 1,a), [])});\n\n        return map;\n    };\n\n}\n","var pixi_tilemap;\n(function (pixi_tilemap) {\n    var CanvasTileRenderer = (function () {\n        function CanvasTileRenderer(renderer) {\n            this.tileAnim = [0, 0];\n            this.dontUseTransform = false;\n            this.renderer = renderer;\n            this.tileAnim = [0, 0];\n        }\n        return CanvasTileRenderer;\n    }());\n    pixi_tilemap.CanvasTileRenderer = CanvasTileRenderer;\n    var cr = PIXI.CanvasRenderer;\n    if (cr) {\n        cr.registerPlugin('tilemap', CanvasTileRenderer);\n    }\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var CompositeRectTileLayer = (function (_super) {\n        __extends(CompositeRectTileLayer, _super);\n        function CompositeRectTileLayer(zIndex, bitmaps, texPerChild) {\n            var _this = _super.call(this) || this;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.initialize.apply(_this, arguments);\n            return _this;\n        }\n        CompositeRectTileLayer.prototype.updateTransform = function () {\n            this.displayObjectUpdateTransform();\n        };\n        CompositeRectTileLayer.prototype.initialize = function (zIndex, bitmaps, texPerChild) {\n            if (texPerChild === true) {\n                texPerChild = 0;\n            }\n            this.z = this.zIndex = zIndex;\n            this.texPerChild = texPerChild || pixi_tilemap.Constant.boundCountPerBuffer * pixi_tilemap.Constant.maxTextures;\n            if (bitmaps) {\n                this.setBitmaps(bitmaps);\n            }\n        };\n        CompositeRectTileLayer.prototype.setBitmaps = function (bitmaps) {\n            var texPerChild = this.texPerChild;\n            var len1 = this.children.length;\n            var len2 = Math.ceil(bitmaps.length / texPerChild);\n            var i;\n            for (i = 0; i < len1; i++) {\n                this.children[i].textures = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\n            }\n            for (i = len1; i < len2; i++) {\n                var layer = new pixi_tilemap.RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild));\n                layer.compositeParent = true;\n                layer.offsetX = pixi_tilemap.Constant.boundSize;\n                layer.offsetY = pixi_tilemap.Constant.boundSize;\n                this.addChild(layer);\n            }\n        };\n        CompositeRectTileLayer.prototype.clear = function () {\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i].clear();\n            }\n            this.modificationMarker = 0;\n        };\n        CompositeRectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight) {\n            var childIndex = textureIndex / this.texPerChild >> 0;\n            var textureId = textureIndex % this.texPerChild;\n            if (this.children[childIndex] && this.children[childIndex].textures) {\n                this.children[childIndex].addRect(textureId, u, v, x, y, tileWidth, tileHeight);\n            }\n        };\n        CompositeRectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var layer = null;\n            var ind = 0;\n            var children = this.children;\n            if (typeof texture_ === \"number\") {\n                var childIndex = texture_ / this.texPerChild >> 0;\n                layer = children[childIndex];\n                if (!layer) {\n                    layer = children[0];\n                    if (!layer) {\n                        return false;\n                    }\n                    ind = 0;\n                }\n                else {\n                    ind = texture_ % this.texPerChild;\n                }\n                texture = layer.textures[ind];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    var tex = child.textures;\n                    for (var j = 0; j < tex.length; j++) {\n                        if (tex[j].baseTexture === texture.baseTexture) {\n                            layer = child;\n                            ind = j;\n                            break;\n                        }\n                    }\n                    if (layer) {\n                        break;\n                    }\n                }\n                if (!layer) {\n                    for (var i = 0; i < children.length; i++) {\n                        var child = children[i];\n                        if (child.textures.length < this.texPerChild) {\n                            layer = child;\n                            ind = child.textures.length;\n                            child.textures.push(texture);\n                            break;\n                        }\n                    }\n                    if (!layer) {\n                        layer = new pixi_tilemap.RectTileLayer(this.zIndex, texture);\n                        layer.compositeParent = true;\n                        layer.offsetX = pixi_tilemap.Constant.boundSize;\n                        layer.offsetY = pixi_tilemap.Constant.boundSize;\n                        children.push(layer);\n                        ind = 0;\n                    }\n                }\n            }\n            layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        CompositeRectTileLayer.prototype.renderCanvas = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderCanvasCore(renderer);\n            }\n        };\n        CompositeRectTileLayer.prototype.render = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderWebGLCore(renderer, plugin);\n            }\n        };\n        CompositeRectTileLayer.prototype.isModified = function (anim) {\n            var layers = this.children;\n            if (this.modificationMarker !== layers.length) {\n                return true;\n            }\n            for (var i = 0; i < layers.length; i++) {\n                if (layers[i].isModified(anim)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        CompositeRectTileLayer.prototype.clearModify = function () {\n            var layers = this.children;\n            this.modificationMarker = layers.length;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].clearModify();\n            }\n        };\n        return CompositeRectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.CompositeRectTileLayer = CompositeRectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    pixi_tilemap.Constant = {\n        maxTextures: 4,\n        bufferSize: 2048,\n        boundSize: 1024,\n        boundCountPerBuffer: 1,\n        use32bitIndex: false,\n        SCALE_MODE: PIXI.SCALE_MODES.LINEAR,\n        DO_CLEAR: true\n    };\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var GraphicsLayer = (function (_super) {\n        __extends(GraphicsLayer, _super);\n        function GraphicsLayer(zIndex) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = zIndex;\n            return _this;\n        }\n        GraphicsLayer.prototype.renderCanvas = function (renderer) {\n            var wt = null;\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                wt = this.transform.worldTransform;\n                this.transform.worldTransform = PIXI.Matrix.IDENTITY;\n            }\n            renderer.plugins.graphics.render(this);\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                this.transform.worldTransform = wt;\n            }\n            renderer.context.globalAlpha = 1.0;\n        };\n        GraphicsLayer.prototype.isModified = function (anim) {\n            return false;\n        };\n        GraphicsLayer.prototype.clearModify = function () {\n        };\n        return GraphicsLayer;\n    }(PIXI.Graphics));\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var MultiTextureResource = (function (_super) {\n        __extends(MultiTextureResource, _super);\n        function MultiTextureResource(options) {\n            var _this = _super.call(this, options.bufferSize, options.bufferSize) || this;\n            _this.DO_CLEAR = false;\n            _this.boundSize = 0;\n            _this._clearBuffer = null;\n            _this.baseTex = null;\n            _this.boundSprites = [];\n            _this.dirties = [];\n            var bounds = _this.boundSprites;\n            var dirties = _this.dirties;\n            _this.boundSize = options.boundSize;\n            for (var j = 0; j < options.boundCountPerBuffer; j++) {\n                var spr = new PIXI.Sprite();\n                spr.position.x = options.boundSize * (j & 1);\n                spr.position.y = options.boundSize * (j >> 1);\n                bounds.push(spr);\n                dirties.push(0);\n            }\n            _this.DO_CLEAR = !!options.DO_CLEAR;\n            return _this;\n        }\n        MultiTextureResource.prototype.bind = function (baseTexture) {\n            if (this.baseTex) {\n                throw new Error('Only one baseTexture is allowed for this resource!');\n            }\n            this.baseTex = baseTexture;\n            _super.prototype.bind.call(this, baseTexture);\n        };\n        MultiTextureResource.prototype.setTexture = function (ind, texture) {\n            var spr = this.boundSprites[ind];\n            if (spr.texture.baseTexture === texture.baseTexture) {\n                return;\n            }\n            spr.texture = texture;\n            this.baseTex.update();\n            this.dirties[ind] = this.baseTex.dirtyId;\n        };\n        MultiTextureResource.prototype.upload = function (renderer, texture, glTexture) {\n            var gl = renderer.gl;\n            var _a = this, width = _a.width, height = _a.height;\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n            if (glTexture.dirtyId < 0) {\n                glTexture.width = width;\n                glTexture.height = height;\n                gl.texImage2D(texture.target, 0, texture.format, width, height, 0, texture.format, texture.type, null);\n            }\n            var doClear = this.DO_CLEAR;\n            if (doClear && !this._clearBuffer) {\n                this._clearBuffer = new Uint8Array(pixi_tilemap.Constant.boundSize * pixi_tilemap.Constant.boundSize * 4);\n            }\n            var bounds = this.boundSprites;\n            for (var i = 0; i < bounds.length; i++) {\n                var spr = bounds[i];\n                var tex = spr.texture.baseTexture;\n                if (glTexture.dirtyId >= this.dirties[i]) {\n                    continue;\n                }\n                var res = tex.resource;\n                if (!tex.valid || !res || !res.source) {\n                    continue;\n                }\n                if (doClear && (tex.width < this.boundSize || tex.height < this.boundSize)) {\n                    gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, this.boundSize, this.boundSize, texture.format, texture.type, this._clearBuffer);\n                }\n                gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, texture.format, texture.type, res.source);\n            }\n            return true;\n        };\n        return MultiTextureResource;\n    }(PIXI.resources.Resource));\n    pixi_tilemap.MultiTextureResource = MultiTextureResource;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var RectTileLayer = (function (_super) {\n        __extends(RectTileLayer, _super);\n        function RectTileLayer(zIndex, texture) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = 0;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.pointsBuf = [];\n            _this.hasAnim = false;\n            _this.offsetX = 0;\n            _this.offsetY = 0;\n            _this.compositeParent = false;\n            _this.vbId = 0;\n            _this.vb = null;\n            _this.vbBuffer = null;\n            _this.vbArray = null;\n            _this.vbInts = null;\n            _this.initialize(zIndex, texture);\n            return _this;\n        }\n        RectTileLayer.prototype.initialize = function (zIndex, textures) {\n            if (!textures) {\n                textures = [];\n            }\n            else if (!(textures instanceof Array) && textures.baseTexture) {\n                textures = [textures];\n            }\n            this.textures = textures;\n            this.zIndex = zIndex;\n        };\n        RectTileLayer.prototype.clear = function () {\n            this.pointsBuf.length = 0;\n            this.modificationMarker = 0;\n            this.hasAnim = false;\n        };\n        RectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var textureIndex = 0;\n            if (typeof texture_ === \"number\") {\n                textureIndex = texture_;\n                texture = this.textures[textureIndex];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                var found = false;\n                var textureList = this.textures;\n                for (var i = 0; i < textureList.length; i++) {\n                    if (textureList[i].baseTexture === texture.baseTexture) {\n                        textureIndex = i;\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    return false;\n                }\n            }\n            this.addRect(textureIndex, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        RectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight, animX, animY) {\n            if (animX === void 0) { animX = 0; }\n            if (animY === void 0) { animY = 0; }\n            var pb = this.pointsBuf;\n            this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\n            if (tileWidth === tileHeight) {\n                pb.push(u);\n                pb.push(v);\n                pb.push(x);\n                pb.push(y);\n                pb.push(tileWidth);\n                pb.push(tileHeight);\n                pb.push(animX | 0);\n                pb.push(animY | 0);\n                pb.push(textureIndex);\n            }\n            else {\n                var i = void 0;\n                if (tileWidth % tileHeight === 0) {\n                    for (i = 0; i < tileWidth / tileHeight; i++) {\n                        pb.push(u + i * tileHeight);\n                        pb.push(v);\n                        pb.push(x + i * tileHeight);\n                        pb.push(y);\n                        pb.push(tileHeight);\n                        pb.push(tileHeight);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else if (tileHeight % tileWidth === 0) {\n                    for (i = 0; i < tileHeight / tileWidth; i++) {\n                        pb.push(u);\n                        pb.push(v + i * tileWidth);\n                        pb.push(x);\n                        pb.push(y + i * tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else {\n                    pb.push(u);\n                    pb.push(v);\n                    pb.push(x);\n                    pb.push(y);\n                    pb.push(tileWidth);\n                    pb.push(tileHeight);\n                    pb.push(animX | 0);\n                    pb.push(animY | 0);\n                    pb.push(textureIndex);\n                }\n            }\n        };\n        RectTileLayer.prototype.renderCanvas = function (renderer) {\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            this.renderCanvasCore(renderer);\n        };\n        RectTileLayer.prototype.renderCanvasCore = function (renderer) {\n            if (this.textures.length === 0)\n                return;\n            var points = this.pointsBuf;\n            renderer.context.fillStyle = '#000000';\n            for (var i = 0, n = points.length; i < n; i += 9) {\n                var x1 = points[i], y1 = points[i + 1];\n                var x2 = points[i + 2], y2 = points[i + 3];\n                var w = points[i + 4];\n                var h = points[i + 5];\n                x1 += points[i + 6] * renderer.plugins.tilemap.tileAnim[0];\n                y1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[1];\n                var textureIndex = points[i + 8];\n                if (textureIndex >= 0) {\n                    renderer.context.drawImage(this.textures[textureIndex].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\n                }\n                else {\n                    renderer.context.globalAlpha = 0.5;\n                    renderer.context.fillRect(x2, y2, w, h);\n                    renderer.context.globalAlpha = 1;\n                }\n            }\n        };\n        RectTileLayer.prototype.destroyVb = function () {\n            if (this.vb) {\n                this.vb.destroy();\n                this.vb = null;\n            }\n        };\n        RectTileLayer.prototype.render = function (renderer) {\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            this.renderWebGLCore(renderer, plugin);\n        };\n        RectTileLayer.prototype.renderWebGLCore = function (renderer, plugin) {\n            var points = this.pointsBuf;\n            if (points.length === 0)\n                return;\n            var rectsCount = points.length / 9;\n            var shader = plugin.getShader();\n            var textures = this.textures;\n            if (textures.length === 0)\n                return;\n            plugin.bindTextures(renderer, shader, textures);\n            var vb = this.vb;\n            if (!vb) {\n                vb = plugin.createVb();\n                this.vb = vb;\n                this.vbId = vb.id;\n                this.vbBuffer = null;\n                this.modificationMarker = 0;\n            }\n            plugin.checkIndexBuffer(rectsCount, vb);\n            var boundCountPerBuffer = pixi_tilemap.Constant.boundCountPerBuffer;\n            var vertexBuf = vb.getBuffer('aVertexPosition');\n            var vertices = rectsCount * vb.vertPerQuad;\n            if (vertices === 0)\n                return;\n            if (this.modificationMarker !== vertices) {\n                this.modificationMarker = vertices;\n                var vs = vb.stride * vertices;\n                if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\n                    var bk = vb.stride;\n                    while (bk < vs) {\n                        bk *= 2;\n                    }\n                    this.vbBuffer = new ArrayBuffer(bk);\n                    this.vbArray = new Float32Array(this.vbBuffer);\n                    this.vbInts = new Uint32Array(this.vbBuffer);\n                    vertexBuf.update(this.vbBuffer);\n                }\n                var arr = this.vbArray, ints = this.vbInts;\n                var sz = 0;\n                var textureId = 0;\n                var shiftU = this.offsetX;\n                var shiftV = this.offsetY;\n                var tint = -1;\n                for (var i = 0; i < points.length; i += 9) {\n                    var eps = 0.5;\n                    if (this.compositeParent) {\n                        if (boundCountPerBuffer > 1) {\n                            textureId = (points[i + 8] >> 2);\n                            shiftU = this.offsetX * (points[i + 8] & 1);\n                            shiftV = this.offsetY * ((points[i + 8] >> 1) & 1);\n                        }\n                        else {\n                            textureId = points[i + 8];\n                            shiftU = 0;\n                            shiftV = 0;\n                        }\n                    }\n                    var x = points[i + 2], y = points[i + 3];\n                    var w = points[i + 4], h = points[i + 5];\n                    var u = points[i] + shiftU, v = points[i + 1] + shiftV;\n                    var animX = points[i + 6], animY = points[i + 7];\n                    arr[sz++] = x;\n                    arr[sz++] = y;\n                    arr[sz++] = u;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                }\n                vertexBuf.update(arr);\n            }\n            renderer.geometry.bind(vb, shader);\n            renderer.geometry.draw(PIXI.DRAW_MODES.TRIANGLES, rectsCount * 6, 0);\n        };\n        RectTileLayer.prototype.isModified = function (anim) {\n            if (this.modificationMarker !== this.pointsBuf.length ||\n                anim && this.hasAnim) {\n                return true;\n            }\n            return false;\n        };\n        RectTileLayer.prototype.clearModify = function () {\n            this.modificationMarker = this.pointsBuf.length;\n        };\n        RectTileLayer.prototype.destroy = function (options) {\n            _super.prototype.destroy.call(this, options);\n            this.destroyVb();\n        };\n        return RectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.RectTileLayer = RectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var rectShaderFrag = \"\\nvarying vec2 vTextureCoord;\\nvarying vec4 vFrame;\\nvarying float vTextureId;\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\n\\nvoid main(void){\\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\\n   float textureId = floor(vTextureId + 0.5);\\n\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\\n\";\n    var rectShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aFrame;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\n\\nuniform mat3 projTransMatrix;\\nuniform vec2 animationFrame;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vTextureId;\\nvarying vec4 vFrame;\\n\\nvoid main(void){\\n   gl_Position = vec4((projTransMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vec2 anim = aAnim * animationFrame;\\n   vTextureCoord = aTextureCoord + anim;\\n   vFrame = aFrame + vec4(anim, anim);\\n   vTextureId = aTextureId;\\n}\\n\";\n    var TilemapShader = (function (_super) {\n        __extends(TilemapShader, _super);\n        function TilemapShader(maxTextures, shaderVert, shaderFrag) {\n            var _this = _super.call(this, new PIXI.Program(shaderVert, shaderFrag), {\n                animationFrame: new Float32Array(2),\n                uSamplers: [],\n                uSamplerSize: [],\n                projTransMatrix: new PIXI.Matrix()\n            }) || this;\n            _this.maxTextures = 0;\n            _this.maxTextures = maxTextures;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return TilemapShader;\n    }(PIXI.Shader));\n    pixi_tilemap.TilemapShader = TilemapShader;\n    var RectTileShader = (function (_super) {\n        __extends(RectTileShader, _super);\n        function RectTileShader(maxTextures) {\n            var _this = _super.call(this, maxTextures, rectShaderVert, pixi_tilemap.shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)) || this;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return RectTileShader;\n    }(TilemapShader));\n    pixi_tilemap.RectTileShader = RectTileShader;\n    var RectTileGeom = (function (_super) {\n        __extends(RectTileGeom, _super);\n        function RectTileGeom() {\n            var _this = _super.call(this) || this;\n            _this.vertSize = 11;\n            _this.vertPerQuad = 4;\n            _this.stride = _this.vertSize * 4;\n            _this.lastTimeAccess = 0;\n            var buf = _this.buf = new PIXI.Buffer(new Float32Array(2), true, false);\n            _this.addAttribute('aVertexPosition', buf, 0, false, 0, _this.stride, 0)\n                .addAttribute('aTextureCoord', buf, 0, false, 0, _this.stride, 2 * 4)\n                .addAttribute('aFrame', buf, 0, false, 0, _this.stride, 4 * 4)\n                .addAttribute('aAnim', buf, 0, false, 0, _this.stride, 8 * 4)\n                .addAttribute('aTextureId', buf, 0, false, 0, _this.stride, 10 * 4);\n            return _this;\n        }\n        return RectTileGeom;\n    }(PIXI.Geometry));\n    pixi_tilemap.RectTileGeom = RectTileGeom;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var TileRenderer = (function (_super) {\n        __extends(TileRenderer, _super);\n        function TileRenderer(renderer) {\n            var _this = _super.call(this, renderer) || this;\n            _this.sn = -1;\n            _this.indexBuffer = null;\n            _this.ibLen = 0;\n            _this.tileAnim = [0, 0];\n            _this.texLoc = [];\n            _this.texResources = [];\n            _this.rectShader = new pixi_tilemap.RectTileShader(pixi_tilemap.Constant.maxTextures);\n            _this.indexBuffer = new PIXI.Buffer(undefined, true, true);\n            _this.checkIndexBuffer(2000);\n            _this.initBounds();\n            return _this;\n        }\n        TileRenderer.prototype.initBounds = function () {\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                return;\n            }\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            for (var i = 0; i < maxTextures; i++) {\n                var resource = new pixi_tilemap.MultiTextureResource(pixi_tilemap.Constant);\n                var baseTex = new PIXI.BaseTexture(resource);\n                baseTex.scaleMode = pixi_tilemap.Constant.SCALE_MODE;\n                baseTex.wrapMode = PIXI.WRAP_MODES.CLAMP;\n                this.texResources.push(resource);\n            }\n        };\n        TileRenderer.prototype.bindTexturesWithoutRT = function (renderer, shader, textures) {\n            var samplerSize = shader.uniforms.uSamplerSize;\n            this.texLoc.length = 0;\n            for (var i = 0; i < textures.length; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid) {\n                    return;\n                }\n                renderer.texture.bind(textures[i], i);\n                samplerSize[i * 2] = 1.0 / textures[i].baseTexture.width;\n                samplerSize[i * 2 + 1] = 1.0 / textures[i].baseTexture.height;\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        };\n        TileRenderer.prototype.bindTextures = function (renderer, shader, textures) {\n            var len = textures.length;\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            if (len > pixi_tilemap.Constant.boundCountPerBuffer * maxTextures) {\n                return;\n            }\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                this.bindTexturesWithoutRT(renderer, shader, textures);\n                return;\n            }\n            var i = 0;\n            for (; i < len; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid)\n                    continue;\n                var multi = this.texResources[i >> 2];\n                multi.setTexture(i & 3, texture);\n            }\n            var gltsUsed = (i + 3) >> 2;\n            for (i = 0; i < gltsUsed; i++) {\n                renderer.texture.bind(this.texResources[i].baseTex, i);\n            }\n        };\n        TileRenderer.prototype.start = function () {\n        };\n        TileRenderer.prototype.createVb = function () {\n            var geom = new pixi_tilemap.RectTileGeom();\n            geom.addIndex(this.indexBuffer);\n            geom.lastTimeAccess = Date.now();\n            return geom;\n        };\n        TileRenderer.prototype.checkIndexBuffer = function (size, vb) {\n            if (vb === void 0) { vb = null; }\n            var totalIndices = size * 6;\n            if (totalIndices <= this.ibLen) {\n                return;\n            }\n            var len = totalIndices;\n            while (len < totalIndices) {\n                len <<= 1;\n            }\n            this.ibLen = totalIndices;\n            this.indexBuffer.update(PIXI.utils.createIndicesForQuads(size, pixi_tilemap.Constant.use32bitIndex));\n        };\n        TileRenderer.prototype.getShader = function () {\n            return this.rectShader;\n        };\n        TileRenderer.prototype.destroy = function () {\n            _super.prototype.destroy.call(this);\n            this.rectShader = null;\n        };\n        return TileRenderer;\n    }(PIXI.ObjectRenderer));\n    pixi_tilemap.TileRenderer = TileRenderer;\n    PIXI.Renderer.registerPlugin('tilemap', TileRenderer);\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var ZLayer = (function (_super) {\n        __extends(ZLayer, _super);\n        function ZLayer(tilemap, zIndex) {\n            var _this = _super.call(this) || this;\n            _this._lastAnimationFrame = -1;\n            _this.tilemap = tilemap;\n            _this.z = zIndex;\n            return _this;\n        }\n        ZLayer.prototype.clear = function () {\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++)\n                layers[i].clear();\n            this._previousLayers = 0;\n        };\n        ZLayer.prototype.cacheIfDirty = function () {\n            var tilemap = this.tilemap;\n            var layers = this.children;\n            var modified = this._previousLayers !== layers.length;\n            this._previousLayers = layers.length;\n            var buf = this.canvasBuffer;\n            var tempRender = this._tempRender;\n            if (!buf) {\n                buf = this.canvasBuffer = document.createElement('canvas');\n                tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, { view: buf });\n                tempRender.context = tempRender.rootContext;\n                tempRender.plugins.tilemap.dontUseTransform = true;\n            }\n            if (buf.width !== tilemap._layerWidth ||\n                buf.height !== tilemap._layerHeight) {\n                buf.width = tilemap._layerWidth;\n                buf.height = tilemap._layerHeight;\n                modified = true;\n            }\n            var i;\n            if (!modified) {\n                for (i = 0; i < layers.length; i++) {\n                    if (layers[i].isModified(this._lastAnimationFrame !== tilemap.animationFrame)) {\n                        modified = true;\n                        break;\n                    }\n                }\n            }\n            this._lastAnimationFrame = tilemap.animationFrame;\n            if (modified) {\n                if (tilemap._hackRenderer) {\n                    tilemap._hackRenderer(tempRender);\n                }\n                tempRender.context.clearRect(0, 0, buf.width, buf.height);\n                for (i = 0; i < layers.length; i++) {\n                    layers[i].clearModify();\n                    layers[i].renderCanvas(tempRender);\n                }\n            }\n            this.layerTransform = this.worldTransform;\n            for (i = 0; i < layers.length; i++) {\n                this.layerTransform = layers[i].worldTransform;\n                break;\n            }\n        };\n        ZLayer.prototype.renderCanvas = function (renderer) {\n            this.cacheIfDirty();\n            var wt = this.layerTransform;\n            renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            var tilemap = this.tilemap;\n            renderer.context.drawImage(this.canvasBuffer, 0, 0);\n        };\n        return ZLayer;\n    }(PIXI.Container));\n    pixi_tilemap.ZLayer = ZLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    PIXI.tilemap = pixi_tilemap;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var shaderGenerator;\n    (function (shaderGenerator) {\n        function fillSamplers(shader, maxTextures) {\n            var sampleValues = [];\n            for (var i = 0; i < maxTextures; i++) {\n                sampleValues[i] = i;\n            }\n            shader.uniforms.uSamplers = sampleValues;\n            var samplerSize = [];\n            for (var i = 0; i < maxTextures; i++) {\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        }\n        shaderGenerator.fillSamplers = fillSamplers;\n        function generateFragmentSrc(maxTextures, fragmentSrc) {\n            return fragmentSrc.replace(/%count%/gi, maxTextures + \"\")\n                .replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\n        }\n        shaderGenerator.generateFragmentSrc = generateFragmentSrc;\n        function generateSampleSrc(maxTextures) {\n            var src = '';\n            src += '\\n';\n            src += '\\n';\n            src += 'if(vTextureId <= -1.0) {';\n            src += '\\n\\tcolor = shadowColor;';\n            src += '\\n}';\n            for (var i = 0; i < maxTextures; i++) {\n                src += '\\nelse ';\n                if (i < maxTextures - 1) {\n                    src += 'if(textureId == ' + i + '.0)';\n                }\n                src += '\\n{';\n                src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], textureCoord * uSamplerSize[' + i + ']);';\n                src += '\\n}';\n            }\n            src += '\\n';\n            src += '\\n';\n            return src;\n        }\n        shaderGenerator.generateSampleSrc = generateSampleSrc;\n    })(shaderGenerator = pixi_tilemap.shaderGenerator || (pixi_tilemap.shaderGenerator = {}));\n})(pixi_tilemap || (pixi_tilemap = {}));\n"],"sourceRoot":""}