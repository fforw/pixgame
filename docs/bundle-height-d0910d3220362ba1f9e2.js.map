{"version":3,"sources":["webpack://Game/webpack/bootstrap","webpack://Game/./src/Map.js","webpack://Game/./src/index-height.js","webpack://Game/./src/pixi-tilemap.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","TAU","Math","PI","N2","N3","N4","clamp","v","WATER_LINE","BEACH_LINE","WOODS_LINE","MOUNTAIN_LINE","WATER","SAND","GRASS","DIRT","ROCK","WOODS","WOODS2","RIVER","createBase","size","seed","map","Map","mapOffset","y","x","coords","heightCoords","heightFn","nx","ny","nz","nw","n3","noise4D","n4","directions","climbUp","probe","currentHigh","currentX","currentY","improved","createSprings","probes","probeCount","console","log","random","next","tile","randomProbes","walkingStart","firstWalker","filtered","uniqueProbes","unique","other","removeDuplicates","amount","arguments","undefined","twice","multis","_objectSpread","concat","jitter","flow","currentLow","Infinity","currentTile","read","_map$heightCoords","dir","flood","write","drawRivers","springs","flowingStart","width","min","firstFlower","_this","this","_classCallCheck","Prando","noise","SimplexNoise","factor","Uint8Array","Date","getTime","cos","sin","n0","n1","ctx","imageData","createImageData","off","z","w","onload","loading","document","querySelector","parentNode","removeChild","canvasElement","createElement","height","getElementById","appendChild","getContext","generate","render","putImageData","PIXI","pixi_tilemap","CanvasTileRenderer","renderer","tileAnim","dontUseTransform","cr","CanvasRenderer","registerPlugin","extendStatics","__extends","setPrototypeOf","__proto__","Array","b","__","constructor","CompositeRectTileLayer","_super","zIndex","bitmaps","texPerChild","modificationMarker","shadowColor","Float32Array","_globalMat","initialize","updateTransform","displayObjectUpdateTransform","Constant","boundCountPerBuffer","maxTextures","setBitmaps","len1","children","len2","ceil","textures","layer","RectTileLayer","compositeParent","offsetX","boundSize","offsetY","addChild","clear","addRect","textureIndex","u","tileWidth","tileHeight","childIndex","textureId","addFrame","texture_","animX","animY","texture","ind","Texture","from","tex","child","baseTexture","frame","renderCanvas","visible","worldAlpha","renderable","plugins","tilemap","wt","worldTransform","context","setTransform","a","tx","resolution","ty","layers","renderCanvasCore","plugin","shader","getShader","batch","setObjectRenderer","uniforms","projTransMatrix","globalUniforms","projectionMatrix","copyTo","append","animationFrame","renderWebGLCore","isModified","anim","clearModify","Container","bufferSize","use32bitIndex","SCALE_MODE","SCALE_MODES","LINEAR","DO_CLEAR","GraphicsLayer","transform","Matrix","IDENTITY","graphics","globalAlpha","Graphics","MultiTextureResource","options","_clearBuffer","baseTex","boundSprites","dirties","bounds","spr","Sprite","position","Error","setTexture","update","dirtyId","upload","glTexture","gl","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","texImage2D","target","format","type","doClear","res","resource","valid","source","texSubImage2D","resources","Resource","pointsBuf","hasAnim","vbId","vb","vbBuffer","vbArray","vbInts","found","textureList","pb","points","fillStyle","x1","y1","x2","y2","h","drawImage","fillRect","destroyVb","destroy","rectsCount","bindTextures","createVb","id","checkIndexBuffer","vertexBuf","getBuffer","vertices","vertPerQuad","vs","stride","byteLength","bk","ArrayBuffer","Uint32Array","arr","sz","shiftU","shiftV","geometry","draw","DRAW_MODES","TRIANGLES","rectShaderFrag","rectShaderVert","TilemapShader","shaderVert","shaderFrag","Program","uSamplers","uSamplerSize","shaderGenerator","fillSamplers","Shader","RectTileShader","generateFragmentSrc","RectTileGeom","vertSize","lastTimeAccess","buf","Buffer","addAttribute","Geometry","TileRenderer","sn","indexBuffer","ibLen","texLoc","texResources","rectShader","initBounds","BaseTexture","scaleMode","wrapMode","WRAP_MODES","CLAMP","bindTexturesWithoutRT","samplerSize","len","gltsUsed","start","geom","addIndex","now","totalIndices","utils","createIndicesForQuads","ObjectRenderer","Renderer","ZLayer","_lastAnimationFrame","_previousLayers","cacheIfDirty","modified","canvasBuffer","tempRender","_tempRender","view","rootContext","_layerWidth","_layerHeight","_hackRenderer","clearRect","layerTransform","sampleValues","fragmentSrc","replace","generateSampleSrc","src"],"mappings":"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","file":"bundle-height-d0910d3220362ba1f9e2.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpGame\"] = window[\"webpackJsonpGame\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([30,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// noinspection ES6UnusedImports\nimport STYLES from \"./style.css\"\nimport \"./pixi-tilemap\"\n\nimport SimplexNoise from \"simplex-noise\"\nimport Prando from \"prando\"\n// noinspection ES6UnusedImports\n\nconst TAU = Math.PI * 2;\n\nconst N1 = 0.4;\nconst N2 = 1.4;\nconst N3 = 20;\nconst N4 = 5;\n\n\nfunction clamp(v)\n{\n    return v < -1 ? -1 : v > 1 ? 1 : v;\n}\n\n\nconst WATER_LINE = 0.05;\nconst BEACH_LINE = 0.07;\nconst WOODS_LINE = 0.09;\nconst MOUNTAIN_LINE = 0.5;\n\nconst WATER = 0;\nconst SAND = 1;\nconst GRASS = 2;\nconst DIRT = 3;\nconst ROCK = 4;\nconst WOODS = 5;\nconst WOODS2 = 6;\nconst RIVER = 7;\n\n\nfunction createBase(size, seed)\n{\n    const map = new Map(size, seed);\n\n    let mapOffset = 0;\n\n    const data = map.data;\n\n    for (let y = 0; y < size; y++)\n    {\n        for (let x = 0; x < size; x++)\n        {\n            const coords = map.heightCoords(x,y);\n            const n = map.heightFn(x, y, coords);\n\n            if (n < WATER_LINE)\n            {\n                data[mapOffset++] = WATER;\n            }\n            else if (n < BEACH_LINE)\n            {\n                data[mapOffset++] = SAND;\n            }\n            else if (n < MOUNTAIN_LINE)\n            {\n                const v = (n - WATER_LINE) * (MOUNTAIN_LINE - WATER_LINE) * 255;\n\n                const {nx, ny, nz, nw} = coords;\n\n                const n3 = n > WOODS_LINE ? map.noise4D(nx * N4, nw * N4, ny * N4, nz * N4) : 1;\n                const n4 = map.noise4D(nx * N3, nw * N3, ny * N3, nz * N3);\n                if (n3 < 0.12)\n                {\n                    if (n4 < 0)\n                    {\n                        data[mapOffset++] = WOODS;\n                    }\n                    else\n                    {\n                        data[mapOffset++] = WOODS2;\n                    }\n                }\n                else\n                {\n                    if (n4 < 0)\n                    {\n                        data[mapOffset++] = GRASS;\n                    }\n                    else\n                    {\n                        data[mapOffset++] = DIRT;\n                    }\n                }\n\n            }\n            else\n            {\n                data[mapOffset++] = ROCK;\n            }\n        }\n    }\n\n    return map;\n}\n\nfunction randomProbes(map)\n{\n    const probes = [];\n\n    const { size } = map;\n\n    const probeCount = size * size / 1000;\n\n    console.log(\"Probe count =\", probeCount);\n\n    for (let i = 0; i < probeCount; i++)\n    {\n        const x = (map.random.next() * size) | 0;\n        const y = (map.random.next() * size) | 0;\n\n        const value = map.heightFn(x, y);\n\n        if (value > WATER_LINE)\n        {\n            probes.push({\n                x,\n                y,\n                value,\n                length: 0,\n                tile: 0\n            })\n        }\n    }\n    return probes;\n}\n\n\nconst directions = [\n    0, -1,\n    -1, 0,\n    1, 0,\n    0, 1\n];\n\n\nfunction climbUp(map, probe)\n{\n    let currentHigh = probe.value;\n    let currentX = probe.x;\n    let currentY = probe.y;\n\n    const { size } = map;\n\n    let improved = false;\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const x = probe.x + directions[i];\n        const y = probe.y + directions[i + 1];\n\n        if (x > 0 && y > 0 && x < size && y < size)\n        {\n            const value = map.heightFn(x, y);\n            if (value > currentHigh)\n            {\n                currentHigh = value;\n                currentX = x;\n                currentY = y;\n                improved = true;\n            }\n        }\n    }\n\n    if (!improved)\n    {\n        return false;\n    }\n    else\n    {\n        return {\n            x: currentX,\n            y: currentY,\n            value: currentHigh,\n            length: 0\n        };\n    }\n}\n\n\nfunction removeDuplicates(probes)\n{\n    const length = probes.length;\n\n    const uniqueProbes = [];\n\n    for (let i = 0; i < length; i++)\n    {\n        const probe = probes[i];\n        let unique = true;\n        for (let j = length - 1; j > i; j--)\n        {\n            const other = probes[j];\n            if (probe.x === other.x && probe.y === other.y)\n            {\n                unique = false;\n                break;\n            }\n        }\n\n        if (unique)\n        {\n            uniqueProbes.push(probe);\n        }\n    }\n\n    return uniqueProbes;\n}\n\n\nfunction jitter(map, filtered, amount = 4)\n{\n    const twice = amount * 2;\n\n    const multis = [];\n    for (let i = 0; i < filtered.length; i++)\n    {\n        const probe = filtered[i];\n        probe.x = (probe.x - amount + map.random.next() * twice) | 0;\n        probe.y = (probe.y - amount + map.random.next() * twice) | 0;\n\n        const v = map.heightFn(probe.x, probe.y);\n\n        if (v > MOUNTAIN_LINE && map.random.next() < 0.6)\n        {\n            multis.push(\n                {\n                    ...probe,\n                    x: (probe.x - amount + map.random.next() * twice) | 0,\n                    y: (probe.y - amount + map.random.next() * twice) | 0\n                }\n            );\n        }\n    }\n\n    return filtered.concat(multis);\n}\n\n\nfunction createSprings(map)\n{\n    const probes = randomProbes(map);\n\n    console.log(probes.length, \"random probes\");\n\n    const { size } = map;\n\n    const length = probes.length;\n    let walkingStart = 0, i = 0;\n    for (i = 0; i < size / 2 && walkingStart < length; i++)\n    {\n        //console.log(\"Walking \" + (length - walkingStart))\n        for (let j = walkingStart; j < length; j++)\n        {\n            const probe = probes[j];\n            const improved = climbUp(map, probe);\n            if (improved)\n            {\n                probes[j] = improved;\n            }\n            else\n            {\n                // swap current with first walker\n                const firstWalker = probes[walkingStart];\n                probes[walkingStart] = probes[j];\n                probes[j] = firstWalker;\n                // increase walking start\n                walkingStart++;\n            }\n        }\n\n        //drawSprings(probes, imageData, false);\n    }\n\n    console.log(\"Stopped climbing after \", i, \" iterations\");\n\n    const filtered = removeDuplicates(probes);\n\n    console.log(filtered.length, \"springs\");\n\n    return jitter(map, filtered);\n}\n\n\nfunction flow(map, probe)\n{\n    let currentLow = Infinity;\n    let currentX = probe.x;\n    let currentY = probe.y;\n    let currentIndex = -1;\n    let currentTile = -1;\n\n    let improved = false;\n\n    const { size } = map;\n\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const x = probe.x + directions[i];\n        const y = probe.y + directions[i + 1];\n\n        if (x > 0 && y > 0 && x < size && y < size)\n        {\n            let tile = map.read(x, y);\n            if (tile !== RIVER)\n            {\n                if (tile === ROCK)\n                {\n                    const {nx, ny, nz, nw} = map.heightCoords(x, y);\n                    const n3 = map.noise4D(nx * N3, nw * N3, ny * N3, nz * N3);\n                    if (n3 < 0)\n                    {\n                        tile = GRASS;\n                    }\n                    else\n                    {\n                        tile = DIRT;\n                    }\n                }\n\n                const value = map.heightFn(x, y) - (tile !== SAND && probe.tile === tile ? 0.01 : 0);\n                if (value < currentLow)\n                {\n                    currentLow = value;\n                    currentX = x;\n                    currentY = y;\n                    currentIndex = i;\n                    currentTile = tile;\n                    improved = true;\n                }\n            }\n        }\n    }\n\n    probe.length++;\n    if (!improved)\n    {\n        const dir = ((map.random.next() * 4)|0) * 2;\n        probe.x += directions[dir];\n        probe.y += directions[dir + 1];\n        probe.tile = map.read(probe.x, probe.y);\n    }\n    else\n    {\n        probe.x = currentX;\n        probe.y = currentY;\n        probe.value = currentLow;\n        probe.tile = currentTile;\n    }\n}\n\n\nfunction flood(map, x, y)\n{\n    const tile = map.read(x, y);\n    if (tile !== WATER && tile !== RIVER)\n    {\n        map.write(x, y, RIVER);\n    }\n}\n\n\nfunction drawRivers(map)\n{\n    const springs = createSprings(map);\n\n    const { size } = map;\n\n    const length = springs.length;\n    let flowingStart = 0, i = 0;\n    for (i = 0; i < size && flowingStart < length; i++)\n    {\n        //console.log(\"Flowing \" + (length - flowingStart))\n        for (let j = flowingStart; j < length; j++)\n        {\n            const probe = springs[j];\n\n            const {x, y} = probe;\n\n            flood(map, x, y);\n\n            flow(map, probe);\n\n            const width = Math.min(5, probe.length * 0.05)|0;\n\n            if (width > 1)\n            {\n                flood(map, x - 1, y);\n            }\n            if (width > 2)\n            {\n                flood(map, x + 1, y);\n            }\n            if (width > 3)\n            {\n                flood(map, x, y - 1);\n            }\n            if (width > 4)\n            {\n                flood(map, x, y + 1);\n            }\n\n            if (map.read(probe.x, probe.y) === WATER)\n            {\n                // swap current with first flower\n                const firstFlower = springs[flowingStart];\n                springs[flowingStart] = springs[j];\n                springs[j] = firstFlower;\n                // increase walking start\n                flowingStart++;\n            }\n        }\n\n        //drawSprings(springs, imageData, false);\n    }\n    console.log(\"Stopped flowing after \", i, \" iterations\");\n}\n\n\n\nexport default  class Map {\n    constructor(size = 800, seed)\n    {\n        console.log(\"New map \" + size + \" x \" + size + \", seed = \" + seed)\n\n        this.random = new Prando(seed);\n        this.noise = new SimplexNoise(() => this.random.next());\n        this.size = size;\n        this.factor = 1 / size;\n        this.data = new Uint8Array(size * size);\n    }\n\n\n    read(x, y)\n    {\n        return this.data[y * this.size + x];\n    }\n\n\n    write(x, y, tile)\n    {\n        this.data[y * this.size + x] = tile;\n    }\n\n    heightFn(x, y, coords = null)\n    {\n        const s = x * this.factor;\n        const t = y * this.factor;\n\n        let nx;\n        let ny;\n        let nz;\n        let nw;\n        if (coords)\n        {\n            nx = coords.nx;\n            ny = coords.ny;\n            nz = coords.nz;\n            nw = coords.nw;\n        }\n        else\n        {\n            nx = Math.cos(s * TAU);\n            ny = Math.cos(t * TAU);\n            nz = Math.sin(s * TAU);\n            nw = Math.sin(t * TAU);\n        }\n\n        const n0 = this.noise4D(nx * N1, ny * N1, nz * N1, nw * N1);\n        const n1 = this.noise4D(nx * N2, nw * N2, ny * N2, nz * N2);\n        return clamp(n0 < 0 ? -n0 * n0 : n0 * n0) + n1 * 0.3;\n    }\n\n\n    heightCoords(x, y)\n    {\n\n        const s = x * this.factor;\n        const t = y * this.factor;\n\n        const nx = Math.cos(s * TAU);\n        const ny = Math.cos(t * TAU);\n        const nz = Math.sin(s * TAU);\n        const nw = Math.sin(t * TAU);\n\n        return {\n            nx,\n            ny,\n            nz,\n            nw\n        };\n    }\n\n    render(ctx)\n    {\n        const { size } = this;\n\n        const imageData = ctx.createImageData(size, size);\n\n        let off = 0;\n        const data = imageData.data;\n        for (let y = 0; y < size; y++)\n        {\n            for (let x = 0; x < size; x++)\n            {\n                const tile = this.read(x, y);\n\n                switch (tile)\n                {\n                    case RIVER :\n                    case WATER :\n                        data[off++] = 0;\n                        data[off++] = 32;\n                        data[off++] = 128;\n                        data[off++] = 255;\n                        break;\n                    case SAND :\n                        data[off++] = 192;\n                        data[off++] = 160;\n                        data[off++] = 0;\n                        data[off++] = 255;\n                        break;\n                    case GRASS :\n                        data[off++] = 0;\n                        data[off++] = 128;\n                        data[off++] = 0;\n                        data[off++] = 255;\n                        break;\n                    case WOODS:\n                        data[off++] = 0;\n                        data[off++] = 96;\n                        data[off++] = 0;\n                        data[off++] = 128;\n                        break;\n                    case WOODS2:\n                        data[off++] = 0;\n                        data[off++] = 64;\n                        data[off++] = 0;\n                        data[off++] = 144;\n                        break;\n                    case DIRT :\n                        data[off++] = 64;\n                        data[off++] = 64;\n                        data[off++] = 0;\n                        data[off++] = 255;\n                        break;\n                    case ROCK :\n                        data[off++] = 160;\n                        data[off++] = 160;\n                        data[off++] = 160;\n                        data[off++] = 255;\n                        break;\n                }\n            }\n        }\n\n        return imageData;\n\n    }\n\n    noise4D(x,y,z,w)\n    {\n        return this.noise.noise4D(x,y,z,w);\n\n    }\n\n    static generate(size, seed = new Date().getTime()) {\n        const map = createBase(size, seed);\n         drawRivers(map);\n        return map;\n    };\n\n}\n","// noinspection ES6UnusedImports\nimport STYLES from \"./style.css\"\nimport \"./pixi-tilemap\"\n\nimport Map from \"./Map\";\n\n\nwindow.onload = () => {\n\n    const loading = document.querySelector(\"div.loading\");\n    loading.parentNode.removeChild(loading);\n\n    const size = 1024;\n\n    const canvasElement = document.createElement(\"canvas\");\n    canvasElement.width = size;\n    canvasElement.height = size;\n\n    document.getElementById(\"root\").appendChild(canvasElement);\n\n    const ctx = canvasElement.getContext(\"2d\");\n\n\n    const map = Map.generate(size, \"floppy-disk\");\n    const imageData = map.render(ctx);\n    ctx.putImageData(imageData, 0, 0);\n\n    console.log(\"ready\");\n};\n","var pixi_tilemap;\n(function (pixi_tilemap) {\n    var CanvasTileRenderer = (function () {\n        function CanvasTileRenderer(renderer) {\n            this.tileAnim = [0, 0];\n            this.dontUseTransform = false;\n            this.renderer = renderer;\n            this.tileAnim = [0, 0];\n        }\n        return CanvasTileRenderer;\n    }());\n    pixi_tilemap.CanvasTileRenderer = CanvasTileRenderer;\n    var cr = PIXI.CanvasRenderer;\n    if (cr) {\n        cr.registerPlugin('tilemap', CanvasTileRenderer);\n    }\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var CompositeRectTileLayer = (function (_super) {\n        __extends(CompositeRectTileLayer, _super);\n        function CompositeRectTileLayer(zIndex, bitmaps, texPerChild) {\n            var _this = _super.call(this) || this;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.initialize.apply(_this, arguments);\n            return _this;\n        }\n        CompositeRectTileLayer.prototype.updateTransform = function () {\n            this.displayObjectUpdateTransform();\n        };\n        CompositeRectTileLayer.prototype.initialize = function (zIndex, bitmaps, texPerChild) {\n            if (texPerChild === true) {\n                texPerChild = 0;\n            }\n            this.z = this.zIndex = zIndex;\n            this.texPerChild = texPerChild || pixi_tilemap.Constant.boundCountPerBuffer * pixi_tilemap.Constant.maxTextures;\n            if (bitmaps) {\n                this.setBitmaps(bitmaps);\n            }\n        };\n        CompositeRectTileLayer.prototype.setBitmaps = function (bitmaps) {\n            var texPerChild = this.texPerChild;\n            var len1 = this.children.length;\n            var len2 = Math.ceil(bitmaps.length / texPerChild);\n            var i;\n            for (i = 0; i < len1; i++) {\n                this.children[i].textures = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\n            }\n            for (i = len1; i < len2; i++) {\n                var layer = new pixi_tilemap.RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild));\n                layer.compositeParent = true;\n                layer.offsetX = pixi_tilemap.Constant.boundSize;\n                layer.offsetY = pixi_tilemap.Constant.boundSize;\n                this.addChild(layer);\n            }\n        };\n        CompositeRectTileLayer.prototype.clear = function () {\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i].clear();\n            }\n            this.modificationMarker = 0;\n        };\n        CompositeRectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight) {\n            var childIndex = textureIndex / this.texPerChild >> 0;\n            var textureId = textureIndex % this.texPerChild;\n            if (this.children[childIndex] && this.children[childIndex].textures) {\n                this.children[childIndex].addRect(textureId, u, v, x, y, tileWidth, tileHeight);\n            }\n        };\n        CompositeRectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var layer = null;\n            var ind = 0;\n            var children = this.children;\n            if (typeof texture_ === \"number\") {\n                var childIndex = texture_ / this.texPerChild >> 0;\n                layer = children[childIndex];\n                if (!layer) {\n                    layer = children[0];\n                    if (!layer) {\n                        return false;\n                    }\n                    ind = 0;\n                }\n                else {\n                    ind = texture_ % this.texPerChild;\n                }\n                texture = layer.textures[ind];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    var tex = child.textures;\n                    for (var j = 0; j < tex.length; j++) {\n                        if (tex[j].baseTexture === texture.baseTexture) {\n                            layer = child;\n                            ind = j;\n                            break;\n                        }\n                    }\n                    if (layer) {\n                        break;\n                    }\n                }\n                if (!layer) {\n                    for (var i = 0; i < children.length; i++) {\n                        var child = children[i];\n                        if (child.textures.length < this.texPerChild) {\n                            layer = child;\n                            ind = child.textures.length;\n                            child.textures.push(texture);\n                            break;\n                        }\n                    }\n                    if (!layer) {\n                        layer = new pixi_tilemap.RectTileLayer(this.zIndex, texture);\n                        layer.compositeParent = true;\n                        layer.offsetX = pixi_tilemap.Constant.boundSize;\n                        layer.offsetY = pixi_tilemap.Constant.boundSize;\n                        children.push(layer);\n                        ind = 0;\n                    }\n                }\n            }\n            layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        CompositeRectTileLayer.prototype.renderCanvas = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderCanvasCore(renderer);\n            }\n        };\n        CompositeRectTileLayer.prototype.render = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderWebGLCore(renderer, plugin);\n            }\n        };\n        CompositeRectTileLayer.prototype.isModified = function (anim) {\n            var layers = this.children;\n            if (this.modificationMarker !== layers.length) {\n                return true;\n            }\n            for (var i = 0; i < layers.length; i++) {\n                if (layers[i].isModified(anim)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        CompositeRectTileLayer.prototype.clearModify = function () {\n            var layers = this.children;\n            this.modificationMarker = layers.length;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].clearModify();\n            }\n        };\n        return CompositeRectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.CompositeRectTileLayer = CompositeRectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    pixi_tilemap.Constant = {\n        maxTextures: 4,\n        bufferSize: 2048,\n        boundSize: 1024,\n        boundCountPerBuffer: 1,\n        use32bitIndex: false,\n        SCALE_MODE: PIXI.SCALE_MODES.LINEAR,\n        DO_CLEAR: true\n    };\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var GraphicsLayer = (function (_super) {\n        __extends(GraphicsLayer, _super);\n        function GraphicsLayer(zIndex) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = zIndex;\n            return _this;\n        }\n        GraphicsLayer.prototype.renderCanvas = function (renderer) {\n            var wt = null;\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                wt = this.transform.worldTransform;\n                this.transform.worldTransform = PIXI.Matrix.IDENTITY;\n            }\n            renderer.plugins.graphics.render(this);\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                this.transform.worldTransform = wt;\n            }\n            renderer.context.globalAlpha = 1.0;\n        };\n        GraphicsLayer.prototype.isModified = function (anim) {\n            return false;\n        };\n        GraphicsLayer.prototype.clearModify = function () {\n        };\n        return GraphicsLayer;\n    }(PIXI.Graphics));\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var MultiTextureResource = (function (_super) {\n        __extends(MultiTextureResource, _super);\n        function MultiTextureResource(options) {\n            var _this = _super.call(this, options.bufferSize, options.bufferSize) || this;\n            _this.DO_CLEAR = false;\n            _this.boundSize = 0;\n            _this._clearBuffer = null;\n            _this.baseTex = null;\n            _this.boundSprites = [];\n            _this.dirties = [];\n            var bounds = _this.boundSprites;\n            var dirties = _this.dirties;\n            _this.boundSize = options.boundSize;\n            for (var j = 0; j < options.boundCountPerBuffer; j++) {\n                var spr = new PIXI.Sprite();\n                spr.position.x = options.boundSize * (j & 1);\n                spr.position.y = options.boundSize * (j >> 1);\n                bounds.push(spr);\n                dirties.push(0);\n            }\n            _this.DO_CLEAR = !!options.DO_CLEAR;\n            return _this;\n        }\n        MultiTextureResource.prototype.bind = function (baseTexture) {\n            if (this.baseTex) {\n                throw new Error('Only one baseTexture is allowed for this resource!');\n            }\n            this.baseTex = baseTexture;\n            _super.prototype.bind.call(this, baseTexture);\n        };\n        MultiTextureResource.prototype.setTexture = function (ind, texture) {\n            var spr = this.boundSprites[ind];\n            if (spr.texture.baseTexture === texture.baseTexture) {\n                return;\n            }\n            spr.texture = texture;\n            this.baseTex.update();\n            this.dirties[ind] = this.baseTex.dirtyId;\n        };\n        MultiTextureResource.prototype.upload = function (renderer, texture, glTexture) {\n            var gl = renderer.gl;\n            var _a = this, width = _a.width, height = _a.height;\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n            if (glTexture.dirtyId < 0) {\n                glTexture.width = width;\n                glTexture.height = height;\n                gl.texImage2D(texture.target, 0, texture.format, width, height, 0, texture.format, texture.type, null);\n            }\n            var doClear = this.DO_CLEAR;\n            if (doClear && !this._clearBuffer) {\n                this._clearBuffer = new Uint8Array(pixi_tilemap.Constant.boundSize * pixi_tilemap.Constant.boundSize * 4);\n            }\n            var bounds = this.boundSprites;\n            for (var i = 0; i < bounds.length; i++) {\n                var spr = bounds[i];\n                var tex = spr.texture.baseTexture;\n                if (glTexture.dirtyId >= this.dirties[i]) {\n                    continue;\n                }\n                var res = tex.resource;\n                if (!tex.valid || !res || !res.source) {\n                    continue;\n                }\n                if (doClear && (tex.width < this.boundSize || tex.height < this.boundSize)) {\n                    gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, this.boundSize, this.boundSize, texture.format, texture.type, this._clearBuffer);\n                }\n                gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, texture.format, texture.type, res.source);\n            }\n            return true;\n        };\n        return MultiTextureResource;\n    }(PIXI.resources.Resource));\n    pixi_tilemap.MultiTextureResource = MultiTextureResource;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var RectTileLayer = (function (_super) {\n        __extends(RectTileLayer, _super);\n        function RectTileLayer(zIndex, texture) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = 0;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.pointsBuf = [];\n            _this.hasAnim = false;\n            _this.offsetX = 0;\n            _this.offsetY = 0;\n            _this.compositeParent = false;\n            _this.vbId = 0;\n            _this.vb = null;\n            _this.vbBuffer = null;\n            _this.vbArray = null;\n            _this.vbInts = null;\n            _this.initialize(zIndex, texture);\n            return _this;\n        }\n        RectTileLayer.prototype.initialize = function (zIndex, textures) {\n            if (!textures) {\n                textures = [];\n            }\n            else if (!(textures instanceof Array) && textures.baseTexture) {\n                textures = [textures];\n            }\n            this.textures = textures;\n            this.zIndex = zIndex;\n        };\n        RectTileLayer.prototype.clear = function () {\n            this.pointsBuf.length = 0;\n            this.modificationMarker = 0;\n            this.hasAnim = false;\n        };\n        RectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var textureIndex = 0;\n            if (typeof texture_ === \"number\") {\n                textureIndex = texture_;\n                texture = this.textures[textureIndex];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                var found = false;\n                var textureList = this.textures;\n                for (var i = 0; i < textureList.length; i++) {\n                    if (textureList[i].baseTexture === texture.baseTexture) {\n                        textureIndex = i;\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    return false;\n                }\n            }\n            this.addRect(textureIndex, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        RectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight, animX, animY) {\n            if (animX === void 0) { animX = 0; }\n            if (animY === void 0) { animY = 0; }\n            var pb = this.pointsBuf;\n            this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\n            if (tileWidth === tileHeight) {\n                pb.push(u);\n                pb.push(v);\n                pb.push(x);\n                pb.push(y);\n                pb.push(tileWidth);\n                pb.push(tileHeight);\n                pb.push(animX | 0);\n                pb.push(animY | 0);\n                pb.push(textureIndex);\n            }\n            else {\n                var i = void 0;\n                if (tileWidth % tileHeight === 0) {\n                    for (i = 0; i < tileWidth / tileHeight; i++) {\n                        pb.push(u + i * tileHeight);\n                        pb.push(v);\n                        pb.push(x + i * tileHeight);\n                        pb.push(y);\n                        pb.push(tileHeight);\n                        pb.push(tileHeight);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else if (tileHeight % tileWidth === 0) {\n                    for (i = 0; i < tileHeight / tileWidth; i++) {\n                        pb.push(u);\n                        pb.push(v + i * tileWidth);\n                        pb.push(x);\n                        pb.push(y + i * tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else {\n                    pb.push(u);\n                    pb.push(v);\n                    pb.push(x);\n                    pb.push(y);\n                    pb.push(tileWidth);\n                    pb.push(tileHeight);\n                    pb.push(animX | 0);\n                    pb.push(animY | 0);\n                    pb.push(textureIndex);\n                }\n            }\n        };\n        RectTileLayer.prototype.renderCanvas = function (renderer) {\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            this.renderCanvasCore(renderer);\n        };\n        RectTileLayer.prototype.renderCanvasCore = function (renderer) {\n            if (this.textures.length === 0)\n                return;\n            var points = this.pointsBuf;\n            renderer.context.fillStyle = '#000000';\n            for (var i = 0, n = points.length; i < n; i += 9) {\n                var x1 = points[i], y1 = points[i + 1];\n                var x2 = points[i + 2], y2 = points[i + 3];\n                var w = points[i + 4];\n                var h = points[i + 5];\n                x1 += points[i + 6] * renderer.plugins.tilemap.tileAnim[0];\n                y1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[1];\n                var textureIndex = points[i + 8];\n                if (textureIndex >= 0) {\n                    renderer.context.drawImage(this.textures[textureIndex].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\n                }\n                else {\n                    renderer.context.globalAlpha = 0.5;\n                    renderer.context.fillRect(x2, y2, w, h);\n                    renderer.context.globalAlpha = 1;\n                }\n            }\n        };\n        RectTileLayer.prototype.destroyVb = function () {\n            if (this.vb) {\n                this.vb.destroy();\n                this.vb = null;\n            }\n        };\n        RectTileLayer.prototype.render = function (renderer) {\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            this.renderWebGLCore(renderer, plugin);\n        };\n        RectTileLayer.prototype.renderWebGLCore = function (renderer, plugin) {\n            var points = this.pointsBuf;\n            if (points.length === 0)\n                return;\n            var rectsCount = points.length / 9;\n            var shader = plugin.getShader();\n            var textures = this.textures;\n            if (textures.length === 0)\n                return;\n            plugin.bindTextures(renderer, shader, textures);\n            var vb = this.vb;\n            if (!vb) {\n                vb = plugin.createVb();\n                this.vb = vb;\n                this.vbId = vb.id;\n                this.vbBuffer = null;\n                this.modificationMarker = 0;\n            }\n            plugin.checkIndexBuffer(rectsCount, vb);\n            var boundCountPerBuffer = pixi_tilemap.Constant.boundCountPerBuffer;\n            var vertexBuf = vb.getBuffer('aVertexPosition');\n            var vertices = rectsCount * vb.vertPerQuad;\n            if (vertices === 0)\n                return;\n            if (this.modificationMarker !== vertices) {\n                this.modificationMarker = vertices;\n                var vs = vb.stride * vertices;\n                if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\n                    var bk = vb.stride;\n                    while (bk < vs) {\n                        bk *= 2;\n                    }\n                    this.vbBuffer = new ArrayBuffer(bk);\n                    this.vbArray = new Float32Array(this.vbBuffer);\n                    this.vbInts = new Uint32Array(this.vbBuffer);\n                    vertexBuf.update(this.vbBuffer);\n                }\n                var arr = this.vbArray, ints = this.vbInts;\n                var sz = 0;\n                var textureId = 0;\n                var shiftU = this.offsetX;\n                var shiftV = this.offsetY;\n                var tint = -1;\n                for (var i = 0; i < points.length; i += 9) {\n                    var eps = 0.5;\n                    if (this.compositeParent) {\n                        if (boundCountPerBuffer > 1) {\n                            textureId = (points[i + 8] >> 2);\n                            shiftU = this.offsetX * (points[i + 8] & 1);\n                            shiftV = this.offsetY * ((points[i + 8] >> 1) & 1);\n                        }\n                        else {\n                            textureId = points[i + 8];\n                            shiftU = 0;\n                            shiftV = 0;\n                        }\n                    }\n                    var x = points[i + 2], y = points[i + 3];\n                    var w = points[i + 4], h = points[i + 5];\n                    var u = points[i] + shiftU, v = points[i + 1] + shiftV;\n                    var animX = points[i + 6], animY = points[i + 7];\n                    arr[sz++] = x;\n                    arr[sz++] = y;\n                    arr[sz++] = u;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                }\n                vertexBuf.update(arr);\n            }\n            renderer.geometry.bind(vb, shader);\n            renderer.geometry.draw(PIXI.DRAW_MODES.TRIANGLES, rectsCount * 6, 0);\n        };\n        RectTileLayer.prototype.isModified = function (anim) {\n            if (this.modificationMarker !== this.pointsBuf.length ||\n                anim && this.hasAnim) {\n                return true;\n            }\n            return false;\n        };\n        RectTileLayer.prototype.clearModify = function () {\n            this.modificationMarker = this.pointsBuf.length;\n        };\n        RectTileLayer.prototype.destroy = function (options) {\n            _super.prototype.destroy.call(this, options);\n            this.destroyVb();\n        };\n        return RectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.RectTileLayer = RectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var rectShaderFrag = \"\\nvarying vec2 vTextureCoord;\\nvarying vec4 vFrame;\\nvarying float vTextureId;\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\n\\nvoid main(void){\\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\\n   float textureId = floor(vTextureId + 0.5);\\n\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\\n\";\n    var rectShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aFrame;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\n\\nuniform mat3 projTransMatrix;\\nuniform vec2 animationFrame;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vTextureId;\\nvarying vec4 vFrame;\\n\\nvoid main(void){\\n   gl_Position = vec4((projTransMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vec2 anim = aAnim * animationFrame;\\n   vTextureCoord = aTextureCoord + anim;\\n   vFrame = aFrame + vec4(anim, anim);\\n   vTextureId = aTextureId;\\n}\\n\";\n    var TilemapShader = (function (_super) {\n        __extends(TilemapShader, _super);\n        function TilemapShader(maxTextures, shaderVert, shaderFrag) {\n            var _this = _super.call(this, new PIXI.Program(shaderVert, shaderFrag), {\n                animationFrame: new Float32Array(2),\n                uSamplers: [],\n                uSamplerSize: [],\n                projTransMatrix: new PIXI.Matrix()\n            }) || this;\n            _this.maxTextures = 0;\n            _this.maxTextures = maxTextures;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return TilemapShader;\n    }(PIXI.Shader));\n    pixi_tilemap.TilemapShader = TilemapShader;\n    var RectTileShader = (function (_super) {\n        __extends(RectTileShader, _super);\n        function RectTileShader(maxTextures) {\n            var _this = _super.call(this, maxTextures, rectShaderVert, pixi_tilemap.shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)) || this;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return RectTileShader;\n    }(TilemapShader));\n    pixi_tilemap.RectTileShader = RectTileShader;\n    var RectTileGeom = (function (_super) {\n        __extends(RectTileGeom, _super);\n        function RectTileGeom() {\n            var _this = _super.call(this) || this;\n            _this.vertSize = 11;\n            _this.vertPerQuad = 4;\n            _this.stride = _this.vertSize * 4;\n            _this.lastTimeAccess = 0;\n            var buf = _this.buf = new PIXI.Buffer(new Float32Array(2), true, false);\n            _this.addAttribute('aVertexPosition', buf, 0, false, 0, _this.stride, 0)\n                .addAttribute('aTextureCoord', buf, 0, false, 0, _this.stride, 2 * 4)\n                .addAttribute('aFrame', buf, 0, false, 0, _this.stride, 4 * 4)\n                .addAttribute('aAnim', buf, 0, false, 0, _this.stride, 8 * 4)\n                .addAttribute('aTextureId', buf, 0, false, 0, _this.stride, 10 * 4);\n            return _this;\n        }\n        return RectTileGeom;\n    }(PIXI.Geometry));\n    pixi_tilemap.RectTileGeom = RectTileGeom;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var TileRenderer = (function (_super) {\n        __extends(TileRenderer, _super);\n        function TileRenderer(renderer) {\n            var _this = _super.call(this, renderer) || this;\n            _this.sn = -1;\n            _this.indexBuffer = null;\n            _this.ibLen = 0;\n            _this.tileAnim = [0, 0];\n            _this.texLoc = [];\n            _this.texResources = [];\n            _this.rectShader = new pixi_tilemap.RectTileShader(pixi_tilemap.Constant.maxTextures);\n            _this.indexBuffer = new PIXI.Buffer(undefined, true, true);\n            _this.checkIndexBuffer(2000);\n            _this.initBounds();\n            return _this;\n        }\n        TileRenderer.prototype.initBounds = function () {\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                return;\n            }\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            for (var i = 0; i < maxTextures; i++) {\n                var resource = new pixi_tilemap.MultiTextureResource(pixi_tilemap.Constant);\n                var baseTex = new PIXI.BaseTexture(resource);\n                baseTex.scaleMode = pixi_tilemap.Constant.SCALE_MODE;\n                baseTex.wrapMode = PIXI.WRAP_MODES.CLAMP;\n                this.texResources.push(resource);\n            }\n        };\n        TileRenderer.prototype.bindTexturesWithoutRT = function (renderer, shader, textures) {\n            var samplerSize = shader.uniforms.uSamplerSize;\n            this.texLoc.length = 0;\n            for (var i = 0; i < textures.length; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid) {\n                    return;\n                }\n                renderer.texture.bind(textures[i], i);\n                samplerSize[i * 2] = 1.0 / textures[i].baseTexture.width;\n                samplerSize[i * 2 + 1] = 1.0 / textures[i].baseTexture.height;\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        };\n        TileRenderer.prototype.bindTextures = function (renderer, shader, textures) {\n            var len = textures.length;\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            if (len > pixi_tilemap.Constant.boundCountPerBuffer * maxTextures) {\n                return;\n            }\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                this.bindTexturesWithoutRT(renderer, shader, textures);\n                return;\n            }\n            var i = 0;\n            for (; i < len; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid)\n                    continue;\n                var multi = this.texResources[i >> 2];\n                multi.setTexture(i & 3, texture);\n            }\n            var gltsUsed = (i + 3) >> 2;\n            for (i = 0; i < gltsUsed; i++) {\n                renderer.texture.bind(this.texResources[i].baseTex, i);\n            }\n        };\n        TileRenderer.prototype.start = function () {\n        };\n        TileRenderer.prototype.createVb = function () {\n            var geom = new pixi_tilemap.RectTileGeom();\n            geom.addIndex(this.indexBuffer);\n            geom.lastTimeAccess = Date.now();\n            return geom;\n        };\n        TileRenderer.prototype.checkIndexBuffer = function (size, vb) {\n            if (vb === void 0) { vb = null; }\n            var totalIndices = size * 6;\n            if (totalIndices <= this.ibLen) {\n                return;\n            }\n            var len = totalIndices;\n            while (len < totalIndices) {\n                len <<= 1;\n            }\n            this.ibLen = totalIndices;\n            this.indexBuffer.update(PIXI.utils.createIndicesForQuads(size, pixi_tilemap.Constant.use32bitIndex));\n        };\n        TileRenderer.prototype.getShader = function () {\n            return this.rectShader;\n        };\n        TileRenderer.prototype.destroy = function () {\n            _super.prototype.destroy.call(this);\n            this.rectShader = null;\n        };\n        return TileRenderer;\n    }(PIXI.ObjectRenderer));\n    pixi_tilemap.TileRenderer = TileRenderer;\n    PIXI.Renderer.registerPlugin('tilemap', TileRenderer);\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var ZLayer = (function (_super) {\n        __extends(ZLayer, _super);\n        function ZLayer(tilemap, zIndex) {\n            var _this = _super.call(this) || this;\n            _this._lastAnimationFrame = -1;\n            _this.tilemap = tilemap;\n            _this.z = zIndex;\n            return _this;\n        }\n        ZLayer.prototype.clear = function () {\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++)\n                layers[i].clear();\n            this._previousLayers = 0;\n        };\n        ZLayer.prototype.cacheIfDirty = function () {\n            var tilemap = this.tilemap;\n            var layers = this.children;\n            var modified = this._previousLayers !== layers.length;\n            this._previousLayers = layers.length;\n            var buf = this.canvasBuffer;\n            var tempRender = this._tempRender;\n            if (!buf) {\n                buf = this.canvasBuffer = document.createElement('canvas');\n                tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, { view: buf });\n                tempRender.context = tempRender.rootContext;\n                tempRender.plugins.tilemap.dontUseTransform = true;\n            }\n            if (buf.width !== tilemap._layerWidth ||\n                buf.height !== tilemap._layerHeight) {\n                buf.width = tilemap._layerWidth;\n                buf.height = tilemap._layerHeight;\n                modified = true;\n            }\n            var i;\n            if (!modified) {\n                for (i = 0; i < layers.length; i++) {\n                    if (layers[i].isModified(this._lastAnimationFrame !== tilemap.animationFrame)) {\n                        modified = true;\n                        break;\n                    }\n                }\n            }\n            this._lastAnimationFrame = tilemap.animationFrame;\n            if (modified) {\n                if (tilemap._hackRenderer) {\n                    tilemap._hackRenderer(tempRender);\n                }\n                tempRender.context.clearRect(0, 0, buf.width, buf.height);\n                for (i = 0; i < layers.length; i++) {\n                    layers[i].clearModify();\n                    layers[i].renderCanvas(tempRender);\n                }\n            }\n            this.layerTransform = this.worldTransform;\n            for (i = 0; i < layers.length; i++) {\n                this.layerTransform = layers[i].worldTransform;\n                break;\n            }\n        };\n        ZLayer.prototype.renderCanvas = function (renderer) {\n            this.cacheIfDirty();\n            var wt = this.layerTransform;\n            renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            var tilemap = this.tilemap;\n            renderer.context.drawImage(this.canvasBuffer, 0, 0);\n        };\n        return ZLayer;\n    }(PIXI.Container));\n    pixi_tilemap.ZLayer = ZLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    PIXI.tilemap = pixi_tilemap;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var shaderGenerator;\n    (function (shaderGenerator) {\n        function fillSamplers(shader, maxTextures) {\n            var sampleValues = [];\n            for (var i = 0; i < maxTextures; i++) {\n                sampleValues[i] = i;\n            }\n            shader.uniforms.uSamplers = sampleValues;\n            var samplerSize = [];\n            for (var i = 0; i < maxTextures; i++) {\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        }\n        shaderGenerator.fillSamplers = fillSamplers;\n        function generateFragmentSrc(maxTextures, fragmentSrc) {\n            return fragmentSrc.replace(/%count%/gi, maxTextures + \"\")\n                .replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\n        }\n        shaderGenerator.generateFragmentSrc = generateFragmentSrc;\n        function generateSampleSrc(maxTextures) {\n            var src = '';\n            src += '\\n';\n            src += '\\n';\n            src += 'if(vTextureId <= -1.0) {';\n            src += '\\n\\tcolor = shadowColor;';\n            src += '\\n}';\n            for (var i = 0; i < maxTextures; i++) {\n                src += '\\nelse ';\n                if (i < maxTextures - 1) {\n                    src += 'if(textureId == ' + i + '.0)';\n                }\n                src += '\\n{';\n                src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], textureCoord * uSamplerSize[' + i + ']);';\n                src += '\\n}';\n            }\n            src += '\\n';\n            src += '\\n';\n            return src;\n        }\n        shaderGenerator.generateSampleSrc = generateSampleSrc;\n    })(shaderGenerator = pixi_tilemap.shaderGenerator || (pixi_tilemap.shaderGenerator = {}));\n})(pixi_tilemap || (pixi_tilemap = {}));\n"],"sourceRoot":""}