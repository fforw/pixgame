{"version":3,"sources":["webpack://Game/webpack/bootstrap","webpack://Game/./src/flood.js","webpack://Game/./src/WorldMap.js","webpack://Game/./src/index-height.js","webpack://Game/./src/pixi-tilemap.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","flood","map","x","y","width","off","size","tiles","things","BLOCKED","TILE_TO_BASE_TILE","WATER","pickVariant","RIVER","Error","TAU","Math","PI","N3","N4","WATER_LINE","BEACH_LINE","WOODS_LINE","MOUNTAIN_LINE","SAND","GRASS","DIRT","ROCK","WOODS","WOODS2","MARKER","LARGE_TREE","LARGE_TREE_2","BOULDER","calcWeightSum","array","sum","tileNames","variants","_defineProperty","_variants","Array","sTile","baseTile","variantArray","spawnTable","table","normalizeSpawnTable","_normalizeSpawnTable","base","values","last","random","nextInt","isVariant","tile","spawnForBlock","mapOffset","sizeMask","spawns","thing","next","pos","spawn","prev2Offset","prevOffset","nextOffset","next2Offset","next3Offset","console","log","determineBaseTile","coords","heightCoords","heightFn","nx","ny","nz","nw","n3","noise4D","n4","createBase","seed","WorldMap","directions","climbUp","probe","currentHigh","currentX","currentY","improved","points","createSprings","probes","probeCount","randomProbes","walkingStart","firstWalker","filtered","uniqueProbes","unique","other","removeDuplicates","amount","arguments","undefined","multis","xOff","yOff","_objectSpread","concat","jitter","flow","currentLow","Infinity","currentTile","currentDirection","read","_map$heightCoords","dir","drawRivers","springs","flowingStart","firstFlower","min","_this","this","_classCallCheck","Prando","noise","SimplexNoise","fineMask","factor","Uint8Array","Date","getTime","start","now","afterBase","end","thingStats","reduce","a","b","cos","sin","v","n0","n1","ctx","imageData","createImageData","tileOffset","dataOffset","z","w","__webpack_exports__","_WorldMap__WEBPACK_IMPORTED_MODULE_2__","onload","loading","document","querySelector","parentNode","removeChild","canvasElement","createElement","height","getElementById","appendChild","getContext","generate","render","putImageData","addEventListener","ev","clientX","clientY","PIXI","pixi_tilemap","CanvasTileRenderer","renderer","tileAnim","dontUseTransform","cr","CanvasRenderer","registerPlugin","extendStatics","__extends","setPrototypeOf","__proto__","__","constructor","CompositeRectTileLayer","_super","zIndex","bitmaps","texPerChild","modificationMarker","shadowColor","Float32Array","_globalMat","initialize","updateTransform","displayObjectUpdateTransform","Constant","boundCountPerBuffer","maxTextures","setBitmaps","len1","children","len2","ceil","textures","layer","RectTileLayer","compositeParent","offsetX","boundSize","offsetY","addChild","clear","addRect","textureIndex","u","tileWidth","tileHeight","childIndex","textureId","addFrame","texture_","animX","animY","texture","ind","Texture","from","tex","child","baseTexture","frame","renderCanvas","visible","worldAlpha","renderable","plugins","tilemap","wt","worldTransform","context","setTransform","tx","resolution","ty","layers","renderCanvasCore","plugin","shader","getShader","batch","setObjectRenderer","uniforms","projTransMatrix","globalUniforms","projectionMatrix","copyTo","append","animationFrame","renderWebGLCore","isModified","anim","clearModify","Container","bufferSize","use32bitIndex","SCALE_MODE","SCALE_MODES","LINEAR","DO_CLEAR","GraphicsLayer","transform","Matrix","IDENTITY","graphics","globalAlpha","Graphics","MultiTextureResource","options","_clearBuffer","baseTex","boundSprites","dirties","bounds","spr","Sprite","position","setTexture","update","dirtyId","upload","glTexture","gl","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","texImage2D","target","format","type","doClear","res","resource","valid","source","texSubImage2D","resources","Resource","pointsBuf","hasAnim","vbId","vb","vbBuffer","vbArray","vbInts","found","textureList","pb","fillStyle","x1","y1","x2","y2","h","drawImage","fillRect","destroyVb","destroy","rectsCount","bindTextures","createVb","id","checkIndexBuffer","vertexBuf","getBuffer","vertices","vertPerQuad","vs","stride","byteLength","bk","ArrayBuffer","Uint32Array","arr","sz","shiftU","shiftV","geometry","draw","DRAW_MODES","TRIANGLES","rectShaderFrag","rectShaderVert","TilemapShader","shaderVert","shaderFrag","Program","uSamplers","uSamplerSize","shaderGenerator","fillSamplers","Shader","RectTileShader","generateFragmentSrc","RectTileGeom","vertSize","lastTimeAccess","buf","Buffer","addAttribute","Geometry","TileRenderer","sn","indexBuffer","ibLen","texLoc","texResources","rectShader","initBounds","BaseTexture","scaleMode","wrapMode","WRAP_MODES","CLAMP","bindTexturesWithoutRT","samplerSize","len","gltsUsed","geom","addIndex","totalIndices","utils","createIndicesForQuads","ObjectRenderer","Renderer","ZLayer","_lastAnimationFrame","_previousLayers","cacheIfDirty","modified","canvasBuffer","tempRender","_tempRender","view","rootContext","_layerWidth","_layerHeight","_hackRenderer","clearRect","layerTransform","sampleValues","fragmentSrc","replace","generateSampleSrc","src"],"mappings":"qBACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAIA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,iBAAAA,OAAA,qBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAMA,OAFA1C,EAAAR,KAAA,QAEAU,yFCpJe,SAAS0C,EAAMC,EAAKC,EAAGC,EAAGC,GACzC,IAGQC,EAFIC,EAAuBL,EAAvBK,KAAMC,EAAiBN,EAAjBM,MAAOC,EAAUP,EAAVO,OAKrB,OAAOJ,GAEH,KAAK,EACL,KAAK,EACDI,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EACPC,EAAkBH,EAAtCF,EAAMF,EAAIG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/FL,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnC,MACJ,KAAK,EACDD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EACPC,EAAkBH,EAAtCF,EAAMF,EAAIG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACpGL,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnC,MACJ,KAAK,EACDD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACPC,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EAC3BD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EACPC,EAAkBH,EAAtCF,EAAMF,EAAIG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACpGL,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnC,MACJ,KAAK,EACDD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EAC3BD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAAtCF,EAAMF,EAAIG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACpGL,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnC,MACJ,KAAK,EACDD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EAC3BD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAAtCF,EAAMF,EAAIG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACpGL,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnC,MACJ,KAAK,EACDD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EAC3BD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAAtCF,EAAMF,EAAIG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACpGL,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnC,MACJ,KAAK,EACDD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EAC3BD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAAtCF,EAAMF,EAAIG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACpGL,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnC,MACJ,KAAK,EACDD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EAC3BD,EAAOL,EAAIG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA1CF,EAAMF,EAAIG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAAtCF,EAAMF,EAAIG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAA3CF,EAAMF,EAAIG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACpGL,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,EAAOL,EAAIG,EAAQJ,EAAI,GAAKO,EAC5BD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3EH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EACHC,EAAkBH,EAAjDF,GAAQF,EAAI,GAAKG,EAAOJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC/EH,EAAkBH,EAA7CF,GAAQF,EAAI,GAAKG,EAAOJ,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IACtEH,EAAkBH,EAAlDF,GAAQF,EAAI,GAAKG,EAAQJ,EAAI,MAAqCS,IAAWJ,EAAMF,GAAOO,EAAYX,EAAKY,IAC3GL,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnCD,GAASL,EAAI,GAAKG,EAAOJ,EAAI,GAAKO,EAClCD,GAASL,EAAI,GAAKG,EAAOJ,GAAKO,EAC9BD,GAASL,EAAI,GAAKG,EAAQJ,EAAI,GAAKO,EACnC,MAEJ,QACI,MAAM,IAAIK,MAAM,oBAAsBV,giCC3YlD,IAAMW,EAAgB,EAAVC,KAAKC,GAIXC,EAAK,GACLC,EAAK,EAOX,IAAMC,EAAa,IACbC,EAAa,IACbC,EAAa,IACbC,EAAgB,GAGTZ,EAAQ,EAGRa,EAAO,EAGPC,EAAQ,EAGRC,EAAO,EAGPC,EAAO,GAGPC,EAAQ,GACRC,EAAS,GAGThB,EAAQ,GAGRiB,EAAS,GAKTrB,EAAU,EACVsB,EAAa,EACbC,EAAe,EAOfC,EAAU,GAIvB,SAASC,EAAcC,GAEnB,IAAKA,EAED,OAAO,EAIX,IADA,IAAIC,EAAM,EACD5F,EAAI,EAAGA,EAAI2F,EAAMzF,OAAQF,GAAK,EAEnC4F,GAAOD,EAAM3F,GAEjB,OAAO4F,EAGX,IAAMC,EAAY,CACd,QACA,SACA,SACA,OACA,QACA,QACA,QACA,SACA,SACA,OACA,QACA,QACA,OACA,QACA,QACA,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,UACA,WAGEC,GAAQC,EAAAC,EAAA,GACT7B,EAAS,CAACA,EAnFO,EACA,IAiFR4B,EAAAC,EAEThB,EAAS,CAACA,EAjFM,EACA,IA8EPe,EAAAC,EAGTf,EAAS,CAACA,EA/EO,EACA,IA2ERc,EAAAC,EAITd,EAAS,CAACA,EA7EM,GACA,KAwEPa,EAAAC,EAKTb,EAAS,CAACA,EA3EM,GACA,KAqEPY,EAAAC,EAMTZ,EAAS,CAACA,EAxEO,KAkERW,EAAAC,EAOTX,EAAS,CAACA,EAxEO,KAiERU,EAAAC,EAQT3B,EAAS,CAACA,EAvEO,GACA,KA8DR2B,GAgBD9B,EAAqB,WAE9B,IAAMyB,EAAQ,IAAIM,MAAMJ,EAAU3F,QAElC,IAAK,IAAIgG,KAASJ,EAEd,GAAIA,EAASvF,eAAe2F,GAC5B,CACI,IAAMC,GAAYD,EAClBP,EAAMQ,GAAYA,EAGlB,IADA,IAAMC,EAAeN,EAASI,GACrBlG,EAAI,EAAGA,EAAIoG,EAAalG,OAAQF,IACzC,CAEI2F,EADaS,EAAapG,IACZmG,GAO1B,OAAOR,EAtBuB,GAiDlC,IAAMU,EAtBN,SAA6BC,GAEzB,IAAK,IAAIJ,KAASI,EAEd,GAAIA,EAAM/F,eAAe2F,GACzB,CACI,IAAMP,EAAQW,EAAMJ,GAEpB,GAAIP,EAGA,IADA,IAAMC,EAAMF,EAAcC,GACjB3F,EAAI,EAAGA,EAAI2F,EAAMzF,OAAQF,GAAK,EAEnC2F,EAAM3F,IAAM4F,EAM5B,OAAOU,EAGQC,EAAmBR,EAAAS,EAAA,GACjCrC,GAAS,GADwB4B,EAAAS,EAEjCxB,EAAS,CAAC,EAAG,IAAKS,EAAS,EAjHP,GAiHqB,IAFRM,EAAAS,EAGjCvB,EAAS,CAAC,EAAG,IAAMM,EAAY,EAAGC,EAAc,EAzH3B,EAyH0C,EAvHxC,EAuHyD,EAAGC,EAAS,EAlHxE,GAkHsF,IAHzEM,EAAAS,EAIjCtB,EAAS,CAAC,EAAG,IAAMK,EAAY,EAAGC,EAAc,EA1H3B,EA0H0C,EAxHxC,EAwHyD,EAAGC,EAAS,EAnHxE,GAmHsF,IAJzEM,EAAAS,EAKjCrB,EAAS,CAAC,EAAG,EAAGM,EAAS,EApHL,GAoHmB,IALNM,EAAAS,EAMjCpB,EAAS,CAAC,EAAG,IAAKG,EAAY,EAAGC,EAAc,EA5H1B,EA4HyC,EA3HvC,EA2HwD,EA1HxD,EA0HyE,EAzHhF,EAyH0F,EAxHxF,EAwHoG,EAvHpG,EAuHgH,EAAGC,EAAS,EArH1H,GAqHwI,IAN3HM,EAAAS,EAOjCnB,EAAS,CAAC,EAAG,GAAIE,EAAY,EAAGC,EAAc,EA7HzB,EA6HwC,EA5HtC,EA4HuD,EA3HvD,EA2HwE,EA1H/E,EA0HyF,EAzHvF,EAyHmG,EAxHnG,EAwH+G,EAAGC,EAAS,EAtHzH,GAsHuI,IAP1HM,EAAAS,EAQjCnC,GAAS,GARwBmC,IAc/B,SAASpC,EAAYX,EAAKgD,GAE7B,IAGI1F,EAHE2F,EAASZ,EAASW,GAIxB,GAAKC,EAKL,CACI,IAAMC,EAAOD,EAAOxG,OAAS,EAIzBa,EAFS,IAAT4F,EAESD,EAAO,GAMPA,EAFHjD,EAAImD,OAAOC,QAAQ,EAAGF,SAZhC5F,EAAS0F,EAoBb,OAAO1F,EAGJ,SAAS+F,EAAUC,EAAMN,GAE5B,OAAOvC,EAAkB6C,KAAUN,EAkBvC,SAASO,EAAcvD,EAAKwD,EAAWd,GACvC,IACYnC,EAAqBP,EAArBO,OAAQkD,EAAazD,EAAbyD,SAEhB,GAA0B,IAAtBlD,EAAOiD,GAAX,CAMA,IAAME,EAASd,EAAWF,GAC1B,GAAIgB,EACJ,CACI,IAAMC,EA3Bd,SAAe3D,EAAK0D,GAEhB,IAAI3E,EAAQiB,EAAImD,OAAOS,OACnBC,EAAM,EACV,GAEI9E,GAAS2E,EAAOG,GAChBA,GAAO,QACF9E,EAAQ,GAAK8E,EAAMH,EAAOjH,QAEnC,OAAOiH,EAAOG,EAAM,GAiBFC,CAAM9D,EAAK0D,GACzB,GAAIC,EAIA,GAAIA,IAAU7B,GAAc6B,IAAU5B,EACtC,CAEI,IACMgC,EAAeP,EAAY,EAAKC,EAChCO,EAAcR,EAAY,EAAKC,EAC/BQ,EAAcT,EAAY,EAAKC,EAC/BS,EAAeV,EAAY,EAAKC,EAChCU,EAAeX,EAAY,EAAKC,EAGlClD,EARiBiD,EAAY,EAAKC,KAQVjD,GACxBD,EAAOwD,KAAiBvD,GACxBD,EAAOyD,KAAgBxD,IAIvBD,EAAOiD,GAAaG,EACpBpD,EAAO0D,GAAczD,EACrBD,EAAO2D,GAAe1D,EACtBD,EAAO4D,GAAe3D,QAKzB,GAAImD,IAAU3B,EACnB,CACI,IACMiC,EAAcT,EAAY,EAAKC,EAKjClD,EANgBiD,EAAY,EAAKC,KAMVjD,IAIvBD,EAAOiD,GAAaG,EACpBpD,EAAO0D,GAAczD,QAMzBD,EAAOiD,GAAaG,QAxD5BS,QAAQC,IAAI,oBAAqB9D,EAAOiD,IA+DhD,SAASc,EAAkBtE,EAAKC,EAAGC,GAE/B,IAAMqE,EAASvE,EAAIwE,aAAavE,EAAGC,GAC7BX,EAAIS,EAAIyE,SAASxE,EAAGC,EAAGqE,GAE7B,GAAIhF,EAAI4B,EAEJ,OAAOT,EAEN,GAAInB,EAAI6B,EAET,OAAOG,EAEN,GAAIhC,EAAI+B,EACb,KACWoD,EAAkBH,EAAlBG,GAAIC,EAAcJ,EAAdI,GAAIC,EAAUL,EAAVK,GAAIC,EAAMN,EAANM,GAEbC,EAAKvF,EAAI8B,EAAarB,EAAI+E,QAAQL,EAAKxD,EAAI2D,EAAK3D,EAAIyD,EAAKzD,EAAI0D,EAAK1D,GAAM,EACxE8D,EAAKhF,EAAI+E,QAAQL,EAAKzD,EAAI4D,EAAK5D,EAAI0D,EAAK1D,EAAI2D,EAAK3D,GACvD,OAAI6D,EAAK,EAEDE,EAAK,EAEErD,EAIAC,EAMPoD,EAAK,EAEExD,EAIAC,EAMf,OAAOC,EAKf,SAASuD,EAAW5E,EAAM6E,GAOtB,IALA,IAAMlF,EAAM,IAAImF,EAAS9E,EAAM6E,GAEvB5E,EAAUN,EAAVM,MAEJkD,EAAY,EACPtD,EAAI,EAAGA,EAAIG,EAAMH,IAEtB,IAAK,IAAID,EAAI,EAAGA,EAAII,EAAMJ,IAC1B,CACI,IAAMyC,EAAW4B,EAAkBtE,EAAKC,EAAGC,GAC3CI,EAAMkD,GAAa7C,EAAYX,EAAK0C,GAEpCa,EAAcvD,EAAKwD,EAAWd,GAE9Bc,IAGR,OAAOxD,EAmCX,IAAMoF,EAAa,CACf,GAAI,GACH,EAAG,EACJ,EAAG,EACH,EAAG,GAIP,SAASC,EAAQrF,EAAKsF,GASlB,IAPA,IAAIC,EAAcD,EAAMvG,MACpByG,EAAWF,EAAMrF,EACjBwF,EAAWH,EAAMpF,EAEbG,EAASL,EAATK,KAEJqF,GAAW,EACNnJ,EAAI,EAAGA,EAAI6I,EAAW3I,OAAQF,GAAK,EAC5C,CACI,IAAM0D,EAAIqF,EAAMrF,EAAImF,EAAW7I,GACzB2D,EAAIoF,EAAMpF,EAAIkF,EAAW7I,EAAI,GAEnC,GAAI0D,EAAI,GAAKC,EAAI,GAAKD,EAAII,GAAQH,EAAIG,EACtC,CACI,IAAMtB,EAAQiB,EAAIyE,SAASxE,EAAGC,GAC1BnB,EAAQwG,IAERA,EAAcxG,EACdyG,EAAWvF,EACXwF,EAAWvF,EACXwF,GAAW,IAKvB,QAAKA,GAMM,CACHzF,EAAGuF,EACHtF,EAAGuF,EACH1G,MAAOwG,EACPI,OAAQ,IAmEpB,SAASC,EAAc5F,GAEnB,IAAM6F,EAlJV,SAAsB7F,GAElB,IAAM6F,EAAS,GAEPxF,EAASL,EAATK,KAEFyF,EAAazF,EAAOA,EAAO,IAEjC+D,QAAQC,IAAI,gBAAiByB,GAE7B,IAAK,IAAIvJ,EAAI,EAAGA,EAAIuJ,EAAYvJ,IAChC,CACI,IAAM0D,EAAKD,EAAImD,OAAOS,OAASvD,EAAQ,EACjCH,EAAKF,EAAImD,OAAOS,OAASvD,EAAQ,EAEjCtB,EAAQiB,EAAIyE,SAASxE,EAAGC,GAE1BnB,EAAQoC,GAER0E,EAAOlJ,KAAK,CACRsD,IACAC,IACAnB,QACA4G,OAAQ,GACRrC,KAAM,IAIlB,OAAOuC,EAsHQE,CAAa/F,GAE5BoE,QAAQC,IAAIwB,EAAOpJ,OAAQ,iBAH/B,IAKY4D,EAASL,EAATK,KAEF5D,EAASoJ,EAAOpJ,OAClBuJ,EAAe,EAAGzJ,EAAI,EAC1B,IAAKA,EAAI,EAAGA,EAAI8D,EAAO,GAAK2F,EAAevJ,EAAQF,IAG/C,IAAK,IAAIkB,EAAIuI,EAAcvI,EAAIhB,EAAQgB,IACvC,CACI,IACMiI,EAAWL,EAAQrF,EADX6F,EAAOpI,IAErB,GAAIiI,EAEAG,EAAOpI,GAAKiI,MAGhB,CAEI,IAAMO,EAAcJ,EAAOG,GAC3BH,EAAOG,GAAgBH,EAAOpI,GAC9BoI,EAAOpI,GAAKwI,EAEZD,KAQZ,IAAME,EAjGV,SAA0BL,GAMtB,IAJA,IAAMpJ,EAASoJ,EAAOpJ,OAEhB0J,EAAe,GAEZ5J,EAAI,EAAGA,EAAIE,EAAQF,IAC5B,CAGI,IAFA,IAAM+I,EAAQO,EAAOtJ,GACjB6J,GAAS,EACJ3I,EAAIhB,EAAS,EAAGgB,EAAIlB,EAAGkB,IAChC,CACI,IAAM4I,EAAQR,EAAOpI,GACrB,GAAI6H,EAAMrF,IAAMoG,EAAMpG,GAAKqF,EAAMpF,IAAMmG,EAAMnG,EAC7C,CACIkG,GAAS,EACT,OAIJA,GAEAD,EAAaxJ,KAAK2I,GAI1B,OAAOa,EAuEUG,CAAiBT,GAKlC,OAFAzB,QAAQC,IAAI,0BAA2B9H,EAAG,gBAAkB2J,EAASzJ,OAAS,YAtElF,SAAgBuD,EAAKkG,GAKjB,IAJJ,IAD+BK,EAC/BC,UAAA/J,OAAA,QAAAgK,IAAAD,UAAA,GAAAA,UAAA,GADwC,EAI9BE,EAAS,GACNnK,EAAI,EAAGA,EAAI2J,EAASzJ,OAAQF,IACrC,CACI,IAAM+I,EAAQY,EAAS3J,GACjBoK,EAAO3G,EAAImD,OAAOC,SAASmD,EAAQA,GACnCK,EAAO5G,EAAImD,OAAOC,SAASmD,EAAQA,GACzCjB,EAAMrF,EAAIqF,EAAMrF,EAAI0G,EACpBrB,EAAMpF,EAAIoF,EAAMpF,EAAI0G,EAEV5G,EAAIyE,SAASa,EAAMrF,EAAGqF,EAAMpF,GAE9BoB,GAAiBtB,EAAImD,OAAOS,OAAS,IAEzC8C,EAAO/J,KAAPkK,EAAA,GAEWvB,EAFX,CAGQrF,EAAIqF,EAAMrF,EAAIsG,EAASK,EAAQ,EAC/B1G,EAAIoF,EAAMpF,EAAIqG,EAASI,EAAQ,KAM/C,OAAOT,EAASY,OAAOJ,GA6ChBK,CAAO/G,EAAKkG,GAIvB,SAASc,EAAKhH,EAAKsF,GAYf,IAVA,IAAI2B,EAAaC,IACb1B,EAAWF,EAAMrF,EACjBwF,EAAWH,EAAMpF,EACjBiH,GAAe,EACfC,GAAoB,EAEpB1B,GAAW,EAEPrF,EAASL,EAATK,KAEC9D,EAAI,EAAGA,EAAI6I,EAAW3I,OAAQF,GAAK,EAC5C,CACI,IAAM0D,EAAIqF,EAAMrF,EAAImF,EAAW7I,GACzB2D,EAAIoF,EAAMpF,EAAIkF,EAAW7I,EAAI,GAEnC,GAAI0D,EAAI,GAAKC,EAAI,GAAKD,EAAII,GAAQH,EAAIG,EACtC,CACI,IAAIiD,EAAOtD,EAAIqH,KAAKpH,EAAGC,GACvB,IAAKmD,EAAUC,EAAM1C,GACrB,CACI,GAAIyC,EAAUC,EAAK5B,GACnB,KAAA4F,EAC6BtH,EAAIwE,aAAavE,EAAGC,GAAtCwE,EADX4C,EACW5C,GAAIC,EADf2C,EACe3C,GAAIC,EADnB0C,EACmB1C,GAAIC,EADvByC,EACuBzC,GAIfvB,EAHOtD,EAAI+E,QAAQL,EAAKzD,EAAI4D,EAAK5D,EAAI0D,EAAK1D,EAAI2D,EAAK3D,GAC9C,EAEEO,EAIAC,EAIf,IAAM1C,EAAQiB,EAAIyE,SAASxE,EAAGC,KAAOmD,EAAUC,EAAM/B,IAAS8B,EAAUC,EAAMgC,EAAMhC,MAAQ,KAAQ,GAChGvE,EAAQkI,IAERA,EAAalI,EACbyG,EAAWvF,EACXwF,EAAWvF,EACXiH,EAAc7D,EACd8D,EAAmB7K,EACnBmJ,GAAW,KAM3B,GAAKA,EAQL,CACI,IAAMnG,EAAIS,EAAImD,OAAOS,OACrB,GAAIrE,EAAI,IACR,CACI,IAAMgI,EAAyD,GAAjDH,EAAiB,GAAK7H,EAAI,MAAS,EAAI,GAAM,GAE3D+F,EAAMrF,GAAKmF,EAAWmC,GACtBjC,EAAMpF,GAAKkF,EAAWmC,EAAM,GAE5BjC,EAAMK,OAAOhJ,KAAK2I,EAAMrF,EAAGqF,EAAMpF,GAEjCoF,EAAMrF,GAAKmF,EAAWmC,GACtBjC,EAAMpF,GAAKkF,EAAWmC,EAAM,GAC5BjC,EAAMvG,MAAQ,EACduG,EAAMhC,KAAO7C,EAAkBT,EAAIqH,KAAK/B,EAAMrF,EAAGqF,EAAMpF,SAIvDoF,EAAMrF,EAAIuF,EACVF,EAAMpF,EAAIuF,EACVH,EAAMvG,MAAQkI,EACd3B,EAAMhC,KAAO7C,EAAkB0G,OA5BvC,CACI,IAAMI,EAAgC,EAA1BvH,EAAImD,OAAOC,QAAQ,EAAE,GACjCkC,EAAMrF,GAAKmF,EAAWmC,GACtBjC,EAAMpF,GAAKkF,EAAWmC,EAAM,GAC5BjC,EAAMhC,KAAO7C,EAAkBT,EAAIqH,KAAK/B,EAAMrF,EAAGqF,EAAMpF,KAgC/D,SAASsH,EAAWxH,GAEhB,IAAMyH,EAAU7B,EAAc5F,GAEtBK,EAASL,EAATK,KAEF5D,EAASgL,EAAQhL,OACnBiL,EAAe,EAAGnL,EAAI,EAC1B,IAAKA,EAAI,EAAGA,EAAI8D,GAAQqH,EAAejL,EAAQF,IAG3C,IAAK,IAAIkB,EAAIiK,EAAcjK,EAAIhB,EAAQgB,IACvC,CACI,IAAM6H,EAAQmC,EAAQhK,GAEfwC,EAAQqF,EAARrF,EAAGC,EAAKoF,EAALpF,EAIV,GAHAoF,EAAMK,OAAOhJ,KAAKsD,EAAEC,GAGhBmD,EADgBrD,EAAIqH,KAAK/B,EAAMrF,EAAGqF,EAAMpF,GACjBQ,GAA3B,CAGI,IAAMiH,EAAcF,EAAQC,GAC5BD,EAAQC,GAAgBD,EAAQhK,GAChCgK,EAAQhK,GAAKkK,EAEbD,SAGJV,EAAKhH,EAAKsF,GAMlBlB,QAAQC,IAAI,yBAA0B9H,EAAG,eAEzC,IAAK,IAAIA,EAAI,EAAGA,EAAIkL,EAAQhL,OAAQF,IAIhC,IAHJ,IACYoJ,EAAW8B,EAAQlL,GAAnBoJ,OAEClI,EAAI,EAAGA,EAAIkI,EAAOlJ,OAAQgB,GAAK,EACxC,CAEI,IAAM0C,EAA+B,EAAvBY,KAAK6G,IAAI,EAAO,KAAJnK,GAC1BsC,EAAMC,EAAK2F,EAAOlI,GAAIkI,EAAOlI,EAAI,GAAI0C,GAK7C,IAAK,IAAI5D,EAAI,EAAGA,EAAIkL,EAAQhL,OAAQF,IAEhC6H,QAAQC,IAAI,gBAAiBoD,EAAQlL,GAAGoJ,OAAOlJ,YAMjC0I,aAClB,SAAAA,IACA,IAAA0C,EAAAC,KADYzH,EACZmG,UAAA/J,OAAA,QAAAgK,IAAAD,UAAA,GAAAA,UAAA,GADmB,IAAKtB,EACxBsB,UAAA/J,OAAA,EAAA+J,UAAA,QAAAC,EAEI,+FAFJsB,CAAAD,KAAA3C,GACepE,KAAKsD,IAAIhE,GAAQU,KAAKsD,IAAI,GAC1B,GAAO,EAEd,MAAM,IAAIxD,MAAM,8BAAgCR,GAGpD+D,QAAQC,IAAI,WAAahE,EAAO,MAAQA,EAAO,YAAc6E,GAE7D4C,KAAK3E,OAAS,IAAI6E,IAAO9C,GACzB4C,KAAKG,MAAQ,IAAIC,IAAa,kBAAML,EAAK1E,OAAOS,SAChDkE,KAAKzH,KAAOA,EAEZyH,KAAKrE,SAAWpD,EAAO,EACvByH,KAAKK,UAAY9H,GAAQ,GAAK,EAE9ByH,KAAKM,OAAS,EAAI/H,EAClByH,KAAKxH,MAAQ,IAAI+H,WAAWhI,EAAOA,GACnCyH,KAAKvH,OAAS,IAAI8H,WAAWhI,EAAOA,0DAoMxBA,GAAmC,IAA7B6E,EAA6BsB,UAAA/J,OAAA,QAAAgK,IAAAD,UAAA,GAAAA,UAAA,IAAtB,IAAI8B,MAAOC,UAE9BC,EAAQC,MACRzI,EAAMiF,EAAW5E,EAAM6E,GACvBwD,EAAYD,MAClBjB,EAAWxH,GACX,IAAM2I,EAAMF,MAMZ,OALArE,QAAQC,IAAR,WAAAyC,OAAuB4B,EAAYF,EAAnC,OACApE,QAAQC,IAAR,aAAAyC,OAAyB6B,EAAMH,EAA/B,OAEApE,QAAQC,IAAI,CAAEuE,WAAa5I,EAAIO,OAAOsI,OAAO,SAACC,EAAEC,GAAH,OAASD,EAAEC,QAActC,IAATqC,EAAEC,GAAmB,EAAGD,EAAEC,GAAK,EAAED,GAAI,MAE3F9I,oCA5MNC,EAAGC,GAEJ,OAAO4H,KAAKxH,MAAMJ,EAAI4H,KAAKzH,KAAOJ,oCAG7BA,EAAGC,GAER,OAAO4H,KAAKvH,OAAOL,EAAI4H,KAAKzH,KAAOJ,iCAGjCA,EAAGC,EAAGoD,GAERwE,KAAKxH,MAAMJ,EAAI4H,KAAKzH,KAAOJ,GAAKqD,mCAG3BrD,EAAGC,EAAGyD,GAEXmE,KAAKvH,OAAOL,EAAI4H,KAAKzH,KAAOJ,GAAK0D,mCAiB5B1D,EAAGC,EAAGqE,GAEX,IAGIG,EACAC,EACAC,EACAC,EANEhH,EAAIoC,EAAI6H,KAAKM,OACbpJ,EAAIkB,EAAI4H,KAAKM,OAMf7D,GAEAG,EAAKH,EAAOG,GACZC,EAAKJ,EAAOI,GACZC,EAAKL,EAAOK,GACZC,EAAKN,EAAOM,KAIZH,EAAK3D,KAAKiI,IAAInL,EAAIiD,GAClB6D,EAAK5D,KAAKiI,IAAIhK,EAAI8B,GAClB8D,EAAK7D,KAAKkI,IAAIpL,EAAIiD,GAClB+D,EAAK9D,KAAKkI,IAAIjK,EAAI8B,IAGtB,IA7wBOoI,EA6wBDC,EAAKrB,KAAK/C,QAlxBb,GAkxBqBL,EAlxBrB,GAkxB8BC,EAlxB9B,GAkxBuCC,EAlxBvC,GAkxBgDC,GAC7CuE,EAAKtB,KAAK/C,QAlxBb,IAkxBqBL,EAlxBrB,IAkxB8BG,EAlxB9B,IAkxBuCF,EAlxBvC,IAkxBgDC,GACnD,QA/wBOsE,EA+wBMC,EAAK,GAAKA,EAAKA,EAAKA,EAAKA,IA7wB9B,GAAK,EAAID,EAAI,EAAI,EAAIA,GA6wBoB,GAALE,uCAWnCnJ,EAAGC,GAGZ,IAAMrC,EAAIoC,EAAI6H,KAAKM,OACbpJ,EAAIkB,EAAI4H,KAAKM,OAOnB,MAAO,CACH1D,GANO3D,KAAKiI,IAAInL,EAAIiD,GAOpB6D,GANO5D,KAAKiI,IAAIhK,EAAI8B,GAOpB8D,GANO7D,KAAKkI,IAAIpL,EAAIiD,GAOpB+D,GANO9D,KAAKkI,IAAIjK,EAAI8B,mCAUrBuI,GAUH,IATJ,IACYhJ,EAASyH,KAATzH,KAEFiJ,EAAYD,EAAIE,gBAAgBlJ,EAAMA,GAEtCpE,EAAOqN,EAAUrN,KAEnBuN,EAAa,EACbC,EAAa,EACRvJ,EAAI,EAAGA,EAAIG,EAAMH,IAEtB,IAAK,IAAID,EAAI,EAAGA,EAAII,EAAMJ,IAC1B,CAGI,OAFa6H,KAAKxH,MAAMkJ,MAIpB,KAAK5I,EACL,KAjyBE,GAkyBF,KAjyBE,GAkyBE3E,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,IACrB,MACJ,KAAK/I,EACL,KA5zBE,EA6zBF,KA5zBE,EA6zBEzE,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,GACrBxN,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,IACrB,MACJ,KAAKlI,EACL,KAj0BC,EAk0BD,KAj0BC,EAk0BGtF,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,IACrB,MACJ,KAAKjI,EACL,KAt0BE,EAu0BF,KAt0BE,EAu0BEvF,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,IACrB,MACJ,KAAK9H,EACL,KAAKC,EACL,KAr0BE,GAs0BE3F,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,GACrBxN,EAAKwN,KAAgB,IACrB,MACJ,KA10BE,GA20BExN,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,GACrBxN,EAAKwN,KAAgB,GACrBxN,EAAKwN,KAAgB,IACrB,MACJ,KAAKhI,EACL,KAz1BC,GA01BD,KAz1BC,GA01BGxF,EAAKwN,KAAgB,GACrBxN,EAAKwN,KAAgB,GACrBxN,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,IACrB,MACJ,KAAK/H,EACL,KA91BC,GA+1BD,KA91BC,GA+1BGzF,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,IACrB,MACJ,KAAK5H,EACL,KA51BG,GA61BH,KA51BG,GA61BC5F,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,EACrBxN,EAAKwN,KAAgB,IACrBxN,EAAKwN,KAAgB,KAMrC,OAAOH,kCAIHrJ,EAAEC,EAAEwJ,EAAEC,GAEV,OAAO7B,KAAKG,MAAMlD,QAAQ9E,EAAEC,EAAEwJ,EAAEC,yEC75BxC/L,EAAAgB,EAAAgL,GAAAhM,EAAA,GAAAA,EAAA,OAAAiM,EAAAjM,EAAA,GAsCAgC,OAAOkK,OAAS,WAEZ,IAAMC,EAAUC,SAASC,cAAc,eACvCF,EAAQG,WAAWC,YAAYJ,GAE/B,IAEMK,EAAgBJ,SAASK,cAAc,UAC7CD,EAAcjK,MAHD,KAIbiK,EAAcE,OAJD,KAMbN,SAASO,eAAe,QAAQC,YAAYJ,GAE5C,IAAMf,EAAMe,EAAcK,WAAW,MAI/BnB,EADMnE,IAASuF,SAXR,KAWuB,eACdC,OAAOtB,GAC7BA,EAAIuB,aAAatB,EAAW,EAAG,GAE/Bc,EAAcS,iBAAiB,QAAS,SAAAC,GAEpC1G,QAAQC,IAAR,YAAAyC,OAAwBgE,EAAGC,QAA3B,MAAAjE,OAAuCgE,EAAGE,YAE3C,GAEH5G,QAAQC,IAAI,8BChEhB,SAAA4G,IACA,SAAWC,GACP,IAAIC,EACA,SAA4BC,GACxBtD,KAAKuD,SAAW,CAAC,EAAG,GACpBvD,KAAKwD,kBAAmB,EACxBxD,KAAKsD,SAAWA,EAChBtD,KAAKuD,SAAW,CAAC,EAAG,IAI5BH,EAAaC,mBAAqBA,EAClC,IAAII,EAAKN,EAAKO,eACVD,GACAA,EAAGE,eAAe,UAAWN,GAbrC,CAeGD,IAAiBA,EAAe,KACnC,IACQQ,EA6zBJR,EA9zBAS,EAAa7D,MAAQA,KAAK6D,YACtBD,EAAgB9O,OAAOgP,gBACtB,CAAEC,UAAW,cAAgBrJ,OAAS,SAAUnE,EAAG0K,GAAK1K,EAAEwN,UAAY9C,IACvE,SAAU1K,EAAG0K,GAAK,IAAK,IAAIrJ,KAAKqJ,EAAOA,EAAEjM,eAAe4C,KAAIrB,EAAEqB,GAAKqJ,EAAErJ,KAClE,SAAUrB,EAAG0K,GAEhB,SAAS+C,IAAOhE,KAAKiE,YAAc1N,EADnCqN,EAAcrN,EAAG0K,GAEjB1K,EAAExB,UAAkB,OAANkM,EAAanM,OAAOwC,OAAO2J,IAAM+C,EAAGjP,UAAYkM,EAAElM,UAAW,IAAIiP,MAIvF,SAAWZ,GACP,IAAIc,EAA0B,SAAUC,GAEpC,SAASD,EAAuBE,EAAQC,EAASC,GAC7C,IAAIvE,EAAQoE,EAAOlP,KAAK+K,OAASA,KAKjC,OAJAD,EAAMwE,mBAAqB,EAC3BxE,EAAMyE,YAAc,IAAIC,aAAa,CAAC,EAAK,EAAK,EAAK,KACrD1E,EAAM2E,WAAa,KACnB3E,EAAM4E,WAAWrP,MAAMyK,EAAOrB,WACvBqB,EA8JX,OArKA8D,EAAUK,EAAwBC,GASlCD,EAAuBnP,UAAU6P,gBAAkB,WAC/C5E,KAAK6E,gCAETX,EAAuBnP,UAAU4P,WAAa,SAAUP,EAAQC,EAASC,IACjD,IAAhBA,IACAA,EAAc,GAElBtE,KAAK4B,EAAI5B,KAAKoE,OAASA,EACvBpE,KAAKsE,YAAcA,GAAelB,EAAa0B,SAASC,oBAAsB3B,EAAa0B,SAASE,YAChGX,GACArE,KAAKiF,WAAWZ,IAGxBH,EAAuBnP,UAAUkQ,WAAa,SAAUZ,GACpD,IAGI5P,EAHA6P,EAActE,KAAKsE,YACnBY,EAAOlF,KAAKmF,SAASxQ,OACrByQ,EAAOnM,KAAKoM,KAAKhB,EAAQ1P,OAAS2P,GAEtC,IAAK7P,EAAI,EAAGA,EAAIyQ,EAAMzQ,IAClBuL,KAAKmF,SAAS1Q,GAAG6Q,SAAWjB,EAAQrM,MAAMvD,EAAI6P,GAAc7P,EAAI,GAAK6P,GAEzE,IAAK7P,EAAIyQ,EAAMzQ,EAAI2Q,EAAM3Q,IAAK,CAC1B,IAAI8Q,EAAQ,IAAInC,EAAaoC,cAAcxF,KAAKoE,OAAQC,EAAQrM,MAAMvD,EAAI6P,GAAc7P,EAAI,GAAK6P,IACjGiB,EAAME,iBAAkB,EACxBF,EAAMG,QAAUtC,EAAa0B,SAASa,UACtCJ,EAAMK,QAAUxC,EAAa0B,SAASa,UACtC3F,KAAK6F,SAASN,KAGtBrB,EAAuBnP,UAAU+Q,MAAQ,WACrC,IAAK,IAAIrR,EAAI,EAAGA,EAAIuL,KAAKmF,SAASxQ,OAAQF,IACtCuL,KAAKmF,SAAS1Q,GAAGqR,QAErB9F,KAAKuE,mBAAqB,GAE9BL,EAAuBnP,UAAUgR,QAAU,SAAUC,EAAcC,EAAG7E,EAAGjJ,EAAGC,EAAG8N,EAAWC,GACtF,IAAIC,EAAaJ,EAAehG,KAAKsE,aAAe,EAChD+B,EAAYL,EAAehG,KAAKsE,YAChCtE,KAAKmF,SAASiB,IAAepG,KAAKmF,SAASiB,GAAYd,UACvDtF,KAAKmF,SAASiB,GAAYL,QAAQM,EAAWJ,EAAG7E,EAAGjJ,EAAGC,EAAG8N,EAAWC,IAG5EjC,EAAuBnP,UAAUuR,SAAW,SAAUC,EAAUpO,EAAGC,EAAGoO,EAAOC,GACzE,IAAIC,EACAnB,EAAQ,KACRoB,EAAM,EACNxB,EAAWnF,KAAKmF,SACpB,GAAwB,iBAAboB,EAAuB,CAG9B,GADAhB,EAAQJ,EADSoB,EAAWvG,KAAKsE,aAAe,GAU5CqC,EAAMJ,EAAWvG,KAAKsE,gBARd,CAER,KADAiB,EAAQJ,EAAS,IAEb,OAAO,EAEXwB,EAAM,EAKVD,EAAUnB,EAAMD,SAASqB,OAExB,CAEGD,EADoB,iBAAbH,EACGpD,EAAKyD,QAAQC,KAAKN,GAGlBA,EAEd,IAAK,IAAI9R,EAAI,EAAGA,EAAI0Q,EAASxQ,OAAQF,IAAK,CAGtC,IAFA,IACIqS,GADAC,EAAQ5B,EAAS1Q,IACL6Q,SACP3P,EAAI,EAAGA,EAAImR,EAAInS,OAAQgB,IAC5B,GAAImR,EAAInR,GAAGqR,cAAgBN,EAAQM,YAAa,CAC5CzB,EAAQwB,EACRJ,EAAMhR,EACN,MAGR,GAAI4P,EACA,MAGR,IAAKA,EAAO,CACR,IAAS9Q,EAAI,EAAGA,EAAI0Q,EAASxQ,OAAQF,IAAK,CACtC,IAAIsS,EACJ,IADIA,EAAQ5B,EAAS1Q,IACX6Q,SAAS3Q,OAASqL,KAAKsE,YAAa,CAC1CiB,EAAQwB,EACRJ,EAAMI,EAAMzB,SAAS3Q,OACrBoS,EAAMzB,SAASzQ,KAAK6R,GACpB,OAGHnB,KACDA,EAAQ,IAAInC,EAAaoC,cAAcxF,KAAKoE,OAAQsC,IAC9CjB,iBAAkB,EACxBF,EAAMG,QAAUtC,EAAa0B,SAASa,UACtCJ,EAAMK,QAAUxC,EAAa0B,SAASa,UACtCR,EAAStQ,KAAK0Q,GACdoB,EAAM,IAKlB,OADApB,EAAMQ,QAAQY,EAAKD,EAAQO,MAAM9O,EAAGuO,EAAQO,MAAM7O,EAAGD,EAAGC,EAAGsO,EAAQO,MAAM5O,MAAOqO,EAAQO,MAAMzE,OAAQgE,EAAOC,IACtG,GAEXvC,EAAuBnP,UAAUmS,aAAe,SAAU5D,GACtD,GAAKtD,KAAKmH,WAAWnH,KAAKoH,YAAc,IAAMpH,KAAKqH,WAAnD,CAIA,IADa/D,EAASgE,QAAQC,QAClB/D,iBAAkB,CAC1B,IAAIgE,EAAKxH,KAAKyH,eACdnE,EAASoE,QAAQC,aAAaH,EAAGxG,EAAGwG,EAAGvG,EAAGuG,EAAGlR,EAAGkR,EAAGjR,EAAGiR,EAAGI,GAAKtE,EAASuE,WAAYL,EAAGM,GAAKxE,EAASuE,YAGxG,IADA,IAAIE,EAAS/H,KAAKmF,SACT1Q,EAAI,EAAGA,EAAIsT,EAAOpT,OAAQF,IAC/BsT,EAAOtT,GAAGuT,iBAAiB1E,KAGnCY,EAAuBnP,UAAU8N,OAAS,SAAUS,GAChD,GAAKtD,KAAKmH,WAAWnH,KAAKoH,YAAc,IAAMpH,KAAKqH,WAAnD,CAGA,IAAIY,EAAS3E,EAASgE,QAAT,QACTY,EAASD,EAAOE,YACpB7E,EAAS8E,MAAMC,kBAAkBJ,GACjCjI,KAAK0E,WAAawD,EAAOI,SAASC,gBAClCjF,EAASkF,eAAeF,SAASG,iBAAiBC,OAAO1I,KAAK0E,YAAYiE,OAAO3I,KAAKyH,gBACtFS,EAAOI,SAAS9D,YAAcxE,KAAKwE,YACnC0D,EAAOI,SAASM,eAAiBX,EAAO1E,SACxCD,EAAS4E,OAAO1Q,KAAK0Q,GAAQ,GAE7B,IADA,IAAIH,EAAS/H,KAAKmF,SACT1Q,EAAI,EAAGA,EAAIsT,EAAOpT,OAAQF,IAC/BsT,EAAOtT,GAAGoU,gBAAgBvF,EAAU2E,KAG5C/D,EAAuBnP,UAAU+T,WAAa,SAAUC,GACpD,IAAIhB,EAAS/H,KAAKmF,SAClB,GAAInF,KAAKuE,qBAAuBwD,EAAOpT,OACnC,OAAO,EAEX,IAAK,IAAIF,EAAI,EAAGA,EAAIsT,EAAOpT,OAAQF,IAC/B,GAAIsT,EAAOtT,GAAGqU,WAAWC,GACrB,OAAO,EAGf,OAAO,GAEX7E,EAAuBnP,UAAUiU,YAAc,WAC3C,IAAIjB,EAAS/H,KAAKmF,SAClBnF,KAAKuE,mBAAqBwD,EAAOpT,OACjC,IAAK,IAAIF,EAAI,EAAGA,EAAIsT,EAAOpT,OAAQF,IAC/BsT,EAAOtT,GAAGuU,eAGX9E,EAtKmB,CAuK5Bf,EAAK8F,WACP7F,EAAac,uBAAyBA,EAzK1C,CA0KGd,IAAiBA,EAAe,KAEnC,SAAWA,GACPA,EAAa0B,SAAW,CACpBE,YAAa,EACbkE,WAAY,KACZvD,UAAW,KACXZ,oBAAqB,EACrBoE,eAAe,EACfC,WAAYjG,EAAKkG,YAAYC,OAC7BC,UAAU,GARlB,CAUGnG,IAAiBA,EAAe,KA6BhCA,IAAiBA,EAAe,IA1BV,SAAUe,GAE3B,SAASqF,EAAcpF,GACnB,IAAIrE,EAAQoE,EAAOlP,KAAK+K,OAASA,KAEjC,OADAD,EAAMqE,OAASA,EACRrE,EAJX8D,EAAU2F,EAAerF,GAMzBqF,EAAczU,UAAUmS,aAAe,SAAU5D,GAC7C,IAAIkE,EAAK,KACLlE,EAASgE,QAAQC,QAAQ/D,mBACzBgE,EAAKxH,KAAKyJ,UAAUhC,eACpBzH,KAAKyJ,UAAUhC,eAAiBtE,EAAKuG,OAAOC,UAEhDrG,EAASgE,QAAQsC,SAAS/G,OAAO7C,MAC7BsD,EAASgE,QAAQC,QAAQ/D,mBACzBxD,KAAKyJ,UAAUhC,eAAiBD,GAEpClE,EAASoE,QAAQmC,YAAc,GAEnCL,EAAczU,UAAU+T,WAAa,SAAUC,GAC3C,OAAO,GAEXS,EAAczU,UAAUiU,YAAc,aAtBrB,CAyBnB7F,EAAK2G,UAGX,SAAW1G,GACP,IAAI2G,EAAwB,SAAU5F,GAElC,SAAS4F,EAAqBC,GAC1B,IAAIjK,EAAQoE,EAAOlP,KAAK+K,KAAMgK,EAAQd,WAAYc,EAAQd,aAAelJ,KACzED,EAAMwJ,UAAW,EACjBxJ,EAAM4F,UAAY,EAClB5F,EAAMkK,aAAe,KACrBlK,EAAMmK,QAAU,KAChBnK,EAAMoK,aAAe,GACrBpK,EAAMqK,QAAU,GAChB,IAAIC,EAAStK,EAAMoK,aACfC,EAAUrK,EAAMqK,QACpBrK,EAAM4F,UAAYqE,EAAQrE,UAC1B,IAAK,IAAIhQ,EAAI,EAAGA,EAAIqU,EAAQjF,oBAAqBpP,IAAK,CAClD,IAAI2U,EAAM,IAAInH,EAAKoH,OACnBD,EAAIE,SAASrS,EAAI6R,EAAQrE,WAAiB,EAAJhQ,GACtC2U,EAAIE,SAASpS,EAAI4R,EAAQrE,WAAahQ,GAAK,GAC3C0U,EAAOxV,KAAKyV,GACZF,EAAQvV,KAAK,GAGjB,OADAkL,EAAMwJ,WAAaS,EAAQT,SACpBxJ,EAiDX,OArEA8D,EAAUkG,EAAsB5F,GAsBhC4F,EAAqBhV,UAAUyC,KAAO,SAAUwP,GAC5C,GAAIhH,KAAKkK,QACL,MAAM,IAAInR,MAAM,sDAEpBiH,KAAKkK,QAAUlD,EACf7C,EAAOpP,UAAUyC,KAAKvC,KAAK+K,KAAMgH,IAErC+C,EAAqBhV,UAAU0V,WAAa,SAAU9D,EAAKD,GACvD,IAAI4D,EAAMtK,KAAKmK,aAAaxD,GACxB2D,EAAI5D,QAAQM,cAAgBN,EAAQM,cAGxCsD,EAAI5D,QAAUA,EACd1G,KAAKkK,QAAQQ,SACb1K,KAAKoK,QAAQzD,GAAO3G,KAAKkK,QAAQS,UAErCZ,EAAqBhV,UAAU6V,OAAS,SAAUtH,EAAUoD,EAASmE,GACjE,IAAIC,EAAKxH,EAASwH,GACHzS,EAAN2H,KAAiB3H,MAAOmK,EAAxBxC,KAAoCwC,OAC7CsI,EAAGC,YAAYD,EAAGE,+BAAgCtE,EAAQuE,kBACtDJ,EAAUF,QAAU,IACpBE,EAAUxS,MAAQA,EAClBwS,EAAUrI,OAASA,EACnBsI,EAAGI,WAAWxE,EAAQyE,OAAQ,EAAGzE,EAAQ0E,OAAQ/S,EAAOmK,EAAQ,EAAGkE,EAAQ0E,OAAQ1E,EAAQ2E,KAAM,OAErG,IAAIC,EAAUtL,KAAKuJ,SACf+B,IAAYtL,KAAKiK,eACjBjK,KAAKiK,aAAe,IAAI1J,WAAW6C,EAAa0B,SAASa,UAAYvC,EAAa0B,SAASa,UAAY,IAG3G,IADA,IAAI0E,EAASrK,KAAKmK,aACT1V,EAAI,EAAGA,EAAI4V,EAAO1V,OAAQF,IAAK,CACpC,IAAI6V,EAAMD,EAAO5V,GACbqS,EAAMwD,EAAI5D,QAAQM,YACtB,KAAI6D,EAAUF,SAAW3K,KAAKoK,QAAQ3V,IAAtC,CAGA,IAAI8W,EAAMzE,EAAI0E,SACT1E,EAAI2E,OAAUF,GAAQA,EAAIG,SAG3BJ,IAAYxE,EAAIzO,MAAQ2H,KAAK2F,WAAamB,EAAItE,OAASxC,KAAK2F,YAC5DmF,EAAGa,cAAcjF,EAAQyE,OAAQ,EAAGb,EAAIE,SAASrS,EAAGmS,EAAIE,SAASpS,EAAG4H,KAAK2F,UAAW3F,KAAK2F,UAAWe,EAAQ0E,OAAQ1E,EAAQ2E,KAAMrL,KAAKiK,cAE3Ia,EAAGa,cAAcjF,EAAQyE,OAAQ,EAAGb,EAAIE,SAASrS,EAAGmS,EAAIE,SAASpS,EAAGsO,EAAQ0E,OAAQ1E,EAAQ2E,KAAME,EAAIG,UAE1G,OAAO,GAEJ3B,EAtEiB,CAuE1B5G,EAAKyI,UAAUC,UACjBzI,EAAa2G,qBAAuBA,EAzExC,CA0EG3G,IAAiBA,EAAe,KAEnC,SAAWA,GACP,IAAIoC,EAAiB,SAAUrB,GAE3B,SAASqB,EAAcpB,EAAQsC,GAC3B,IAAI3G,EAAQoE,EAAOlP,KAAK+K,OAASA,KAgBjC,OAfAD,EAAMqE,OAAS,EACfrE,EAAMwE,mBAAqB,EAC3BxE,EAAMyE,YAAc,IAAIC,aAAa,CAAC,EAAK,EAAK,EAAK,KACrD1E,EAAM2E,WAAa,KACnB3E,EAAM+L,UAAY,GAClB/L,EAAMgM,SAAU,EAChBhM,EAAM2F,QAAU,EAChB3F,EAAM6F,QAAU,EAChB7F,EAAM0F,iBAAkB,EACxB1F,EAAMiM,KAAO,EACbjM,EAAMkM,GAAK,KACXlM,EAAMmM,SAAW,KACjBnM,EAAMoM,QAAU,KAChBpM,EAAMqM,OAAS,KACfrM,EAAM4E,WAAWP,EAAQsC,GAClB3G,EAqRX,OAvSA8D,EAAU2B,EAAerB,GAoBzBqB,EAAczQ,UAAU4P,WAAa,SAAUP,EAAQkB,GAC9CA,EAGMA,aAAoB5K,QAAU4K,EAAS0B,cAC9C1B,EAAW,CAACA,IAHZA,EAAW,GAKftF,KAAKsF,SAAWA,EAChBtF,KAAKoE,OAASA,GAElBoB,EAAczQ,UAAU+Q,MAAQ,WAC5B9F,KAAK8L,UAAUnX,OAAS,EACxBqL,KAAKuE,mBAAqB,EAC1BvE,KAAK+L,SAAU,GAEnBvG,EAAczQ,UAAUuR,SAAW,SAAUC,EAAUpO,EAAGC,EAAGoO,EAAOC,GAChE,IAAIC,EACAV,EAAe,EACnB,GAAwB,iBAAbO,EACPP,EAAeO,EACfG,EAAU1G,KAAKsF,SAASU,OAEvB,CAEGU,EADoB,iBAAbH,EACGpD,EAAKyD,QAAQC,KAAKN,GAGlBA,EAId,IAFA,IAAI8F,GAAQ,EACRC,EAActM,KAAKsF,SACd7Q,EAAI,EAAGA,EAAI6X,EAAY3X,OAAQF,IACpC,GAAI6X,EAAY7X,GAAGuS,cAAgBN,EAAQM,YAAa,CACpDhB,EAAevR,EACf4X,GAAQ,EACR,MAGR,IAAKA,EACD,OAAO,EAIf,OADArM,KAAK+F,QAAQC,EAAcU,EAAQO,MAAM9O,EAAGuO,EAAQO,MAAM7O,EAAGD,EAAGC,EAAGsO,EAAQO,MAAM5O,MAAOqO,EAAQO,MAAMzE,OAAQgE,EAAOC,IAC9G,GAEXjB,EAAczQ,UAAUgR,QAAU,SAAUC,EAAcC,EAAG7E,EAAGjJ,EAAGC,EAAG8N,EAAWC,EAAYK,EAAOC,QAClF,IAAVD,IAAoBA,EAAQ,QAClB,IAAVC,IAAoBA,EAAQ,GAChC,IAAI8F,EAAKvM,KAAK8L,UAEd,GADA9L,KAAK+L,QAAU/L,KAAK+L,SAAWvF,EAAQ,GAAKC,EAAQ,EAChDP,IAAcC,EACdoG,EAAG1X,KAAKoR,GACRsG,EAAG1X,KAAKuM,GACRmL,EAAG1X,KAAKsD,GACRoU,EAAG1X,KAAKuD,GACRmU,EAAG1X,KAAKqR,GACRqG,EAAG1X,KAAKsR,GACRoG,EAAG1X,KAAa,EAAR2R,GACR+F,EAAG1X,KAAa,EAAR4R,GACR8F,EAAG1X,KAAKmR,OAEP,CACD,IAAIvR,OAAI,EACR,GAAIyR,EAAYC,GAAe,EAC3B,IAAK1R,EAAI,EAAGA,EAAIyR,EAAYC,EAAY1R,IACpC8X,EAAG1X,KAAKoR,EAAIxR,EAAI0R,GAChBoG,EAAG1X,KAAKuM,GACRmL,EAAG1X,KAAKsD,EAAI1D,EAAI0R,GAChBoG,EAAG1X,KAAKuD,GACRmU,EAAG1X,KAAKsR,GACRoG,EAAG1X,KAAKsR,GACRoG,EAAG1X,KAAa,EAAR2R,GACR+F,EAAG1X,KAAa,EAAR4R,GACR8F,EAAG1X,KAAKmR,QAGX,GAAIG,EAAaD,GAAc,EAChC,IAAKzR,EAAI,EAAGA,EAAI0R,EAAaD,EAAWzR,IACpC8X,EAAG1X,KAAKoR,GACRsG,EAAG1X,KAAKuM,EAAI3M,EAAIyR,GAChBqG,EAAG1X,KAAKsD,GACRoU,EAAG1X,KAAKuD,EAAI3D,EAAIyR,GAChBqG,EAAG1X,KAAKqR,GACRqG,EAAG1X,KAAKqR,GACRqG,EAAG1X,KAAa,EAAR2R,GACR+F,EAAG1X,KAAa,EAAR4R,GACR8F,EAAG1X,KAAKmR,QAIZuG,EAAG1X,KAAKoR,GACRsG,EAAG1X,KAAKuM,GACRmL,EAAG1X,KAAKsD,GACRoU,EAAG1X,KAAKuD,GACRmU,EAAG1X,KAAKqR,GACRqG,EAAG1X,KAAKsR,GACRoG,EAAG1X,KAAa,EAAR2R,GACR+F,EAAG1X,KAAa,EAAR4R,GACR8F,EAAG1X,KAAKmR,KAIpBR,EAAczQ,UAAUmS,aAAe,SAAU5D,GAE7C,IADaA,EAASgE,QAAQC,QAClB/D,iBAAkB,CAC1B,IAAIgE,EAAKxH,KAAKyH,eACdnE,EAASoE,QAAQC,aAAaH,EAAGxG,EAAGwG,EAAGvG,EAAGuG,EAAGlR,EAAGkR,EAAGjR,EAAGiR,EAAGI,GAAKtE,EAASuE,WAAYL,EAAGM,GAAKxE,EAASuE,YAExG7H,KAAKgI,iBAAiB1E,IAE1BkC,EAAczQ,UAAUiT,iBAAmB,SAAU1E,GACjD,GAA6B,IAAzBtD,KAAKsF,SAAS3Q,OAAlB,CAEA,IAAIkJ,EAASmC,KAAK8L,UAClBxI,EAASoE,QAAQ8E,UAAY,UAC7B,IAAK,IAAI/X,EAAI,EAAGgD,EAAIoG,EAAOlJ,OAAQF,EAAIgD,EAAGhD,GAAK,EAAG,CAC9C,IAAIgY,EAAK5O,EAAOpJ,GAAIiY,EAAK7O,EAAOpJ,EAAI,GAChCkY,EAAK9O,EAAOpJ,EAAI,GAAImY,EAAK/O,EAAOpJ,EAAI,GACpCoN,EAAIhE,EAAOpJ,EAAI,GACfoY,EAAIhP,EAAOpJ,EAAI,GACnBgY,GAAM5O,EAAOpJ,EAAI,GAAK6O,EAASgE,QAAQC,QAAQhE,SAAS,GACxDmJ,GAAM7O,EAAOpJ,EAAI,GAAK6O,EAASgE,QAAQC,QAAQhE,SAAS,GACxD,IAAIyC,EAAenI,EAAOpJ,EAAI,GAC1BuR,GAAgB,EAChB1C,EAASoE,QAAQoF,UAAU9M,KAAKsF,SAASU,GAAcgB,YAAY0E,OAAQe,EAAIC,EAAI7K,EAAGgL,EAAGF,EAAIC,EAAI/K,EAAGgL,IAGpGvJ,EAASoE,QAAQmC,YAAc,GAC/BvG,EAASoE,QAAQqF,SAASJ,EAAIC,EAAI/K,EAAGgL,GACrCvJ,EAASoE,QAAQmC,YAAc,MAI3CrE,EAAczQ,UAAUiY,UAAY,WAC5BhN,KAAKiM,KACLjM,KAAKiM,GAAGgB,UACRjN,KAAKiM,GAAK,OAGlBzG,EAAczQ,UAAU8N,OAAS,SAAUS,GACvC,IAAI2E,EAAS3E,EAASgE,QAAT,QACTY,EAASD,EAAOE,YACpB7E,EAAS8E,MAAMC,kBAAkBJ,GACjCjI,KAAK0E,WAAawD,EAAOI,SAASC,gBAClCjF,EAASkF,eAAeF,SAASG,iBAAiBC,OAAO1I,KAAK0E,YAAYiE,OAAO3I,KAAKyH,gBACtFS,EAAOI,SAAS9D,YAAcxE,KAAKwE,YACnC0D,EAAOI,SAASM,eAAiBX,EAAO1E,SACxCD,EAAS4E,OAAO1Q,KAAK0Q,GAAQ,GAC7BlI,KAAK6I,gBAAgBvF,EAAU2E,IAEnCzC,EAAczQ,UAAU8T,gBAAkB,SAAUvF,EAAU2E,GAC1D,IAAIpK,EAASmC,KAAK8L,UAClB,GAAsB,IAAlBjO,EAAOlJ,OAAX,CAEA,IAAIuY,EAAarP,EAAOlJ,OAAS,EAC7BuT,EAASD,EAAOE,YAChB7C,EAAWtF,KAAKsF,SACpB,GAAwB,IAApBA,EAAS3Q,OAAb,CAEAsT,EAAOkF,aAAa7J,EAAU4E,EAAQ5C,GACtC,IAAI2G,EAAKjM,KAAKiM,GACTA,IACDA,EAAKhE,EAAOmF,WACZpN,KAAKiM,GAAKA,EACVjM,KAAKgM,KAAOC,EAAGoB,GACfrN,KAAKkM,SAAW,KAChBlM,KAAKuE,mBAAqB,GAE9B0D,EAAOqF,iBAAiBJ,EAAYjB,GACpC,IAAIlH,EAAsB3B,EAAa0B,SAASC,oBAC5CwI,EAAYtB,EAAGuB,UAAU,mBACzBC,EAAWP,EAAajB,EAAGyB,YAC/B,GAAiB,IAAbD,EAAJ,CAEA,GAAIzN,KAAKuE,qBAAuBkJ,EAAU,CACtCzN,KAAKuE,mBAAqBkJ,EAC1B,IAAIE,EAAK1B,EAAG2B,OAASH,EACrB,IAAKzN,KAAKkM,UAAYlM,KAAKkM,SAAS2B,WAAaF,EAAI,CAEjD,IADA,IAAIG,EAAK7B,EAAG2B,OACLE,EAAKH,GACRG,GAAM,EAEV9N,KAAKkM,SAAW,IAAI6B,YAAYD,GAChC9N,KAAKmM,QAAU,IAAI1H,aAAazE,KAAKkM,UACrClM,KAAKoM,OAAS,IAAI4B,YAAYhO,KAAKkM,UACnCqB,EAAU7C,OAAO1K,KAAKkM,UAQ1B,IANA,IAAI+B,EAAMjO,KAAKmM,QACX+B,GAD2BlO,KAAKoM,OAC3B,GACL/F,EAAY,EACZ8H,EAASnO,KAAK0F,QACd0I,EAASpO,KAAK4F,QAETnR,EAAI,EAAGA,EAAIoJ,EAAOlJ,OAAQF,GAAK,EAAG,CAEnCuL,KAAKyF,kBACDV,EAAsB,GACtBsB,EAAaxI,EAAOpJ,EAAI,IAAM,EAC9B0Z,EAASnO,KAAK0F,SAA2B,EAAhB7H,EAAOpJ,EAAI,IACpC2Z,EAASpO,KAAK4F,SAAY/H,EAAOpJ,EAAI,IAAM,EAAK,KAGhD4R,EAAYxI,EAAOpJ,EAAI,GACvB0Z,EAAS,EACTC,EAAS,IAGjB,IAAIjW,EAAI0F,EAAOpJ,EAAI,GAAI2D,EAAIyF,EAAOpJ,EAAI,GAClCoN,EAAIhE,EAAOpJ,EAAI,GAAIoY,EAAIhP,EAAOpJ,EAAI,GAClCwR,EAAIpI,EAAOpJ,GAAK0Z,EAAQ/M,EAAIvD,EAAOpJ,EAAI,GAAK2Z,EAC5C5H,EAAQ3I,EAAOpJ,EAAI,GAAIgS,EAAQ5I,EAAOpJ,EAAI,GAC9CwZ,EAAIC,KAAQ/V,EACZ8V,EAAIC,KAAQ9V,EACZ6V,EAAIC,KAAQjI,EACZgI,EAAIC,KAAQ9M,EACZ6M,EAAIC,KAAQjI,EArBF,GAsBVgI,EAAIC,KAAQ9M,EAtBF,GAuBV6M,EAAIC,KAAQjI,EAAIpE,EAvBN,GAwBVoM,EAAIC,KAAQ9M,EAAIyL,EAxBN,GAyBVoB,EAAIC,KAAQ1H,EACZyH,EAAIC,KAAQzH,EACZwH,EAAIC,KAAQ7H,EACZ4H,EAAIC,KAAQ/V,EAAI0J,EAChBoM,EAAIC,KAAQ9V,EACZ6V,EAAIC,KAAQjI,EAAIpE,EAChBoM,EAAIC,KAAQ9M,EACZ6M,EAAIC,KAAQjI,EAhCF,GAiCVgI,EAAIC,KAAQ9M,EAjCF,GAkCV6M,EAAIC,KAAQjI,EAAIpE,EAlCN,GAmCVoM,EAAIC,KAAQ9M,EAAIyL,EAnCN,GAoCVoB,EAAIC,KAAQ1H,EACZyH,EAAIC,KAAQzH,EACZwH,EAAIC,KAAQ7H,EACZ4H,EAAIC,KAAQ/V,EAAI0J,EAChBoM,EAAIC,KAAQ9V,EAAIyU,EAChBoB,EAAIC,KAAQjI,EAAIpE,EAChBoM,EAAIC,KAAQ9M,EAAIyL,EAChBoB,EAAIC,KAAQjI,EA3CF,GA4CVgI,EAAIC,KAAQ9M,EA5CF,GA6CV6M,EAAIC,KAAQjI,EAAIpE,EA7CN,GA8CVoM,EAAIC,KAAQ9M,EAAIyL,EA9CN,GA+CVoB,EAAIC,KAAQ1H,EACZyH,EAAIC,KAAQzH,EACZwH,EAAIC,KAAQ7H,EACZ4H,EAAIC,KAAQ/V,EACZ8V,EAAIC,KAAQ9V,EAAIyU,EAChBoB,EAAIC,KAAQjI,EACZgI,EAAIC,KAAQ9M,EAAIyL,EAChBoB,EAAIC,KAAQjI,EAtDF,GAuDVgI,EAAIC,KAAQ9M,EAvDF,GAwDV6M,EAAIC,KAAQjI,EAAIpE,EAxDN,GAyDVoM,EAAIC,KAAQ9M,EAAIyL,EAzDN,GA0DVoB,EAAIC,KAAQ1H,EACZyH,EAAIC,KAAQzH,EACZwH,EAAIC,KAAQ7H,EAEhBkH,EAAU7C,OAAOuD,GAErB3K,EAAS+K,SAAS7W,KAAKyU,EAAI/D,GAC3B5E,EAAS+K,SAASC,KAAKnL,EAAKoL,WAAWC,UAAwB,EAAbtB,EAAgB,OAEtE1H,EAAczQ,UAAU+T,WAAa,SAAUC,GAC3C,SAAI/I,KAAKuE,qBAAuBvE,KAAK8L,UAAUnX,QAC3CoU,GAAQ/I,KAAK+L,UAKrBvG,EAAczQ,UAAUiU,YAAc,WAClChJ,KAAKuE,mBAAqBvE,KAAK8L,UAAUnX,QAE7C6Q,EAAczQ,UAAUkY,QAAU,SAAUjD,GACxC7F,EAAOpP,UAAUkY,QAAQhY,KAAK+K,KAAMgK,GACpChK,KAAKgN,aAEFxH,EAxSU,CAySnBrC,EAAK8F,WACP7F,EAAaoC,cAAgBA,EA3SjC,CA4SGpC,IAAiBA,EAAe,KAEnC,SAAWA,GACP,IAAIqL,EAAiB,8XACjBC,EAAiB,miBACjBC,EAAiB,SAAUxK,GAE3B,SAASwK,EAAc3J,EAAa4J,EAAYC,GAC5C,IAAI9O,EAAQoE,EAAOlP,KAAK+K,KAAM,IAAImD,EAAK2L,QAAQF,EAAYC,GAAa,CACpEjG,eAAgB,IAAInE,aAAa,GACjCsK,UAAW,GACXC,aAAc,GACdzG,gBAAiB,IAAIpF,EAAKuG,UACxB1J,KAIN,OAHAD,EAAMiF,YAAc,EACpBjF,EAAMiF,YAAcA,EACpB5B,EAAa6L,gBAAgBC,aAAanP,EAAOA,EAAMiF,aAChDjF,EAEX,OAbA8D,EAAU8K,EAAexK,GAalBwK,EAdU,CAenBxL,EAAKgM,QACP/L,EAAauL,cAAgBA,EAC7B,IAAIS,EAAkB,SAAUjL,GAE5B,SAASiL,EAAepK,GACpB,IAAIjF,EAAQoE,EAAOlP,KAAK+K,KAAMgF,EAAa0J,EAAgBtL,EAAa6L,gBAAgBI,oBAAoBrK,EAAayJ,KAAoBzO,KAE7I,OADAoD,EAAa6L,gBAAgBC,aAAanP,EAAOA,EAAMiF,aAChDjF,EAEX,OANA8D,EAAUuL,EAAgBjL,GAMnBiL,EAPW,CAQpBT,GACFvL,EAAagM,eAAiBA,EAC9B,IAAIE,EAAgB,SAAUnL,GAE1B,SAASmL,IACL,IAAIvP,EAAQoE,EAAOlP,KAAK+K,OAASA,KACjCD,EAAMwP,SAAW,GACjBxP,EAAM2N,YAAc,EACpB3N,EAAM6N,OAA0B,EAAjB7N,EAAMwP,SACrBxP,EAAMyP,eAAiB,EACvB,IAAIC,EAAM1P,EAAM0P,IAAM,IAAItM,EAAKuM,OAAO,IAAIjL,aAAa,IAAI,GAAM,GAMjE,OALA1E,EAAM4P,aAAa,kBAAmBF,EAAK,GAAG,EAAO,EAAG1P,EAAM6N,OAAQ,GACjE+B,aAAa,gBAAiBF,EAAK,GAAG,EAAO,EAAG1P,EAAM6N,OAAQ,GAC9D+B,aAAa,SAAUF,EAAK,GAAG,EAAO,EAAG1P,EAAM6N,OAAQ,IACvD+B,aAAa,QAASF,EAAK,GAAG,EAAO,EAAG1P,EAAM6N,OAAQ,IACtD+B,aAAa,aAAcF,EAAK,GAAG,EAAO,EAAG1P,EAAM6N,OAAQ,IACzD7N,EAEX,OAfA8D,EAAUyL,EAAcnL,GAejBmL,EAhBS,CAiBlBnM,EAAKyM,UACPxM,EAAakM,aAAeA,EAhDhC,CAiDGlM,IAAiBA,EAAe,KAEnC,SAAWA,GACP,IAAIyM,EAAgB,SAAU1L,GAE1B,SAAS0L,EAAavM,GAClB,IAAIvD,EAAQoE,EAAOlP,KAAK+K,KAAMsD,IAAatD,KAW3C,OAVAD,EAAM+P,IAAM,EACZ/P,EAAMgQ,YAAc,KACpBhQ,EAAMiQ,MAAQ,EACdjQ,EAAMwD,SAAW,CAAC,EAAG,GACrBxD,EAAMkQ,OAAS,GACflQ,EAAMmQ,aAAe,GACrBnQ,EAAMoQ,WAAa,IAAI/M,EAAagM,eAAehM,EAAa0B,SAASE,aACzEjF,EAAMgQ,YAAc,IAAI5M,EAAKuM,YAAO/Q,GAAW,GAAM,GACrDoB,EAAMuN,iBAAiB,KACvBvN,EAAMqQ,aACCrQ,EAgFX,OA7FA8D,EAAUgM,EAAc1L,GAexB0L,EAAa9a,UAAUqb,WAAa,WAChC,KAAIhN,EAAa0B,SAASC,qBAAuB,GAIjD,IADA,IAAIC,EAAc5B,EAAa0B,SAASE,YAC/BvQ,EAAI,EAAGA,EAAIuQ,EAAavQ,IAAK,CAClC,IAAI+W,EAAW,IAAIpI,EAAa2G,qBAAqB3G,EAAa0B,UAC9DoF,EAAU,IAAI/G,EAAKkN,YAAY7E,GACnCtB,EAAQoG,UAAYlN,EAAa0B,SAASsE,WAC1Cc,EAAQqG,SAAWpN,EAAKqN,WAAWC,MACnCzQ,KAAKkQ,aAAarb,KAAK2W,KAG/BqE,EAAa9a,UAAU2b,sBAAwB,SAAUpN,EAAU4E,EAAQ5C,GACvE,IAAIqL,EAAczI,EAAOI,SAAS0G,aAClChP,KAAKiQ,OAAOtb,OAAS,EACrB,IAAK,IAAIF,EAAI,EAAGA,EAAI6Q,EAAS3Q,OAAQF,IAAK,CACtC,IAAIiS,EAAUpB,EAAS7Q,GACvB,IAAKiS,IAAYA,EAAQ+E,MACrB,OAEJnI,EAASoD,QAAQlP,KAAK8N,EAAS7Q,GAAIA,GACnCkc,EAAgB,EAAJlc,GAAS,EAAM6Q,EAAS7Q,GAAGuS,YAAY3O,MACnDsY,EAAgB,EAAJlc,EAAQ,GAAK,EAAM6Q,EAAS7Q,GAAGuS,YAAYxE,OAE3D0F,EAAOI,SAAS0G,aAAe2B,GAEnCd,EAAa9a,UAAUoY,aAAe,SAAU7J,EAAU4E,EAAQ5C,GAC9D,IAAIsL,EAAMtL,EAAS3Q,OACfqQ,EAAc5B,EAAa0B,SAASE,YACxC,KAAI4L,EAAMxN,EAAa0B,SAASC,oBAAsBC,GAGtD,GAAI5B,EAAa0B,SAASC,qBAAuB,EAC7C/E,KAAK0Q,sBAAsBpN,EAAU4E,EAAQ5C,OADjD,CAKA,IADA,IAAI7Q,EAAI,EACDA,EAAImc,EAAKnc,IAAK,CACjB,IAAIiS,EAAUpB,EAAS7Q,GACvB,GAAKiS,GAAYA,EAAQ+E,MAEbzL,KAAKkQ,aAAazb,GAAK,GAC7BgW,WAAe,EAAJhW,EAAOiS,GAE5B,IAAImK,EAAYpc,EAAI,GAAM,EAC1B,IAAKA,EAAI,EAAGA,EAAIoc,EAAUpc,IACtB6O,EAASoD,QAAQlP,KAAKwI,KAAKkQ,aAAazb,GAAGyV,QAASzV,KAG5Dob,EAAa9a,UAAU2L,MAAQ,aAE/BmP,EAAa9a,UAAUqY,SAAW,WAC9B,IAAI0D,EAAO,IAAI1N,EAAakM,aAG5B,OAFAwB,EAAKC,SAAS/Q,KAAK+P,aACnBe,EAAKtB,eAAiBhP,KAAKG,MACpBmQ,GAEXjB,EAAa9a,UAAUuY,iBAAmB,SAAU/U,EAAM0T,QAC3C,IAAPA,IAAiBA,EAAK,MAC1B,IAAI+E,EAAsB,EAAPzY,EACnB,KAAIyY,GAAgBhR,KAAKgQ,OAAzB,CAIA,IADA,IAAIY,EAAMI,EACHJ,EAAMI,GACTJ,IAAQ,EAEZ5Q,KAAKgQ,MAAQgB,EACbhR,KAAK+P,YAAYrF,OAAOvH,EAAK8N,MAAMC,sBAAsB3Y,EAAM6K,EAAa0B,SAASqE,kBAEzF0G,EAAa9a,UAAUoT,UAAY,WAC/B,OAAOnI,KAAKmQ,YAEhBN,EAAa9a,UAAUkY,QAAU,WAC7B9I,EAAOpP,UAAUkY,QAAQhY,KAAK+K,MAC9BA,KAAKmQ,WAAa,MAEfN,EA9FS,CA+FlB1M,EAAKgO,gBACP/N,EAAayM,aAAeA,EAC5B1M,EAAKiO,SAASzN,eAAe,UAAWkM,GAlG5C,CAmGGzM,IAAiBA,EAAe,KAEnC,SAAWA,GACP,IAAIiO,EAAU,SAAUlN,GAEpB,SAASkN,EAAO9J,EAASnD,GACrB,IAAIrE,EAAQoE,EAAOlP,KAAK+K,OAASA,KAIjC,OAHAD,EAAMuR,qBAAuB,EAC7BvR,EAAMwH,QAAUA,EAChBxH,EAAM6B,EAAIwC,EACHrE,EA4DX,OAlEA8D,EAAUwN,EAAQlN,GAQlBkN,EAAOtc,UAAU+Q,MAAQ,WAErB,IADA,IAAIiC,EAAS/H,KAAKmF,SACT1Q,EAAI,EAAGA,EAAIsT,EAAOpT,OAAQF,IAC/BsT,EAAOtT,GAAGqR,QACd9F,KAAKuR,gBAAkB,GAE3BF,EAAOtc,UAAUyc,aAAe,WAC5B,IAAIjK,EAAUvH,KAAKuH,QACfQ,EAAS/H,KAAKmF,SACdsM,EAAWzR,KAAKuR,kBAAoBxJ,EAAOpT,OAC/CqL,KAAKuR,gBAAkBxJ,EAAOpT,OAC9B,IAcIF,EAdAgb,EAAMzP,KAAK0R,aACXC,EAAa3R,KAAK4R,YActB,GAbKnC,IACDA,EAAMzP,KAAK0R,aAAexP,SAASK,cAAc,WACjDoP,EAAa3R,KAAK4R,YAAc,IAAIzO,EAAKO,eAAe,IAAK,IAAK,CAAEmO,KAAMpC,KAC/D/H,QAAUiK,EAAWG,YAChCH,EAAWrK,QAAQC,QAAQ/D,kBAAmB,GAE9CiM,EAAIpX,QAAUkP,EAAQwK,aACtBtC,EAAIjN,SAAW+E,EAAQyK,eACvBvC,EAAIpX,MAAQkP,EAAQwK,YACpBtC,EAAIjN,OAAS+E,EAAQyK,aACrBP,GAAW,IAGVA,EACD,IAAKhd,EAAI,EAAGA,EAAIsT,EAAOpT,OAAQF,IAC3B,GAAIsT,EAAOtT,GAAGqU,WAAW9I,KAAKsR,sBAAwB/J,EAAQqB,gBAAiB,CAC3E6I,GAAW,EACX,MAKZ,GADAzR,KAAKsR,oBAAsB/J,EAAQqB,eAC/B6I,EAKA,IAJIlK,EAAQ0K,eACR1K,EAAQ0K,cAAcN,GAE1BA,EAAWjK,QAAQwK,UAAU,EAAG,EAAGzC,EAAIpX,MAAOoX,EAAIjN,QAC7C/N,EAAI,EAAGA,EAAIsT,EAAOpT,OAAQF,IAC3BsT,EAAOtT,GAAGuU,cACVjB,EAAOtT,GAAGyS,aAAayK,GAI/B,IADA3R,KAAKmS,eAAiBnS,KAAKyH,eACtBhT,EAAI,EAAGA,EAAIsT,EAAOpT,OAAQF,IAAK,CAChCuL,KAAKmS,eAAiBpK,EAAOtT,GAAGgT,eAChC,QAGR4J,EAAOtc,UAAUmS,aAAe,SAAU5D,GACtCtD,KAAKwR,eACL,IAAIhK,EAAKxH,KAAKmS,eACd7O,EAASoE,QAAQC,aAAaH,EAAGxG,EAAGwG,EAAGvG,EAAGuG,EAAGlR,EAAGkR,EAAGjR,EAAGiR,EAAGI,GAAKtE,EAASuE,WAAYL,EAAGM,GAAKxE,EAASuE,YACtF7H,KAAKuH,QACnBjE,EAASoE,QAAQoF,UAAU9M,KAAK0R,aAAc,EAAG,IAE9CL,EAnEG,CAoEZlO,EAAK8F,WACP7F,EAAaiO,OAASA,EAtE1B,CAuEGjO,IAAiBA,EAAe,KAEnC,SAAWA,GACPD,EAAKoE,QAAUnE,EADnB,CAEGA,IAAiBA,EAAe,KAEnC,SAAWA,IAEP,SAAW6L,GAcPA,EAAgBC,aAbhB,SAAsBhH,EAAQlD,GAE1B,IADA,IAAIoN,EAAe,GACV3d,EAAI,EAAGA,EAAIuQ,EAAavQ,IAC7B2d,EAAa3d,GAAKA,EAEtByT,EAAOI,SAASyG,UAAYqD,EAC5B,IAAIzB,EAAc,GAClB,IAASlc,EAAI,EAAGA,EAAIuQ,EAAavQ,IAC7Bkc,EAAY9b,KAAK,EAAMuO,EAAa0B,SAASoE,YAC7CyH,EAAY9b,KAAK,EAAMuO,EAAa0B,SAASoE,YAEjDhB,EAAOI,SAAS0G,aAAe2B,GAOnC1B,EAAgBI,oBAJhB,SAA6BrK,EAAaqN,GACtC,OAAOA,EAAYC,QAAQ,YAAatN,EAAc,IACjDsN,QAAQ,cAAetS,KAAKuS,kBAAkBvN,KAuBvDiK,EAAgBsD,kBApBhB,SAA2BvN,GACvB,IAAIwN,EAAM,GACVA,GAAO,KACPA,GAAO,KACPA,GAAO,2BACPA,GAAO,2BACPA,GAAO,MACP,IAAK,IAAI/d,EAAI,EAAGA,EAAIuQ,EAAavQ,IAC7B+d,GAAO,UACH/d,EAAIuQ,EAAc,IAClBwN,GAAO,mBAAqB/d,EAAI,OAEpC+d,GAAO,MACPA,GAAO,mCAAqC/d,EAAI,kCAAoCA,EAAI,MACxF+d,GAAO,MAIX,OAFAA,GAAO,KACPA,GAAO,MArCf,CAyCqBpP,EAAa6L,kBAAoB7L,EAAa6L,gBAAkB,KA3CzF,CA4CG7L,IAAiBA,EAAe","file":"bundle-height-5b4602bd66ed66a3f391.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpGame\"] = window[\"webpackJsonpGame\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([32,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { BLOCKED, pickVariant, RIVER, TILE_TO_BASE_TILE, WATER } from \"./WorldMap\";\n\n\nexport default function flood(map, x, y, width)\n{\n    const { size, tiles, things} = map;\n\n    let off;\n    //console.log(\"FLOOD\", width)\n\n    switch(width)\n    {\n        case 0:\n        case 1:\n            things[( y - 1) * size + x - 1] = BLOCKED;\n            things[( y - 1) * size + x] = BLOCKED;\n            things[( y - 1) * size +  x + 1] = BLOCKED;\n            things[y * size + x - 1] = BLOCKED;\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 1] = BLOCKED;\n            things[( y + 1) * size + x - 1] = BLOCKED;\n            things[( y + 1) * size + x] = BLOCKED;\n            things[( y + 1) * size +  x + 1] = BLOCKED;\n            break;\n        case 2:\n            things[( y - 1) * size + x - 1] = BLOCKED;\n            things[( y - 1) * size + x] = BLOCKED;\n            things[( y - 1) * size +  x + 1] = BLOCKED;\n            things[( y - 1) * size +  x + 2] = BLOCKED;\n            things[y * size + x - 1] = BLOCKED;\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 2] = BLOCKED;\n            things[( y + 1) * size + x - 1] = BLOCKED;\n            things[( y + 1) * size + x] = BLOCKED;\n            things[( y + 1) * size +  x + 1] = BLOCKED;\n            things[( y + 1) * size +  x + 2] = BLOCKED;\n            break;\n        case 3:\n            things[( y - 3) * size + x] = BLOCKED;\n            things[( y - 3) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size + x - 1] = BLOCKED;\n            things[( y - 2) * size + x] = BLOCKED;\n            things[( y - 2) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size + x - 2] = BLOCKED;\n            things[( y - 1) * size + x - 1] = BLOCKED;\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size +  x + 3] = BLOCKED;\n            things[y * size + x - 2] = BLOCKED;\n            things[y * size + x - 1] = BLOCKED;\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 2] = BLOCKED;\n            things[y * size +  x + 3] = BLOCKED;\n            things[( y + 1) * size + x - 1] = BLOCKED;\n            things[( y + 1) * size + x] = BLOCKED;\n            things[( y + 1) * size +  x + 1] = BLOCKED;\n            things[( y + 1) * size +  x + 2] = BLOCKED;\n            things[( y + 2) * size + x] = BLOCKED;\n            things[( y + 2) * size +  x + 1] = BLOCKED;\n            break;\n        case 4:\n            things[( y - 3) * size + x - 1] = BLOCKED;\n            things[( y - 3) * size + x] = BLOCKED;\n            things[( y - 3) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size + x - 2] = BLOCKED;\n            things[( y - 2) * size + x - 1] = BLOCKED;\n            things[( y - 2) * size + x] = BLOCKED;\n            things[( y - 2) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size + x - 3] = BLOCKED;\n            things[( y - 1) * size + x - 2] = BLOCKED;\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size +  x + 3] = BLOCKED;\n            things[y * size + x - 3] = BLOCKED;\n            things[y * size + x - 2] = BLOCKED;\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 2] = BLOCKED;\n            things[y * size +  x + 3] = BLOCKED;\n            things[( y + 1) * size + x - 2] = BLOCKED;\n            things[( y + 1) * size + x - 1] = BLOCKED;\n            things[( y + 1) * size + x] = BLOCKED;\n            things[( y + 1) * size +  x + 1] = BLOCKED;\n            things[( y + 1) * size +  x + 2] = BLOCKED;\n            things[( y + 2) * size + x - 1] = BLOCKED;\n            things[( y + 2) * size + x] = BLOCKED;\n            things[( y + 2) * size +  x + 1] = BLOCKED;\n            break;\n        case 5:\n            things[( y - 3) * size + x - 1] = BLOCKED;\n            things[( y - 3) * size + x] = BLOCKED;\n            things[( y - 3) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size + x - 2] = BLOCKED;\n            things[( y - 2) * size + x - 1] = BLOCKED;\n            things[( y - 2) * size + x] = BLOCKED;\n            things[( y - 2) * size +  x + 1] = BLOCKED;\n            things[( y - 2) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size + x - 3] = BLOCKED;\n            things[( y - 1) * size + x - 2] = BLOCKED;\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 2] = BLOCKED;\n            things[( y - 1) * size +  x + 3] = BLOCKED;\n            things[y * size + x - 3] = BLOCKED;\n            things[y * size + x - 2] = BLOCKED;\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 2] = BLOCKED;\n            things[y * size +  x + 3] = BLOCKED;\n            things[( y + 1) * size + x - 3] = BLOCKED;\n            things[( y + 1) * size + x - 2] = BLOCKED;\n            off = ( y + 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 1) * size +  x + 2] = BLOCKED;\n            things[( y + 1) * size +  x + 3] = BLOCKED;\n            things[( y + 2) * size + x - 2] = BLOCKED;\n            things[( y + 2) * size + x - 1] = BLOCKED;\n            things[( y + 2) * size + x] = BLOCKED;\n            things[( y + 2) * size +  x + 1] = BLOCKED;\n            things[( y + 2) * size +  x + 2] = BLOCKED;\n            things[( y + 3) * size + x - 1] = BLOCKED;\n            things[( y + 3) * size + x] = BLOCKED;\n            things[( y + 3) * size +  x + 1] = BLOCKED;\n            break;\n        case 6:\n            things[( y - 4) * size + x - 1] = BLOCKED;\n            things[( y - 4) * size + x] = BLOCKED;\n            things[( y - 4) * size +  x + 1] = BLOCKED;\n            things[( y - 3) * size + x - 2] = BLOCKED;\n            things[( y - 3) * size + x - 1] = BLOCKED;\n            things[( y - 3) * size + x] = BLOCKED;\n            things[( y - 3) * size +  x + 1] = BLOCKED;\n            things[( y - 3) * size +  x + 2] = BLOCKED;\n            things[( y - 2) * size + x - 3] = BLOCKED;\n            things[( y - 2) * size + x - 2] = BLOCKED;\n            off = ( y - 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 2) * size +  x + 2] = BLOCKED;\n            things[( y - 2) * size +  x + 3] = BLOCKED;\n            things[( y - 1) * size + x - 4] = BLOCKED;\n            things[( y - 1) * size + x - 3] = BLOCKED;\n            off = ( y - 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 3] = BLOCKED;\n            things[( y - 1) * size +  x + 4] = BLOCKED;\n            things[y * size + x - 4] = BLOCKED;\n            things[y * size + x - 3] = BLOCKED;\n            off = y * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 3] = BLOCKED;\n            things[y * size +  x + 4] = BLOCKED;\n            things[( y + 1) * size + x - 4] = BLOCKED;\n            things[( y + 1) * size + x - 3] = BLOCKED;\n            off = ( y + 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 1) * size +  x + 3] = BLOCKED;\n            things[( y + 1) * size +  x + 4] = BLOCKED;\n            things[( y + 2) * size + x - 3] = BLOCKED;\n            things[( y + 2) * size + x - 2] = BLOCKED;\n            off = ( y + 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 2) * size +  x + 2] = BLOCKED;\n            things[( y + 2) * size +  x + 3] = BLOCKED;\n            things[( y + 3) * size + x - 2] = BLOCKED;\n            things[( y + 3) * size + x - 1] = BLOCKED;\n            things[( y + 3) * size + x] = BLOCKED;\n            things[( y + 3) * size +  x + 1] = BLOCKED;\n            things[( y + 3) * size +  x + 2] = BLOCKED;\n            things[( y + 4) * size + x - 1] = BLOCKED;\n            things[( y + 4) * size + x] = BLOCKED;\n            things[( y + 4) * size +  x + 1] = BLOCKED;\n            break;\n        case 7:\n            things[( y - 5) * size + x - 1] = BLOCKED;\n            things[( y - 5) * size + x] = BLOCKED;\n            things[( y - 5) * size +  x + 1] = BLOCKED;\n            things[( y - 4) * size + x - 2] = BLOCKED;\n            things[( y - 4) * size + x - 1] = BLOCKED;\n            things[( y - 4) * size + x] = BLOCKED;\n            things[( y - 4) * size +  x + 1] = BLOCKED;\n            things[( y - 4) * size +  x + 2] = BLOCKED;\n            things[( y - 3) * size + x - 3] = BLOCKED;\n            things[( y - 3) * size + x - 2] = BLOCKED;\n            off = ( y - 3) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 3) * size +  x + 2] = BLOCKED;\n            things[( y - 3) * size +  x + 3] = BLOCKED;\n            things[( y - 2) * size + x - 4] = BLOCKED;\n            things[( y - 2) * size + x - 3] = BLOCKED;\n            off = ( y - 2) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 2) * size +  x + 3] = BLOCKED;\n            things[( y - 2) * size +  x + 4] = BLOCKED;\n            things[( y - 1) * size + x - 5] = BLOCKED;\n            things[( y - 1) * size + x - 4] = BLOCKED;\n            off = ( y - 1) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 4] = BLOCKED;\n            things[( y - 1) * size +  x + 5] = BLOCKED;\n            things[y * size + x - 5] = BLOCKED;\n            things[y * size + x - 4] = BLOCKED;\n            off = y * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 4] = BLOCKED;\n            things[y * size +  x + 5] = BLOCKED;\n            things[( y + 1) * size + x - 5] = BLOCKED;\n            things[( y + 1) * size + x - 4] = BLOCKED;\n            off = ( y + 1) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 1) * size +  x + 4] = BLOCKED;\n            things[( y + 1) * size +  x + 5] = BLOCKED;\n            things[( y + 2) * size + x - 4] = BLOCKED;\n            things[( y + 2) * size + x - 3] = BLOCKED;\n            off = ( y + 2) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 2) * size +  x + 3] = BLOCKED;\n            things[( y + 2) * size +  x + 4] = BLOCKED;\n            things[( y + 3) * size + x - 3] = BLOCKED;\n            things[( y + 3) * size + x - 2] = BLOCKED;\n            off = ( y + 3) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 3) * size +  x + 2] = BLOCKED;\n            things[( y + 3) * size +  x + 3] = BLOCKED;\n            things[( y + 4) * size + x - 2] = BLOCKED;\n            things[( y + 4) * size + x - 1] = BLOCKED;\n            things[( y + 4) * size + x] = BLOCKED;\n            things[( y + 4) * size +  x + 1] = BLOCKED;\n            things[( y + 4) * size +  x + 2] = BLOCKED;\n            things[( y + 5) * size + x - 1] = BLOCKED;\n            things[( y + 5) * size + x] = BLOCKED;\n            things[( y + 5) * size +  x + 1] = BLOCKED;\n            break;\n        case 8:\n            things[( y - 6) * size + x - 1] = BLOCKED;\n            things[( y - 6) * size + x] = BLOCKED;\n            things[( y - 6) * size +  x + 1] = BLOCKED;\n            things[( y - 5) * size + x - 3] = BLOCKED;\n            things[( y - 5) * size + x - 2] = BLOCKED;\n            things[( y - 5) * size + x - 1] = BLOCKED;\n            things[( y - 5) * size + x] = BLOCKED;\n            things[( y - 5) * size +  x + 1] = BLOCKED;\n            things[( y - 5) * size +  x + 2] = BLOCKED;\n            things[( y - 5) * size +  x + 3] = BLOCKED;\n            things[( y - 4) * size + x - 4] = BLOCKED;\n            things[( y - 4) * size + x - 3] = BLOCKED;\n            things[( y - 4) * size + x - 2] = BLOCKED;\n            off = ( y - 4) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 4) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 4) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 4) * size +  x + 2] = BLOCKED;\n            things[( y - 4) * size +  x + 3] = BLOCKED;\n            things[( y - 4) * size +  x + 4] = BLOCKED;\n            things[( y - 3) * size + x - 5] = BLOCKED;\n            things[( y - 3) * size + x - 4] = BLOCKED;\n            things[( y - 3) * size + x - 3] = BLOCKED;\n            off = ( y - 3) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 3) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 3) * size +  x + 3] = BLOCKED;\n            things[( y - 3) * size +  x + 4] = BLOCKED;\n            things[( y - 3) * size +  x + 5] = BLOCKED;\n            things[( y - 2) * size + x - 5] = BLOCKED;\n            things[( y - 2) * size + x - 4] = BLOCKED;\n            off = ( y - 2) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 2) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 2) * size +  x + 4] = BLOCKED;\n            things[( y - 2) * size +  x + 5] = BLOCKED;\n            things[( y - 1) * size + x - 6] = BLOCKED;\n            things[( y - 1) * size + x - 5] = BLOCKED;\n            off = ( y - 1) * size + x - 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y - 1) * size +  x + 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y - 1) * size +  x + 5] = BLOCKED;\n            things[( y - 1) * size +  x + 6] = BLOCKED;\n            things[y * size + x - 6] = BLOCKED;\n            things[y * size + x - 5] = BLOCKED;\n            off = y * size + x - 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = y * size +  x + 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[y * size +  x + 5] = BLOCKED;\n            things[y * size +  x + 6] = BLOCKED;\n            things[( y + 1) * size + x - 6] = BLOCKED;\n            things[( y + 1) * size + x - 5] = BLOCKED;\n            off = ( y + 1) * size + x - 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 1) * size +  x + 4; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 1) * size +  x + 5] = BLOCKED;\n            things[( y + 1) * size +  x + 6] = BLOCKED;\n            things[( y + 2) * size + x - 5] = BLOCKED;\n            things[( y + 2) * size + x - 4] = BLOCKED;\n            off = ( y + 2) * size + x - 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 2) * size +  x + 3; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 2) * size +  x + 4] = BLOCKED;\n            things[( y + 2) * size +  x + 5] = BLOCKED;\n            things[( y + 3) * size + x - 5] = BLOCKED;\n            things[( y + 3) * size + x - 4] = BLOCKED;\n            things[( y + 3) * size + x - 3] = BLOCKED;\n            off = ( y + 3) * size + x - 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 3) * size +  x + 2; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 3) * size +  x + 3] = BLOCKED;\n            things[( y + 3) * size +  x + 4] = BLOCKED;\n            things[( y + 3) * size +  x + 5] = BLOCKED;\n            things[( y + 4) * size + x - 4] = BLOCKED;\n            things[( y + 4) * size + x - 3] = BLOCKED;\n            things[( y + 4) * size + x - 2] = BLOCKED;\n            off = ( y + 4) * size + x - 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 4) * size + x; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            off = ( y + 4) * size +  x + 1; TILE_TO_BASE_TILE[tiles[off]] !== WATER && ( tiles[off] = pickVariant(map, RIVER));\n            things[( y + 4) * size +  x + 2] = BLOCKED;\n            things[( y + 4) * size +  x + 3] = BLOCKED;\n            things[( y + 4) * size +  x + 4] = BLOCKED;\n            things[( y + 5) * size + x - 3] = BLOCKED;\n            things[( y + 5) * size + x - 2] = BLOCKED;\n            things[( y + 5) * size + x - 1] = BLOCKED;\n            things[( y + 5) * size + x] = BLOCKED;\n            things[( y + 5) * size +  x + 1] = BLOCKED;\n            things[( y + 5) * size +  x + 2] = BLOCKED;\n            things[( y + 5) * size +  x + 3] = BLOCKED;\n            things[( y + 6) * size + x - 1] = BLOCKED;\n            things[( y + 6) * size + x] = BLOCKED;\n            things[( y + 6) * size +  x + 1] = BLOCKED;\n            break;\n\n        default:\n            throw new Error(\"Unhandled width: \" + width)\n\n    }\n}\n","import \"./pixi-tilemap\"\n\nimport SimplexNoise from \"simplex-noise\"\nimport Prando from \"prando\"\nimport now from \"performance-now\"\nimport flood from \"./flood\";\n\nconst TAU = Math.PI * 2;\n\nconst N1 = 0.4;\nconst N2 = 1.4;\nconst N3 = 20;\nconst N4 = 5;\n\nfunction clamp(v)\n{\n    return v < -1 ? -1 : v > 1 ? 1 : v;\n}\n\nconst WATER_LINE = 0.05;\nconst BEACH_LINE = 0.07;\nconst WOODS_LINE = 0.09;\nconst MOUNTAIN_LINE = 0.5;\n\n// tiles\nexport const WATER = 0;\nexport const WATER2 = 1;\nexport const WATER3 = 2;\nexport const SAND = 3;\nexport const SAND2 = 4;\nexport const SAND3 = 5;\nexport const GRASS = 6;\nexport const GRASS2 = 7;\nexport const GRASS3 = 8;\nexport const DIRT = 9;\nexport const DIRT2 = 10;\nexport const DIRT3 = 11;\nexport const ROCK = 12;\nexport const ROCK2 = 13;\nexport const ROCK3 = 14;\nexport const WOODS = 15;\nexport const WOODS2 = 16;\nexport const WOODS3 = 17;\nexport const WOODS4 = 18;\nexport const RIVER = 19;\nexport const RIVER2 = 20;\nexport const RIVER3 = 21;\nexport const MARKER = 22;\nexport const MARKER2 = 23;\nexport const MARKER3 = 24;\n\n// things\nexport const BLOCKED = 1;\nexport const LARGE_TREE = 2;\nexport const LARGE_TREE_2 = 3;\nexport const SMALL_TREE = 4;\nexport const SMALL_TREE_2 = 5;\nexport const SMALL_TREE_3 = 6;\nexport const PLANT = 7;\nexport const PLANT_2 = 8;\nexport const PLANT_3 = 9;\nexport const BOULDER = 10;\nexport const BOULDER_2 = 11;\nexport const BLOCKED_MARKER = 12;\n\nfunction calcWeightSum(array)\n{\n    if (!array)\n    {\n        return 0;\n    }\n\n    let sum = 0;\n    for (let i = 1; i < array.length; i += 2)\n    {\n        sum += array[i];\n    }\n    return sum;\n}\n\nconst tileNames = [\n    \"WATER\",\n    \"WATER2\",\n    \"WATER3\",\n    \"SAND\",\n    \"SAND2\",\n    \"SAND3\",\n    \"GRASS\",\n    \"GRASS2\",\n    \"GRASS3\",\n    \"DIRT\",\n    \"DIRT2\",\n    \"DIRT3\",\n    \"ROCK\",\n    \"ROCK2\",\n    \"ROCK3\",\n    \"WOODS\",\n    \"WOODS2\",\n    \"WOODS3\",\n    \"WOODS4\",\n    \"RIVER\",\n    \"RIVER2\",\n    \"RIVER3\",\n    \"MARKER\",\n    \"MARKER2\",\n    \"MARKER3\"\n];\n\nconst variants = {\n    [WATER] : [WATER, WATER2, WATER3],\n    [SAND] :  [SAND, SAND2, SAND3],\n    [GRASS] : [GRASS, GRASS2, GRASS3],\n    [DIRT] :  [DIRT, DIRT2, DIRT3],\n    [ROCK] :  [ROCK, ROCK2, ROCK3],\n    [WOODS] : [WOODS, WOODS3],\n    [WOODS2] :[WOODS2, WOODS4],\n    [RIVER] : [RIVER, RIVER2, RIVER3]\n};\n\n/**\n * Map to look up base tiles for tile codes.s\n *\n * @type {Array<Number>}\n */\nexport const TILE_TO_BASE_TILE = (() => {\n\n    const array = new Array(tileNames.length);\n\n    for (let sTile in variants)\n    {\n        if (variants.hasOwnProperty(sTile))\n        {\n            const baseTile = +sTile;\n            array[baseTile] = baseTile;\n\n            const variantArray = variants[sTile];\n            for (let i = 0; i < variantArray.length; i++)\n            {\n                const tile = variantArray[i];\n                array[tile] = baseTile;\n            }\n        }\n    }\n\n    //console.log(\"TILE2BASE\", array);\n\n    return array;\n\n})();\n\n\nfunction normalizeSpawnTable(table)\n{\n    for (let sTile in table)\n    {\n        if (table.hasOwnProperty(sTile))\n        {\n            const array = table[sTile];\n\n            if (array)\n            {\n                const sum = calcWeightSum(array);\n                for (let i = 1; i < array.length; i += 2)\n                {\n                    array[i] /= sum\n                }\n            }\n        }\n    }\n\n    return table;\n}\n\nconst spawnTable = normalizeSpawnTable({\n    [WATER] : false,\n    [SAND] :  [0, 500, BOULDER, 1, BOULDER_2, 1],\n    [GRASS] : [0, 1000, LARGE_TREE, 2, LARGE_TREE_2, 2, SMALL_TREE, 3, SMALL_TREE_3, 3, BOULDER, 1, BOULDER_2, 2],\n    [DIRT] :  [0, 1000, LARGE_TREE, 2, LARGE_TREE_2, 2, SMALL_TREE, 3, SMALL_TREE_3, 3, BOULDER, 1, BOULDER_2, 2],\n    [ROCK] :  [0, 4, BOULDER, 1, BOULDER_2, 1],\n    [WOODS] : [0, 150, LARGE_TREE, 2, LARGE_TREE_2, 2, SMALL_TREE, 5, SMALL_TREE_2, 5, SMALL_TREE_3, 5, PLANT, 1, PLANT_2, 1, PLANT_3, 1, BOULDER, 1, BOULDER_2, 2],\n    [WOODS2]: [0, 40, LARGE_TREE, 2, LARGE_TREE_2, 2, SMALL_TREE, 5, SMALL_TREE_2, 5, SMALL_TREE_3, 5, PLANT, 1, PLANT_2, 1, PLANT_3, 1, BOULDER, 1, BOULDER_2, 2],\n    [RIVER] : false\n});\n\n\n//console.log(\"VARIANTS\", JSON.stringify(variants, null, 4));\n\nexport function pickVariant(map, base)\n{\n    const values = variants[base];\n\n    let num;\n    let result;\n    if (!values)\n    {\n        result = base;\n    }\n    else\n    {\n        const last = values.length - 1;\n\n        if (last === 0)\n        {\n            result = values[0];\n        }\n        else\n        {\n            num = map.random.nextInt(0, last);\n            //console.log(`Pick from 0 to ${last}: ${num}`)\n            result = values[num];\n        }\n    }\n\n    //console.log(\"Variant of \", base, \"=>\", result);\n\n    return result;\n}\n\nexport function isVariant(tile, base)\n{\n    return TILE_TO_BASE_TILE[tile] === base;\n}\n\n\nfunction spawn(map, spawns)\n{\n    let value = map.random.next();\n    let pos = 1;\n    do\n    {\n        value -= spawns[pos];\n        pos += 2\n    } while (value > 0 && pos < spawns.length);\n\n    return spawns[pos - 3];\n}\n\n\nfunction spawnForBlock(map, mapOffset, baseTile)\n{\n    const { things, sizeMask } = map;\n\n    if (things[mapOffset] !== 0)\n    {\n        console.log(\"Skip spawning on \", things[mapOffset])\n        return;\n    }\n\n    const spawns = spawnTable[baseTile];\n    if (spawns)\n    {\n        const thing = spawn(map, spawns);\n        if (thing)\n        {\n            //console.log(\"THING\", thing);\n\n            if (thing === LARGE_TREE || thing === LARGE_TREE_2)\n            {\n\n                const prev3Offset = (mapOffset - 3) & sizeMask;\n                const prev2Offset = (mapOffset - 2) & sizeMask;\n                const prevOffset = (mapOffset - 1) & sizeMask;\n                const nextOffset = (mapOffset + 1) & sizeMask;\n                const next2Offset = (mapOffset + 2) & sizeMask;\n                const next3Offset = (mapOffset + 3) & sizeMask;\n\n                if (\n                    things[prev3Offset] !== BLOCKED &&\n                    things[prev2Offset] !== BLOCKED &&\n                    things[prevOffset] !== BLOCKED\n                )\n                {\n\n                    things[mapOffset] = thing;\n                    things[nextOffset] = BLOCKED;\n                    things[next2Offset] = BLOCKED;\n                    things[next3Offset] = BLOCKED;\n\n                    //console.log(\"Block for large tree\", mapOffset)\n                }\n            }\n            else if (thing === BOULDER)\n            {\n                const prevOffset = (mapOffset - 1) & sizeMask;\n                const nextOffset = (mapOffset + 1) & sizeMask;\n\n                //baseTile === ROCK && console.log(\"isLargeBoulder\", things[prevOffset], things[mapOffset], things[nextOffset])\n\n                if (\n                    things[prevOffset] !== BLOCKED\n                )\n                {\n\n                    things[mapOffset] = thing;\n                    things[nextOffset] = BLOCKED;\n                    //console.log(\"Block for large boulder\", mapOffset)\n                }\n            }\n            else\n            {\n                things[mapOffset] = thing;\n            }\n        }\n    }\n}\n\n\nfunction determineBaseTile(map, x, y)\n{\n    const coords = map.heightCoords(x, y);\n    const n = map.heightFn(x, y, coords);\n\n    if (n < WATER_LINE)\n    {\n        return WATER;\n    }\n    else if (n < BEACH_LINE)\n    {\n        return SAND;\n    }\n    else if (n < MOUNTAIN_LINE)\n    {\n        const {nx, ny, nz, nw} = coords;\n\n        const n3 = n > WOODS_LINE ? map.noise4D(nx * N4, nw * N4, ny * N4, nz * N4) : 1;\n        const n4 = map.noise4D(nx * N3, nw * N3, ny * N3, nz * N3);\n        if (n3 < 0)\n        {\n            if (n4 < 0)\n            {\n                return WOODS;\n            }\n            else\n            {\n                return WOODS2;\n            }\n\n        }\n        else\n        {\n            if (n4 < 0)\n            {\n                return GRASS;\n            }\n            else\n            {\n                return DIRT;\n            }\n        }\n    }\n    else\n    {\n        return ROCK;\n    }\n}\n\n\nfunction createBase(size, seed)\n{\n    const map = new WorldMap(size, seed);\n\n    const { tiles } = map;\n\n    let mapOffset = 0;\n    for (let y = 0; y < size; y++)\n    {\n        for (let x = 0; x < size; x++)\n        {\n            const baseTile = determineBaseTile(map, x, y);\n            tiles[mapOffset] = pickVariant(map, baseTile);\n\n            spawnForBlock(map, mapOffset, baseTile);\n\n            mapOffset++;\n        }\n    }\n    return map;\n}\n\nfunction randomProbes(map)\n{\n    const probes = [];\n\n    const { size } = map;\n\n    const probeCount = size * size / 1000;\n\n    console.log(\"Probe count =\", probeCount);\n\n    for (let i = 0; i < probeCount; i++)\n    {\n        const x = (map.random.next() * size) | 0;\n        const y = (map.random.next() * size) | 0;\n\n        const value = map.heightFn(x, y);\n\n        if (value > WATER_LINE)\n        {\n            probes.push({\n                x,\n                y,\n                value,\n                points: [],\n                tile: 0\n            })\n        }\n    }\n    return probes;\n}\n\n\nconst directions = [\n    0, -1,\n    -1, 0,\n    1, 0,\n    0, 1\n];\n\n\nfunction climbUp(map, probe)\n{\n    let currentHigh = probe.value;\n    let currentX = probe.x;\n    let currentY = probe.y;\n\n    const { size } = map;\n\n    let improved = false;\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const x = probe.x + directions[i];\n        const y = probe.y + directions[i + 1];\n\n        if (x > 0 && y > 0 && x < size && y < size)\n        {\n            const value = map.heightFn(x, y);\n            if (value > currentHigh)\n            {\n                currentHigh = value;\n                currentX = x;\n                currentY = y;\n                improved = true;\n            }\n        }\n    }\n\n    if (!improved)\n    {\n        return false;\n    }\n    else\n    {\n        return {\n            x: currentX,\n            y: currentY,\n            value: currentHigh,\n            points: []\n        };\n    }\n}\n\n\nfunction removeDuplicates(probes)\n{\n    const length = probes.length;\n\n    const uniqueProbes = [];\n\n    for (let i = 0; i < length; i++)\n    {\n        const probe = probes[i];\n        let unique = true;\n        for (let j = length - 1; j > i; j--)\n        {\n            const other = probes[j];\n            if (probe.x === other.x && probe.y === other.y)\n            {\n                unique = false;\n                break;\n            }\n        }\n\n        if (unique)\n        {\n            uniqueProbes.push(probe);\n        }\n    }\n\n    return uniqueProbes;\n}\n\n\nfunction jitter(map, filtered, amount = 8)\n{\n    const twice = amount * 2;\n\n    const multis = [];\n    for (let i = 0; i < filtered.length; i++)\n    {\n        const probe = filtered[i];\n        const xOff = map.random.nextInt(-amount, amount);\n        const yOff = map.random.nextInt(-amount, amount);\n        probe.x = probe.x + xOff;\n        probe.y = probe.y + yOff;\n\n        const v = map.heightFn(probe.x, probe.y);\n\n        if (v > MOUNTAIN_LINE && map.random.next() < 0.6)\n        {\n            multis.push(\n                {\n                    ...probe,\n                    x: (probe.x - amount - yOff) | 0,\n                    y: (probe.y - amount + xOff) | 0\n                }\n            );\n        }\n    }\n\n    return filtered.concat(multis);\n}\n\n\nfunction createSprings(map)\n{\n    const probes = randomProbes(map);\n\n    console.log(probes.length, \"random probes\");\n\n    const { size } = map;\n\n    const length = probes.length;\n    let walkingStart = 0, i = 0;\n    for (i = 0; i < size / 2 && walkingStart < length; i++)\n    {\n        //console.log(\"Walking \" + (length - walkingStart))\n        for (let j = walkingStart; j < length; j++)\n        {\n            const probe = probes[j];\n            const improved = climbUp(map, probe);\n            if (improved)\n            {\n                probes[j] = improved;\n            }\n            else\n            {\n                // swap current with first walker\n                const firstWalker = probes[walkingStart];\n                probes[walkingStart] = probes[j];\n                probes[j] = firstWalker;\n                // increase walking start\n                walkingStart++;\n            }\n        }\n\n        //drawSprings(probes, imageData, false);\n    }\n\n\n    const filtered = removeDuplicates(probes);\n\n    //console.log(filtered.length, \"springs\");\n    console.log(\"Stopped climbing after \", i, \" iterations: \" + filtered.length + \" springs\");\n\n    return jitter(map, filtered);\n}\n\n\nfunction flow(map, probe)\n{\n    let currentLow = Infinity;\n    let currentX = probe.x;\n    let currentY = probe.y;\n    let currentTile = -1;\n    let currentDirection = -1;\n\n    let improved = false;\n\n    const { size } = map;\n\n    for (let i = 0; i < directions.length; i += 2)\n    {\n        const x = probe.x + directions[i];\n        const y = probe.y + directions[i + 1];\n\n        if (x > 0 && y > 0 && x < size && y < size)\n        {\n            let tile = map.read(x, y);\n            if (!isVariant(tile ,RIVER))\n            {\n                if (isVariant(tile,ROCK))\n                {\n                    const {nx, ny, nz, nw} = map.heightCoords(x, y);\n                    const n3 = map.noise4D(nx * N3, nw * N3, ny * N3, nz * N3);\n                    if (n3 < 0)\n                    {\n                        tile = GRASS;\n                    }\n                    else\n                    {\n                        tile = DIRT;\n                    }\n                }\n\n                const value = map.heightFn(x, y) - (!isVariant(tile, SAND) && isVariant(tile, probe.tile) ? 0.001 : 0);\n                if (value < currentLow)\n                {\n                    currentLow = value;\n                    currentX = x;\n                    currentY = y;\n                    currentTile = tile;\n                    currentDirection = i;\n                    improved = true;\n                }\n            }\n        }\n    }\n\n    if (!improved)\n    {\n        const dir = map.random.nextInt(0,3) * 2;\n        probe.x += directions[dir];\n        probe.y += directions[dir + 1];\n        probe.tile = TILE_TO_BASE_TILE[map.read(probe.x, probe.y)];\n    }\n    else\n    {\n        const n = map.random.next();\n        if (n < 0.25)\n        {\n            const dir = ((currentDirection/2 + (n < 0.125 ? -1 : 1)) & 3)* 2;\n\n            probe.x += directions[dir];\n            probe.y += directions[dir + 1];\n\n            probe.points.push(probe.x, probe.y);\n\n            probe.x += directions[dir];\n            probe.y += directions[dir + 1];\n            probe.value = 1;\n            probe.tile = TILE_TO_BASE_TILE[map.read(probe.x, probe.y)];\n        }\n        else\n        {\n            probe.x = currentX;\n            probe.y = currentY;\n            probe.value = currentLow;\n            probe.tile = TILE_TO_BASE_TILE[currentTile];\n\n        }\n    }\n}\n\n\n\nfunction drawRivers(map)\n{\n    const springs = createSprings(map);\n\n    const { size } = map;\n\n    const length = springs.length;\n    let flowingStart = 0, i = 0;\n    for (i = 0; i < size && flowingStart < length; i++)\n    {\n        //console.log(\"Flowing \" + (length - flowingStart))\n        for (let j = flowingStart; j < length; j++)\n        {\n            const probe = springs[j];\n\n            const {x, y} = probe;\n            probe.points.push(x,y);\n\n            const currentTile = map.read(probe.x, probe.y);\n            if (isVariant(currentTile, WATER))\n            {\n                // swap current with first flower\n                const firstFlower = springs[flowingStart];\n                springs[flowingStart] = springs[j];\n                springs[j] = firstFlower;\n                // increase walking start\n                flowingStart++;\n                continue;\n            }\n            flow(map, probe);\n\n        }\n\n        //drawSprings(springs, imageData, false);\n    }\n    console.log(\"Stopped flowing after \", i, \" iterations\");\n\n    for (let i = 0; i < springs.length; i++)\n    {\n        const { points } = springs[i];\n\n        for (let j = 0; j < points.length; j += 2)\n        {\n\n            const width = Math.min(8, j * 0.004)|0;\n            flood(map, points[j], points[j + 1], width);\n        }\n    }\n\n\n    for (let i = 0; i < springs.length; i++)\n    {\n        console.log(\"Spring length\", springs[i].points.length)\n    }\n}\n\n\n\nexport default  class WorldMap {\n    constructor(size = 800, seed)\n    {\n        const lg = Math.log(size) / Math.log(2);\n        if ( (lg % 1) !== 0)\n        {\n            throw new Error(\"Size must be power of two: \" + size);\n        }\n\n        console.log(\"New map \" + size + \" x \" + size + \", seed = \" + seed)\n\n        this.random = new Prando(seed);\n        this.noise = new SimplexNoise(() => this.random.next());\n        this.size = size;\n\n        this.sizeMask = size - 1;\n        this.fineMask = (size << 4) - 1;\n\n        this.factor = 1 / size;\n        this.tiles = new Uint8Array(size * size);\n        this.things = new Uint8Array(size * size);\n    }\n\n\n    read(x, y)\n    {\n        return this.tiles[y * this.size + x];\n    }\n\n    getThing(x, y)\n    {\n        return this.things[y * this.size + x];\n    }\n\n    write(x, y, tile)\n    {\n        this.tiles[y * this.size + x] = tile;\n    }\n\n    putThing(x, y, thing)\n    {\n        this.things[y * this.size + x] = thing;\n    }\n\n\n    /**\n     * Returns the terrain height at the given tile coordinates\n     *\n     * @param {Number} x            tile x-coordinate\n     * @param {Number} y            tile y-coordinate\n     * @param {Object} [coords]     predetermined 4D coordinates\n     * @param {number} coords.nx    predetermined 4D x-coordinate\n     * @param {number} coords.ny    predetermined 4D y-coordinate\n     * @param {number} coords.nz    predetermined 4D z-coordinate\n     * @param {number} coords.nw    predetermined 4D w-coordinate\n     * \n     * @return {number} height between -1 and 1 inclusive\n     */\n    heightFn(x, y, coords)\n    {\n        const s = x * this.factor;\n        const t = y * this.factor;\n\n        let nx;\n        let ny;\n        let nz;\n        let nw;\n        if (coords)\n        {\n            nx = coords.nx;\n            ny = coords.ny;\n            nz = coords.nz;\n            nw = coords.nw;\n        }\n        else\n        {\n            nx = Math.cos(s * TAU);\n            ny = Math.cos(t * TAU);\n            nz = Math.sin(s * TAU);\n            nw = Math.sin(t * TAU);\n        }\n\n        const n0 = this.noise4D(nx * N1, ny * N1, nz * N1, nw * N1);\n        const n1 = this.noise4D(nx * N2, nw * N2, ny * N2, nz * N2);\n        return clamp(n0 < 0 ? -n0 * n0 : n0 * n0) + n1 * 0.3;\n    }\n\n\n    /**\n     * Returns the 4D coordinates for the given tile coordinates\n     *\n     * @param {Number} x    tile x-coordinate\n     * @param {Number} y    tile y-coordinate\n     * @return {{nw: number, nx: number, ny: number, nz: number}} 4D coordinates of 2 circles in 4D space\n     */\n    heightCoords(x, y)\n    {\n\n        const s = x * this.factor;\n        const t = y * this.factor;\n\n        const nx = Math.cos(s * TAU);\n        const ny = Math.cos(t * TAU);\n        const nz = Math.sin(s * TAU);\n        const nw = Math.sin(t * TAU);\n\n        return {\n            nx,\n            ny,\n            nz,\n            nw\n        };\n    }\n\n    render(ctx)\n    {\n        const { size } = this;\n\n        const imageData = ctx.createImageData(size, size);\n\n        const data = imageData.data;\n\n        let tileOffset = 0;\n        let dataOffset = 0;\n        for (let y = 0; y < size; y++)\n        {\n            for (let x = 0; x < size; x++)\n            {\n                const tile = this.tiles[tileOffset++];\n\n                switch (tile)\n                {\n                    case RIVER:\n                    case RIVER2:\n                    case RIVER3:\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WATER:\n                    case WATER2:\n                    case WATER3:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 32;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 255;\n                        break;\n                    case SAND:\n                    case SAND2:\n                    case SAND3:\n                        data[dataOffset++] = 192;\n                        data[dataOffset++] = 160;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case GRASS:\n                    case GRASS2:\n                    case GRASS3:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 128;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WOODS:\n                    case WOODS2:\n                    case WOODS3:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 108;\n                        data[dataOffset++] = 16;\n                        data[dataOffset++] = 255;\n                        break;\n                    case WOODS4:\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 32;\n                        data[dataOffset++] = 255;\n                        break;\n                    case DIRT:\n                    case DIRT2:\n                    case DIRT3:\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 64;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        break;\n                    case ROCK:\n                    case ROCK2:\n                    case ROCK3:\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 100;\n                        data[dataOffset++] = 255;\n                        break;\n                    case MARKER:\n                    case MARKER2:\n                    case MARKER3:\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 0;\n                        data[dataOffset++] = 255;\n                        data[dataOffset++] = 255;\n                        break;\n                }\n            }\n        }\n\n        return imageData;\n\n    }\n\n    noise4D(x,y,z,w)\n    {\n        return this.noise.noise4D(x,y,z,w);\n\n    }\n\n    static generate(size, seed = new Date().getTime()) {\n\n        const start = now();\n        const map = createBase(size, seed);\n        const afterBase = now();\n        drawRivers(map);\n        const end = now();\n        console.log(`Base in ${afterBase - start}ms`)\n        console.log(`Rivers in ${end - start}ms`)\n\n        console.log({ thingStats : map.things.reduce((a,b) =>(a[b] = a[b] === undefined ? 1: a[b] + 1,a), [])});\n\n        return map;\n    };\n\n}\n","// noinspection ES6UnusedImports\nimport \"./pixi-tilemap\"\n\nimport now from \"performance-now\"\n\nimport WorldMap, {\n    isVariant,\n    pickVariant,\n    WATER,\n    WATER2,\n    WATER3,\n    SAND,\n    SAND2,\n    SAND3,\n    GRASS,\n    GRASS2,\n    GRASS3,\n    DIRT,\n    DIRT2,\n    DIRT3,\n    ROCK,\n    ROCK2,\n    ROCK3,\n    WOODS,\n    WOODS2,\n    WOODS3,\n    WOODS4,\n    WOODS5,\n    WOODS6,\n    RIVER,\n    RIVER2,\n    RIVER3,\n    MARKER,\n    MARKER2,\n    MARKER3\n} from \"./WorldMap\";\n\n\nwindow.onload = () => {\n\n    const loading = document.querySelector(\"div.loading\");\n    loading.parentNode.removeChild(loading);\n\n    const size = 2048;\n\n    const canvasElement = document.createElement(\"canvas\");\n    canvasElement.width = size;\n    canvasElement.height = size;\n\n    document.getElementById(\"root\").appendChild(canvasElement);\n\n    const ctx = canvasElement.getContext(\"2d\");\n\n\n    const map = WorldMap.generate(size, \"floppy-disk\");\n    const imageData = map.render(ctx);\n    ctx.putImageData(imageData, 0, 0);\n\n    canvasElement.addEventListener(\"click\", ev => {\n\n        console.log(`Click at ${ev.clientX}, ${ev.clientY}`);\n\n    }, true);\n\n    console.log(\"ready\");\n};\n","var pixi_tilemap;\n(function (pixi_tilemap) {\n    var CanvasTileRenderer = (function () {\n        function CanvasTileRenderer(renderer) {\n            this.tileAnim = [0, 0];\n            this.dontUseTransform = false;\n            this.renderer = renderer;\n            this.tileAnim = [0, 0];\n        }\n        return CanvasTileRenderer;\n    }());\n    pixi_tilemap.CanvasTileRenderer = CanvasTileRenderer;\n    var cr = PIXI.CanvasRenderer;\n    if (cr) {\n        cr.registerPlugin('tilemap', CanvasTileRenderer);\n    }\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var CompositeRectTileLayer = (function (_super) {\n        __extends(CompositeRectTileLayer, _super);\n        function CompositeRectTileLayer(zIndex, bitmaps, texPerChild) {\n            var _this = _super.call(this) || this;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.initialize.apply(_this, arguments);\n            return _this;\n        }\n        CompositeRectTileLayer.prototype.updateTransform = function () {\n            this.displayObjectUpdateTransform();\n        };\n        CompositeRectTileLayer.prototype.initialize = function (zIndex, bitmaps, texPerChild) {\n            if (texPerChild === true) {\n                texPerChild = 0;\n            }\n            this.z = this.zIndex = zIndex;\n            this.texPerChild = texPerChild || pixi_tilemap.Constant.boundCountPerBuffer * pixi_tilemap.Constant.maxTextures;\n            if (bitmaps) {\n                this.setBitmaps(bitmaps);\n            }\n        };\n        CompositeRectTileLayer.prototype.setBitmaps = function (bitmaps) {\n            var texPerChild = this.texPerChild;\n            var len1 = this.children.length;\n            var len2 = Math.ceil(bitmaps.length / texPerChild);\n            var i;\n            for (i = 0; i < len1; i++) {\n                this.children[i].textures = bitmaps.slice(i * texPerChild, (i + 1) * texPerChild);\n            }\n            for (i = len1; i < len2; i++) {\n                var layer = new pixi_tilemap.RectTileLayer(this.zIndex, bitmaps.slice(i * texPerChild, (i + 1) * texPerChild));\n                layer.compositeParent = true;\n                layer.offsetX = pixi_tilemap.Constant.boundSize;\n                layer.offsetY = pixi_tilemap.Constant.boundSize;\n                this.addChild(layer);\n            }\n        };\n        CompositeRectTileLayer.prototype.clear = function () {\n            for (var i = 0; i < this.children.length; i++) {\n                this.children[i].clear();\n            }\n            this.modificationMarker = 0;\n        };\n        CompositeRectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight) {\n            var childIndex = textureIndex / this.texPerChild >> 0;\n            var textureId = textureIndex % this.texPerChild;\n            if (this.children[childIndex] && this.children[childIndex].textures) {\n                this.children[childIndex].addRect(textureId, u, v, x, y, tileWidth, tileHeight);\n            }\n        };\n        CompositeRectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var layer = null;\n            var ind = 0;\n            var children = this.children;\n            if (typeof texture_ === \"number\") {\n                var childIndex = texture_ / this.texPerChild >> 0;\n                layer = children[childIndex];\n                if (!layer) {\n                    layer = children[0];\n                    if (!layer) {\n                        return false;\n                    }\n                    ind = 0;\n                }\n                else {\n                    ind = texture_ % this.texPerChild;\n                }\n                texture = layer.textures[ind];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n                    var tex = child.textures;\n                    for (var j = 0; j < tex.length; j++) {\n                        if (tex[j].baseTexture === texture.baseTexture) {\n                            layer = child;\n                            ind = j;\n                            break;\n                        }\n                    }\n                    if (layer) {\n                        break;\n                    }\n                }\n                if (!layer) {\n                    for (var i = 0; i < children.length; i++) {\n                        var child = children[i];\n                        if (child.textures.length < this.texPerChild) {\n                            layer = child;\n                            ind = child.textures.length;\n                            child.textures.push(texture);\n                            break;\n                        }\n                    }\n                    if (!layer) {\n                        layer = new pixi_tilemap.RectTileLayer(this.zIndex, texture);\n                        layer.compositeParent = true;\n                        layer.offsetX = pixi_tilemap.Constant.boundSize;\n                        layer.offsetY = pixi_tilemap.Constant.boundSize;\n                        children.push(layer);\n                        ind = 0;\n                    }\n                }\n            }\n            layer.addRect(ind, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        CompositeRectTileLayer.prototype.renderCanvas = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderCanvasCore(renderer);\n            }\n        };\n        CompositeRectTileLayer.prototype.render = function (renderer) {\n            if (!this.visible || this.worldAlpha <= 0 || !this.renderable) {\n                return;\n            }\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].renderWebGLCore(renderer, plugin);\n            }\n        };\n        CompositeRectTileLayer.prototype.isModified = function (anim) {\n            var layers = this.children;\n            if (this.modificationMarker !== layers.length) {\n                return true;\n            }\n            for (var i = 0; i < layers.length; i++) {\n                if (layers[i].isModified(anim)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        CompositeRectTileLayer.prototype.clearModify = function () {\n            var layers = this.children;\n            this.modificationMarker = layers.length;\n            for (var i = 0; i < layers.length; i++) {\n                layers[i].clearModify();\n            }\n        };\n        return CompositeRectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.CompositeRectTileLayer = CompositeRectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    pixi_tilemap.Constant = {\n        maxTextures: 4,\n        bufferSize: 2048,\n        boundSize: 1024,\n        boundCountPerBuffer: 1,\n        use32bitIndex: false,\n        SCALE_MODE: PIXI.SCALE_MODES.LINEAR,\n        DO_CLEAR: true\n    };\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var GraphicsLayer = (function (_super) {\n        __extends(GraphicsLayer, _super);\n        function GraphicsLayer(zIndex) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = zIndex;\n            return _this;\n        }\n        GraphicsLayer.prototype.renderCanvas = function (renderer) {\n            var wt = null;\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                wt = this.transform.worldTransform;\n                this.transform.worldTransform = PIXI.Matrix.IDENTITY;\n            }\n            renderer.plugins.graphics.render(this);\n            if (renderer.plugins.tilemap.dontUseTransform) {\n                this.transform.worldTransform = wt;\n            }\n            renderer.context.globalAlpha = 1.0;\n        };\n        GraphicsLayer.prototype.isModified = function (anim) {\n            return false;\n        };\n        GraphicsLayer.prototype.clearModify = function () {\n        };\n        return GraphicsLayer;\n    }(PIXI.Graphics));\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var MultiTextureResource = (function (_super) {\n        __extends(MultiTextureResource, _super);\n        function MultiTextureResource(options) {\n            var _this = _super.call(this, options.bufferSize, options.bufferSize) || this;\n            _this.DO_CLEAR = false;\n            _this.boundSize = 0;\n            _this._clearBuffer = null;\n            _this.baseTex = null;\n            _this.boundSprites = [];\n            _this.dirties = [];\n            var bounds = _this.boundSprites;\n            var dirties = _this.dirties;\n            _this.boundSize = options.boundSize;\n            for (var j = 0; j < options.boundCountPerBuffer; j++) {\n                var spr = new PIXI.Sprite();\n                spr.position.x = options.boundSize * (j & 1);\n                spr.position.y = options.boundSize * (j >> 1);\n                bounds.push(spr);\n                dirties.push(0);\n            }\n            _this.DO_CLEAR = !!options.DO_CLEAR;\n            return _this;\n        }\n        MultiTextureResource.prototype.bind = function (baseTexture) {\n            if (this.baseTex) {\n                throw new Error('Only one baseTexture is allowed for this resource!');\n            }\n            this.baseTex = baseTexture;\n            _super.prototype.bind.call(this, baseTexture);\n        };\n        MultiTextureResource.prototype.setTexture = function (ind, texture) {\n            var spr = this.boundSprites[ind];\n            if (spr.texture.baseTexture === texture.baseTexture) {\n                return;\n            }\n            spr.texture = texture;\n            this.baseTex.update();\n            this.dirties[ind] = this.baseTex.dirtyId;\n        };\n        MultiTextureResource.prototype.upload = function (renderer, texture, glTexture) {\n            var gl = renderer.gl;\n            var _a = this, width = _a.width, height = _a.height;\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n            if (glTexture.dirtyId < 0) {\n                glTexture.width = width;\n                glTexture.height = height;\n                gl.texImage2D(texture.target, 0, texture.format, width, height, 0, texture.format, texture.type, null);\n            }\n            var doClear = this.DO_CLEAR;\n            if (doClear && !this._clearBuffer) {\n                this._clearBuffer = new Uint8Array(pixi_tilemap.Constant.boundSize * pixi_tilemap.Constant.boundSize * 4);\n            }\n            var bounds = this.boundSprites;\n            for (var i = 0; i < bounds.length; i++) {\n                var spr = bounds[i];\n                var tex = spr.texture.baseTexture;\n                if (glTexture.dirtyId >= this.dirties[i]) {\n                    continue;\n                }\n                var res = tex.resource;\n                if (!tex.valid || !res || !res.source) {\n                    continue;\n                }\n                if (doClear && (tex.width < this.boundSize || tex.height < this.boundSize)) {\n                    gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, this.boundSize, this.boundSize, texture.format, texture.type, this._clearBuffer);\n                }\n                gl.texSubImage2D(texture.target, 0, spr.position.x, spr.position.y, texture.format, texture.type, res.source);\n            }\n            return true;\n        };\n        return MultiTextureResource;\n    }(PIXI.resources.Resource));\n    pixi_tilemap.MultiTextureResource = MultiTextureResource;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var RectTileLayer = (function (_super) {\n        __extends(RectTileLayer, _super);\n        function RectTileLayer(zIndex, texture) {\n            var _this = _super.call(this) || this;\n            _this.zIndex = 0;\n            _this.modificationMarker = 0;\n            _this.shadowColor = new Float32Array([0.0, 0.0, 0.0, 0.5]);\n            _this._globalMat = null;\n            _this.pointsBuf = [];\n            _this.hasAnim = false;\n            _this.offsetX = 0;\n            _this.offsetY = 0;\n            _this.compositeParent = false;\n            _this.vbId = 0;\n            _this.vb = null;\n            _this.vbBuffer = null;\n            _this.vbArray = null;\n            _this.vbInts = null;\n            _this.initialize(zIndex, texture);\n            return _this;\n        }\n        RectTileLayer.prototype.initialize = function (zIndex, textures) {\n            if (!textures) {\n                textures = [];\n            }\n            else if (!(textures instanceof Array) && textures.baseTexture) {\n                textures = [textures];\n            }\n            this.textures = textures;\n            this.zIndex = zIndex;\n        };\n        RectTileLayer.prototype.clear = function () {\n            this.pointsBuf.length = 0;\n            this.modificationMarker = 0;\n            this.hasAnim = false;\n        };\n        RectTileLayer.prototype.addFrame = function (texture_, x, y, animX, animY) {\n            var texture;\n            var textureIndex = 0;\n            if (typeof texture_ === \"number\") {\n                textureIndex = texture_;\n                texture = this.textures[textureIndex];\n            }\n            else {\n                if (typeof texture_ === \"string\") {\n                    texture = PIXI.Texture.from(texture_);\n                }\n                else {\n                    texture = texture_;\n                }\n                var found = false;\n                var textureList = this.textures;\n                for (var i = 0; i < textureList.length; i++) {\n                    if (textureList[i].baseTexture === texture.baseTexture) {\n                        textureIndex = i;\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    return false;\n                }\n            }\n            this.addRect(textureIndex, texture.frame.x, texture.frame.y, x, y, texture.frame.width, texture.frame.height, animX, animY);\n            return true;\n        };\n        RectTileLayer.prototype.addRect = function (textureIndex, u, v, x, y, tileWidth, tileHeight, animX, animY) {\n            if (animX === void 0) { animX = 0; }\n            if (animY === void 0) { animY = 0; }\n            var pb = this.pointsBuf;\n            this.hasAnim = this.hasAnim || animX > 0 || animY > 0;\n            if (tileWidth === tileHeight) {\n                pb.push(u);\n                pb.push(v);\n                pb.push(x);\n                pb.push(y);\n                pb.push(tileWidth);\n                pb.push(tileHeight);\n                pb.push(animX | 0);\n                pb.push(animY | 0);\n                pb.push(textureIndex);\n            }\n            else {\n                var i = void 0;\n                if (tileWidth % tileHeight === 0) {\n                    for (i = 0; i < tileWidth / tileHeight; i++) {\n                        pb.push(u + i * tileHeight);\n                        pb.push(v);\n                        pb.push(x + i * tileHeight);\n                        pb.push(y);\n                        pb.push(tileHeight);\n                        pb.push(tileHeight);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else if (tileHeight % tileWidth === 0) {\n                    for (i = 0; i < tileHeight / tileWidth; i++) {\n                        pb.push(u);\n                        pb.push(v + i * tileWidth);\n                        pb.push(x);\n                        pb.push(y + i * tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(tileWidth);\n                        pb.push(animX | 0);\n                        pb.push(animY | 0);\n                        pb.push(textureIndex);\n                    }\n                }\n                else {\n                    pb.push(u);\n                    pb.push(v);\n                    pb.push(x);\n                    pb.push(y);\n                    pb.push(tileWidth);\n                    pb.push(tileHeight);\n                    pb.push(animX | 0);\n                    pb.push(animY | 0);\n                    pb.push(textureIndex);\n                }\n            }\n        };\n        RectTileLayer.prototype.renderCanvas = function (renderer) {\n            var plugin = renderer.plugins.tilemap;\n            if (!plugin.dontUseTransform) {\n                var wt = this.worldTransform;\n                renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            }\n            this.renderCanvasCore(renderer);\n        };\n        RectTileLayer.prototype.renderCanvasCore = function (renderer) {\n            if (this.textures.length === 0)\n                return;\n            var points = this.pointsBuf;\n            renderer.context.fillStyle = '#000000';\n            for (var i = 0, n = points.length; i < n; i += 9) {\n                var x1 = points[i], y1 = points[i + 1];\n                var x2 = points[i + 2], y2 = points[i + 3];\n                var w = points[i + 4];\n                var h = points[i + 5];\n                x1 += points[i + 6] * renderer.plugins.tilemap.tileAnim[0];\n                y1 += points[i + 7] * renderer.plugins.tilemap.tileAnim[1];\n                var textureIndex = points[i + 8];\n                if (textureIndex >= 0) {\n                    renderer.context.drawImage(this.textures[textureIndex].baseTexture.source, x1, y1, w, h, x2, y2, w, h);\n                }\n                else {\n                    renderer.context.globalAlpha = 0.5;\n                    renderer.context.fillRect(x2, y2, w, h);\n                    renderer.context.globalAlpha = 1;\n                }\n            }\n        };\n        RectTileLayer.prototype.destroyVb = function () {\n            if (this.vb) {\n                this.vb.destroy();\n                this.vb = null;\n            }\n        };\n        RectTileLayer.prototype.render = function (renderer) {\n            var plugin = renderer.plugins['tilemap'];\n            var shader = plugin.getShader();\n            renderer.batch.setObjectRenderer(plugin);\n            this._globalMat = shader.uniforms.projTransMatrix;\n            renderer.globalUniforms.uniforms.projectionMatrix.copyTo(this._globalMat).append(this.worldTransform);\n            shader.uniforms.shadowColor = this.shadowColor;\n            shader.uniforms.animationFrame = plugin.tileAnim;\n            renderer.shader.bind(shader, false);\n            this.renderWebGLCore(renderer, plugin);\n        };\n        RectTileLayer.prototype.renderWebGLCore = function (renderer, plugin) {\n            var points = this.pointsBuf;\n            if (points.length === 0)\n                return;\n            var rectsCount = points.length / 9;\n            var shader = plugin.getShader();\n            var textures = this.textures;\n            if (textures.length === 0)\n                return;\n            plugin.bindTextures(renderer, shader, textures);\n            var vb = this.vb;\n            if (!vb) {\n                vb = plugin.createVb();\n                this.vb = vb;\n                this.vbId = vb.id;\n                this.vbBuffer = null;\n                this.modificationMarker = 0;\n            }\n            plugin.checkIndexBuffer(rectsCount, vb);\n            var boundCountPerBuffer = pixi_tilemap.Constant.boundCountPerBuffer;\n            var vertexBuf = vb.getBuffer('aVertexPosition');\n            var vertices = rectsCount * vb.vertPerQuad;\n            if (vertices === 0)\n                return;\n            if (this.modificationMarker !== vertices) {\n                this.modificationMarker = vertices;\n                var vs = vb.stride * vertices;\n                if (!this.vbBuffer || this.vbBuffer.byteLength < vs) {\n                    var bk = vb.stride;\n                    while (bk < vs) {\n                        bk *= 2;\n                    }\n                    this.vbBuffer = new ArrayBuffer(bk);\n                    this.vbArray = new Float32Array(this.vbBuffer);\n                    this.vbInts = new Uint32Array(this.vbBuffer);\n                    vertexBuf.update(this.vbBuffer);\n                }\n                var arr = this.vbArray, ints = this.vbInts;\n                var sz = 0;\n                var textureId = 0;\n                var shiftU = this.offsetX;\n                var shiftV = this.offsetY;\n                var tint = -1;\n                for (var i = 0; i < points.length; i += 9) {\n                    var eps = 0.5;\n                    if (this.compositeParent) {\n                        if (boundCountPerBuffer > 1) {\n                            textureId = (points[i + 8] >> 2);\n                            shiftU = this.offsetX * (points[i + 8] & 1);\n                            shiftV = this.offsetY * ((points[i + 8] >> 1) & 1);\n                        }\n                        else {\n                            textureId = points[i + 8];\n                            shiftU = 0;\n                            shiftV = 0;\n                        }\n                    }\n                    var x = points[i + 2], y = points[i + 3];\n                    var w = points[i + 4], h = points[i + 5];\n                    var u = points[i] + shiftU, v = points[i + 1] + shiftV;\n                    var animX = points[i + 6], animY = points[i + 7];\n                    arr[sz++] = x;\n                    arr[sz++] = y;\n                    arr[sz++] = u;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x + w;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u + w;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                    arr[sz++] = x;\n                    arr[sz++] = y + h;\n                    arr[sz++] = u;\n                    arr[sz++] = v + h;\n                    arr[sz++] = u + eps;\n                    arr[sz++] = v + eps;\n                    arr[sz++] = u + w - eps;\n                    arr[sz++] = v + h - eps;\n                    arr[sz++] = animX;\n                    arr[sz++] = animY;\n                    arr[sz++] = textureId;\n                }\n                vertexBuf.update(arr);\n            }\n            renderer.geometry.bind(vb, shader);\n            renderer.geometry.draw(PIXI.DRAW_MODES.TRIANGLES, rectsCount * 6, 0);\n        };\n        RectTileLayer.prototype.isModified = function (anim) {\n            if (this.modificationMarker !== this.pointsBuf.length ||\n                anim && this.hasAnim) {\n                return true;\n            }\n            return false;\n        };\n        RectTileLayer.prototype.clearModify = function () {\n            this.modificationMarker = this.pointsBuf.length;\n        };\n        RectTileLayer.prototype.destroy = function (options) {\n            _super.prototype.destroy.call(this, options);\n            this.destroyVb();\n        };\n        return RectTileLayer;\n    }(PIXI.Container));\n    pixi_tilemap.RectTileLayer = RectTileLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var rectShaderFrag = \"\\nvarying vec2 vTextureCoord;\\nvarying vec4 vFrame;\\nvarying float vTextureId;\\nuniform vec4 shadowColor;\\nuniform sampler2D uSamplers[%count%];\\nuniform vec2 uSamplerSize[%count%];\\n\\nvoid main(void){\\n   vec2 textureCoord = clamp(vTextureCoord, vFrame.xy, vFrame.zw);\\n   float textureId = floor(vTextureId + 0.5);\\n\\n   vec4 color;\\n   %forloop%\\n   gl_FragColor = color;\\n}\\n\";\n    var rectShaderVert = \"\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\nattribute vec4 aFrame;\\nattribute vec2 aAnim;\\nattribute float aTextureId;\\n\\nuniform mat3 projTransMatrix;\\nuniform vec2 animationFrame;\\n\\nvarying vec2 vTextureCoord;\\nvarying float vTextureId;\\nvarying vec4 vFrame;\\n\\nvoid main(void){\\n   gl_Position = vec4((projTransMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n   vec2 anim = aAnim * animationFrame;\\n   vTextureCoord = aTextureCoord + anim;\\n   vFrame = aFrame + vec4(anim, anim);\\n   vTextureId = aTextureId;\\n}\\n\";\n    var TilemapShader = (function (_super) {\n        __extends(TilemapShader, _super);\n        function TilemapShader(maxTextures, shaderVert, shaderFrag) {\n            var _this = _super.call(this, new PIXI.Program(shaderVert, shaderFrag), {\n                animationFrame: new Float32Array(2),\n                uSamplers: [],\n                uSamplerSize: [],\n                projTransMatrix: new PIXI.Matrix()\n            }) || this;\n            _this.maxTextures = 0;\n            _this.maxTextures = maxTextures;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return TilemapShader;\n    }(PIXI.Shader));\n    pixi_tilemap.TilemapShader = TilemapShader;\n    var RectTileShader = (function (_super) {\n        __extends(RectTileShader, _super);\n        function RectTileShader(maxTextures) {\n            var _this = _super.call(this, maxTextures, rectShaderVert, pixi_tilemap.shaderGenerator.generateFragmentSrc(maxTextures, rectShaderFrag)) || this;\n            pixi_tilemap.shaderGenerator.fillSamplers(_this, _this.maxTextures);\n            return _this;\n        }\n        return RectTileShader;\n    }(TilemapShader));\n    pixi_tilemap.RectTileShader = RectTileShader;\n    var RectTileGeom = (function (_super) {\n        __extends(RectTileGeom, _super);\n        function RectTileGeom() {\n            var _this = _super.call(this) || this;\n            _this.vertSize = 11;\n            _this.vertPerQuad = 4;\n            _this.stride = _this.vertSize * 4;\n            _this.lastTimeAccess = 0;\n            var buf = _this.buf = new PIXI.Buffer(new Float32Array(2), true, false);\n            _this.addAttribute('aVertexPosition', buf, 0, false, 0, _this.stride, 0)\n                .addAttribute('aTextureCoord', buf, 0, false, 0, _this.stride, 2 * 4)\n                .addAttribute('aFrame', buf, 0, false, 0, _this.stride, 4 * 4)\n                .addAttribute('aAnim', buf, 0, false, 0, _this.stride, 8 * 4)\n                .addAttribute('aTextureId', buf, 0, false, 0, _this.stride, 10 * 4);\n            return _this;\n        }\n        return RectTileGeom;\n    }(PIXI.Geometry));\n    pixi_tilemap.RectTileGeom = RectTileGeom;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var TileRenderer = (function (_super) {\n        __extends(TileRenderer, _super);\n        function TileRenderer(renderer) {\n            var _this = _super.call(this, renderer) || this;\n            _this.sn = -1;\n            _this.indexBuffer = null;\n            _this.ibLen = 0;\n            _this.tileAnim = [0, 0];\n            _this.texLoc = [];\n            _this.texResources = [];\n            _this.rectShader = new pixi_tilemap.RectTileShader(pixi_tilemap.Constant.maxTextures);\n            _this.indexBuffer = new PIXI.Buffer(undefined, true, true);\n            _this.checkIndexBuffer(2000);\n            _this.initBounds();\n            return _this;\n        }\n        TileRenderer.prototype.initBounds = function () {\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                return;\n            }\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            for (var i = 0; i < maxTextures; i++) {\n                var resource = new pixi_tilemap.MultiTextureResource(pixi_tilemap.Constant);\n                var baseTex = new PIXI.BaseTexture(resource);\n                baseTex.scaleMode = pixi_tilemap.Constant.SCALE_MODE;\n                baseTex.wrapMode = PIXI.WRAP_MODES.CLAMP;\n                this.texResources.push(resource);\n            }\n        };\n        TileRenderer.prototype.bindTexturesWithoutRT = function (renderer, shader, textures) {\n            var samplerSize = shader.uniforms.uSamplerSize;\n            this.texLoc.length = 0;\n            for (var i = 0; i < textures.length; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid) {\n                    return;\n                }\n                renderer.texture.bind(textures[i], i);\n                samplerSize[i * 2] = 1.0 / textures[i].baseTexture.width;\n                samplerSize[i * 2 + 1] = 1.0 / textures[i].baseTexture.height;\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        };\n        TileRenderer.prototype.bindTextures = function (renderer, shader, textures) {\n            var len = textures.length;\n            var maxTextures = pixi_tilemap.Constant.maxTextures;\n            if (len > pixi_tilemap.Constant.boundCountPerBuffer * maxTextures) {\n                return;\n            }\n            if (pixi_tilemap.Constant.boundCountPerBuffer <= 1) {\n                this.bindTexturesWithoutRT(renderer, shader, textures);\n                return;\n            }\n            var i = 0;\n            for (; i < len; i++) {\n                var texture = textures[i];\n                if (!texture || !texture.valid)\n                    continue;\n                var multi = this.texResources[i >> 2];\n                multi.setTexture(i & 3, texture);\n            }\n            var gltsUsed = (i + 3) >> 2;\n            for (i = 0; i < gltsUsed; i++) {\n                renderer.texture.bind(this.texResources[i].baseTex, i);\n            }\n        };\n        TileRenderer.prototype.start = function () {\n        };\n        TileRenderer.prototype.createVb = function () {\n            var geom = new pixi_tilemap.RectTileGeom();\n            geom.addIndex(this.indexBuffer);\n            geom.lastTimeAccess = Date.now();\n            return geom;\n        };\n        TileRenderer.prototype.checkIndexBuffer = function (size, vb) {\n            if (vb === void 0) { vb = null; }\n            var totalIndices = size * 6;\n            if (totalIndices <= this.ibLen) {\n                return;\n            }\n            var len = totalIndices;\n            while (len < totalIndices) {\n                len <<= 1;\n            }\n            this.ibLen = totalIndices;\n            this.indexBuffer.update(PIXI.utils.createIndicesForQuads(size, pixi_tilemap.Constant.use32bitIndex));\n        };\n        TileRenderer.prototype.getShader = function () {\n            return this.rectShader;\n        };\n        TileRenderer.prototype.destroy = function () {\n            _super.prototype.destroy.call(this);\n            this.rectShader = null;\n        };\n        return TileRenderer;\n    }(PIXI.ObjectRenderer));\n    pixi_tilemap.TileRenderer = TileRenderer;\n    PIXI.Renderer.registerPlugin('tilemap', TileRenderer);\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var ZLayer = (function (_super) {\n        __extends(ZLayer, _super);\n        function ZLayer(tilemap, zIndex) {\n            var _this = _super.call(this) || this;\n            _this._lastAnimationFrame = -1;\n            _this.tilemap = tilemap;\n            _this.z = zIndex;\n            return _this;\n        }\n        ZLayer.prototype.clear = function () {\n            var layers = this.children;\n            for (var i = 0; i < layers.length; i++)\n                layers[i].clear();\n            this._previousLayers = 0;\n        };\n        ZLayer.prototype.cacheIfDirty = function () {\n            var tilemap = this.tilemap;\n            var layers = this.children;\n            var modified = this._previousLayers !== layers.length;\n            this._previousLayers = layers.length;\n            var buf = this.canvasBuffer;\n            var tempRender = this._tempRender;\n            if (!buf) {\n                buf = this.canvasBuffer = document.createElement('canvas');\n                tempRender = this._tempRender = new PIXI.CanvasRenderer(100, 100, { view: buf });\n                tempRender.context = tempRender.rootContext;\n                tempRender.plugins.tilemap.dontUseTransform = true;\n            }\n            if (buf.width !== tilemap._layerWidth ||\n                buf.height !== tilemap._layerHeight) {\n                buf.width = tilemap._layerWidth;\n                buf.height = tilemap._layerHeight;\n                modified = true;\n            }\n            var i;\n            if (!modified) {\n                for (i = 0; i < layers.length; i++) {\n                    if (layers[i].isModified(this._lastAnimationFrame !== tilemap.animationFrame)) {\n                        modified = true;\n                        break;\n                    }\n                }\n            }\n            this._lastAnimationFrame = tilemap.animationFrame;\n            if (modified) {\n                if (tilemap._hackRenderer) {\n                    tilemap._hackRenderer(tempRender);\n                }\n                tempRender.context.clearRect(0, 0, buf.width, buf.height);\n                for (i = 0; i < layers.length; i++) {\n                    layers[i].clearModify();\n                    layers[i].renderCanvas(tempRender);\n                }\n            }\n            this.layerTransform = this.worldTransform;\n            for (i = 0; i < layers.length; i++) {\n                this.layerTransform = layers[i].worldTransform;\n                break;\n            }\n        };\n        ZLayer.prototype.renderCanvas = function (renderer) {\n            this.cacheIfDirty();\n            var wt = this.layerTransform;\n            renderer.context.setTransform(wt.a, wt.b, wt.c, wt.d, wt.tx * renderer.resolution, wt.ty * renderer.resolution);\n            var tilemap = this.tilemap;\n            renderer.context.drawImage(this.canvasBuffer, 0, 0);\n        };\n        return ZLayer;\n    }(PIXI.Container));\n    pixi_tilemap.ZLayer = ZLayer;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    PIXI.tilemap = pixi_tilemap;\n})(pixi_tilemap || (pixi_tilemap = {}));\nvar pixi_tilemap;\n(function (pixi_tilemap) {\n    var shaderGenerator;\n    (function (shaderGenerator) {\n        function fillSamplers(shader, maxTextures) {\n            var sampleValues = [];\n            for (var i = 0; i < maxTextures; i++) {\n                sampleValues[i] = i;\n            }\n            shader.uniforms.uSamplers = sampleValues;\n            var samplerSize = [];\n            for (var i = 0; i < maxTextures; i++) {\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n                samplerSize.push(1.0 / pixi_tilemap.Constant.bufferSize);\n            }\n            shader.uniforms.uSamplerSize = samplerSize;\n        }\n        shaderGenerator.fillSamplers = fillSamplers;\n        function generateFragmentSrc(maxTextures, fragmentSrc) {\n            return fragmentSrc.replace(/%count%/gi, maxTextures + \"\")\n                .replace(/%forloop%/gi, this.generateSampleSrc(maxTextures));\n        }\n        shaderGenerator.generateFragmentSrc = generateFragmentSrc;\n        function generateSampleSrc(maxTextures) {\n            var src = '';\n            src += '\\n';\n            src += '\\n';\n            src += 'if(vTextureId <= -1.0) {';\n            src += '\\n\\tcolor = shadowColor;';\n            src += '\\n}';\n            for (var i = 0; i < maxTextures; i++) {\n                src += '\\nelse ';\n                if (i < maxTextures - 1) {\n                    src += 'if(textureId == ' + i + '.0)';\n                }\n                src += '\\n{';\n                src += '\\n\\tcolor = texture2D(uSamplers[' + i + '], textureCoord * uSamplerSize[' + i + ']);';\n                src += '\\n}';\n            }\n            src += '\\n';\n            src += '\\n';\n            return src;\n        }\n        shaderGenerator.generateSampleSrc = generateSampleSrc;\n    })(shaderGenerator = pixi_tilemap.shaderGenerator || (pixi_tilemap.shaderGenerator = {}));\n})(pixi_tilemap || (pixi_tilemap = {}));\n"],"sourceRoot":""}