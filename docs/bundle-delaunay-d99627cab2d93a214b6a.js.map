{"version":3,"sources":["webpack://Game/webpack/bootstrap","webpack://Game/./src/Delaunay.js","webpack://Game/./src/index-delaunay.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","EPSILON","circumcircle","vertices","k","xc","yc","m1","m2","mx1","mx2","my1","my2","dx","dy","x1","y1","x2","y2","x3","y3","fabsy1y2","Math","abs","fabsy2y3","Error","x","y","dedup","edges","a","b","Delaunay","triangulate","indices","superTri","open","closed","Array","sort","diff","dmax","xmid","ymid","xmin","Number","POSITIVE_INFINITY","ymin","xmax","NEGATIVE_INFINITY","ymax","max","supertriangle","concat","contains","offsetA","offsetB","offsetC","px","py","uvOut","isNull","u","v","__webpack_exports__","prando__WEBPACK_IMPORTED_MODULE_0__","_Delaunay__WEBPACK_IMPORTED_MODULE_2__","performance_now__WEBPACK_IMPORTED_MODULE_3__","performance_now__WEBPACK_IMPORTED_MODULE_3___default","console","log","onload","loading","document","querySelector","parentNode","removeChild","canvasElement","createElement","width","height","getElementById","appendChild","ctx","getContext","fillStyle","strokeStyle","fillRect","random","Prando","nextInt","start2","now","triangles","beginPath","moveTo","lineTo","closePath","stroke"],"mappings":"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","file":"bundle-delaunay-d99627cab2d93a214b6a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpGame\"] = window[\"webpackJsonpGame\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([35,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// Delaunay code adapted from https://github.com/ironwallaby/delaunay\n\nconst EPSILON = 1.0 / 1048576.0;\n\nfunction supertriangle(vertices)\n{\n    let xmin = Number.POSITIVE_INFINITY,\n        ymin = Number.POSITIVE_INFINITY,\n        xmax = Number.NEGATIVE_INFINITY,\n        ymax = Number.NEGATIVE_INFINITY,\n        i, dx, dy, dmax, xmid, ymid;\n\n    for (i = vertices.length; i--;)\n    {\n        if (vertices[i * 2] < xmin)\n        {\n            xmin = vertices[i * 2];\n        }\n        if (vertices[i * 2] > xmax)\n        {\n            xmax = vertices[i * 2];\n        }\n        if (vertices[i * 2 + 1] < ymin)\n        {\n            ymin = vertices[i * 2 + 1];\n        }\n        if (vertices[i * 2 + 1] > ymax)\n        {\n            ymax = vertices[i * 2 + 1];\n        }\n    }\n\n    dx = xmax - xmin;\n    dy = ymax - ymin;\n    dmax = Math.max(dx, dy);\n    xmid = xmin + dx * 0.5;\n    ymid = ymin + dy * 0.5;\n\n    return [\n        xmid - 20 * dmax, ymid - dmax,\n        xmid, ymid + 20 * dmax,\n        xmid + 20 * dmax, ymid - dmax\n    ];\n}\n\n\nfunction circumcircle(vertices, i, j, k)\n{\n    const x1 = vertices[i * 2],\n        y1 = vertices[i * 2 + 1],\n        x2 = vertices[j * 2],\n        y2 = vertices[j * 2 + 1],\n        x3 = vertices[k * 2],\n        y3 = vertices[k * 2 + 1],\n        fabsy1y2 = Math.abs(y1 - y2),\n        fabsy2y3 = Math.abs(y2 - y3);\n    let xc, yc, m1, m2, mx1, mx2, my1, my2, dx, dy;\n\n    /* Check for coincident points */\n    if (fabsy1y2 < EPSILON && fabsy2y3 < EPSILON)\n    {\n        throw new Error(\"Eek! Coincident points!\");\n    }\n\n    if (fabsy1y2 < EPSILON)\n    {\n        m2 = -((x3 - x2) / (y3 - y2));\n        mx2 = (x2 + x3) / 2.0;\n        my2 = (y2 + y3) / 2.0;\n        xc = (x2 + x1) / 2.0;\n        yc = m2 * (xc - mx2) + my2;\n    }\n\n    else if (fabsy2y3 < EPSILON)\n    {\n        m1 = -((x2 - x1) / (y2 - y1));\n        mx1 = (x1 + x2) / 2.0;\n        my1 = (y1 + y2) / 2.0;\n        xc = (x3 + x2) / 2.0;\n        yc = m1 * (xc - mx1) + my1;\n    }\n\n    else\n    {\n        m1 = -((x2 - x1) / (y2 - y1));\n        m2 = -((x3 - x2) / (y3 - y2));\n        mx1 = (x1 + x2) / 2.0;\n        mx2 = (x2 + x3) / 2.0;\n        my1 = (y1 + y2) / 2.0;\n        my2 = (y2 + y3) / 2.0;\n        xc = (m1 * mx1 - m2 * mx2 + my2 - my1) / (m1 - m2);\n        yc = (fabsy1y2 > fabsy2y3) ?\n            m1 * (xc - mx1) + my1 :\n            m2 * (xc - mx2) + my2;\n    }\n\n    dx = x2 - xc;\n    dy = y2 - yc;\n    return {i: i, j: j, k: k, x: xc, y: yc, r: dx * dx + dy * dy};\n}\n\n\nfunction dedup(edges)\n{\n    let i, j, a, b, m, n;\n\n    for (j = edges.length; j;)\n    {\n        b = edges[--j];\n        a = edges[--j];\n\n        for (i = j; i;)\n        {\n            n = edges[--i];\n            m = edges[--i];\n\n            if ((a === m && b === n) || (a === n && b === m))\n            {\n                edges.splice(j, 2);\n                edges.splice(i, 2);\n                break;\n            }\n        }\n    }\n}\n\n\nconst Delaunay = {\n    triangulate: function (vertices) {\n        const n = vertices.length / 2;\n        let i, j, indices, superTri, open, closed, edges, dx, dy, a, b, c;\n\n        /* Bail if there aren't enough vertices to form any triangles. */\n        if (n < 3)\n        {\n            return [];\n        }\n\n        /* Slice out the actual vertices from the passed objects. (Duplicate the\n         * array even if we don't, though, since we need to make a supertriangle\n         * later on!) */\n        vertices = vertices.slice(0);\n\n        /* Make an array of indices into the vertex array, sorted by the\n         * vertices' x-position. Force stable sorting by comparing indices if\n         * the x-positions are equal. */\n        indices = new Array(n);\n\n        for (i = n; i--;)\n        {\n            indices[i] = i;\n        }\n\n        indices.sort(function (i, j) {\n            const diff = vertices[j * 2] - vertices[i * 2];\n            return diff !== 0 ? diff : i - j;\n        });\n\n        /* Next, find the vertices of the supertriangle (which contains all other\n         * triangles), and append them onto the end of a (copy of) the vertex\n         * array. */\n        superTri = supertriangle(vertices);\n        vertices = vertices.concat(superTri);\n\n        /* Initialize the open list (containing the supertriangle and nothing\n         * else) and the closed list (which is empty since we havn't processed\n         * any triangles yet). */\n        open = [circumcircle(vertices, n + 0, n + 1, n + 2)];\n        closed = [];\n        edges = [];\n\n        /* Incrementally add each vertex to the mesh. */\n        for (i = indices.length; i--; edges.length = 0)\n        {\n            c = indices[i];\n\n            /* For each open triangle, check to see if the current point is\n             * inside it's circumcircle. If it is, remove the triangle and add\n             * it's edges to an edge list. */\n            for (j = open.length; j--;)\n            {\n                /* If this point is to the right of this triangle's circumcircle,\n                 * then this triangle should never get checked again. Remove it\n                 * from the open list, add it to the closed list, and skip. */\n                dx = vertices[c * 2] - open[j].x;\n                if (dx > 0.0 && dx * dx > open[j].r)\n                {\n                    closed.push(open[j]);\n                    open.splice(j, 1);\n                    continue;\n                }\n\n                /* If we're outside the circumcircle, skip this triangle. */\n                dy = vertices[c * 2 + 1] - open[j].y;\n                if (dx * dx + dy * dy - open[j].r > EPSILON)\n                {\n                    continue;\n                }\n\n                /* Remove the triangle and add it's edges to the edge list. */\n                edges.push(\n                    open[j].i, open[j].j,\n                    open[j].j, open[j].k,\n                    open[j].k, open[j].i\n                );\n                open.splice(j, 1);\n            }\n\n            /* Remove any doubled edges. */\n            dedup(edges);\n\n            /* Add a new triangle for each edge. */\n            for (j = edges.length; j;)\n            {\n                b = edges[--j];\n                a = edges[--j];\n                open.push(circumcircle(vertices, a, b, c));\n            }\n        }\n\n        /* Copy any remaining open triangles to the closed list, and then\n         * remove any triangles that share a vertex with the supertriangle,\n         * building a list of triplets that represent triangles. */\n        for (i = open.length; i--;)\n        {\n            closed.push(open[i]);\n        }\n        open.length = 0;\n\n        for (i = closed.length; i--;)\n        {\n            if (closed[i].i < n && closed[i].j < n && closed[i].k < n)\n            {\n                open.push(closed[i].i, closed[i].j, closed[i].k);\n            }\n        }\n\n        // we double all offsets so that they match our linear input buffer. Positions returned are 0,2,4,... sparing\n        // the consumer of doing the multiplication\n        for (let k = 0; k < open.length; k++)\n        {\n            open[k] *= 2;\n        }\n\n        /* Yay, we're done! */\n        return open;\n    },\n\n    contains: function (vertices, offsetA, offsetB, offsetC, px, py, uvOut) {\n        /* Bounding box test first, for quick rejections. */\n        if ((px < vertices[offsetA] && px < vertices[offsetB] && px < vertices[offsetC]) ||\n            (px > vertices[offsetA] && px > vertices[offsetB] && px > vertices[offsetC]) ||\n            (py < vertices[offsetA + 1] && py < vertices[offsetB + 1] && py < vertices[offsetC + 1]) ||\n            (py > vertices[offsetA + 1] && py > vertices[offsetB + 1] && py > vertices[offsetC + 1]))\n        {\n            uvOut.isNull = true;\n        }\n        else\n        {\n\n            const a = vertices[offsetB] - vertices[offsetA],\n                b = vertices[offsetC] - vertices[offsetA],\n                c = vertices[offsetB + 1] - vertices[offsetA + 1],\n                d = vertices[offsetC + 1] - vertices[offsetA + 1],\n                i = a * d - b * c;\n\n            /* Degenerate tri. */\n            if (i === 0.0)\n            {\n                return null;\n            }\n\n            const u = (d * (px - vertices[offsetA]) - b * (py - vertices[offsetA + 1])) / i,\n                v = (a * (py - vertices[offsetA + 1]) - c * (px - vertices[offsetA])) / i;\n\n            /* If we're outside the tri, fail. */\n            if (u < 0.0 || v < 0.0 || (u + v) > 1.0)\n            {\n                uvOut.isNull = true;\n            }\n            else\n            {\n                uvOut.u = u;\n                uvOut.v = v;\n                uvOut.isNull = false;\n            }\n        }\n    }\n};\n\nexport default Delaunay\n","import Prando from \"prando\"\nimport Delaunator from \"delaunator\"\nimport Delaunay from \"./Delaunay\"\nimport now from \"performance-now\"\n\nconsole.log(\"delaunay\")\n\nwindow.onload = () => {\n\n    const loading = document.querySelector(\"div.loading\");\n    loading.parentNode.removeChild(loading);\n\n    const size = 800;\n\n    const canvasElement = document.createElement(\"canvas\");\n    canvasElement.width = size;\n    canvasElement.height = size;\n\n    document.getElementById(\"root\").appendChild(canvasElement);\n\n    const ctx = canvasElement.getContext(\"2d\");\n    ctx.fillStyle = \"#222\";\n    ctx.strokeStyle = \"#e8f0f8\";\n    ctx.fillRect(0,0,size,size);\n    ctx.fillStyle = \"#f44\";\n\n    const random = new Prando(\"happy-koala\");\n\n\n    const vertices = new Array(400 * 2);\n    for (let i=0; i < 800; i += 2)\n    {\n        const x = random.nextInt(0, size);\n        const y = random.nextInt(0, size);\n\n        vertices[i] = x;\n        vertices[i + 1] = y;\n    }\n\n    // const start = now();\n    // // const result = Delaunator.from(vertices);\n    // // console.log(\"Delaunator in \" + (now() - start) + \"ms\");\n    //\n\n    const start2 = now();\n    const triangles = Delaunay.triangulate(vertices);\n    console.log(\"./Delaunay in \" + (now() - start2) + \"ms\");\n    console.log(triangles);\n\n    for (let i = 0; i < triangles.length; i+=3)\n    {\n        const offsetA = triangles[i];\n        const offsetB = triangles[i+1];\n        const offsetC = triangles[i+2];\n\n        ctx.beginPath();\n        ctx.moveTo(vertices[offsetA],vertices[offsetA + 1]);\n        ctx.lineTo(vertices[offsetB],vertices[offsetB + 1]);\n        ctx.lineTo(vertices[offsetC],vertices[offsetC + 1]);\n        ctx.closePath();\n        ctx.stroke();\n\n    }\n\n\n    for (let i=0; i < 400; i += 2)\n    {\n\n        ctx.fillRect(vertices[i],vertices[i + 1],1,1);\n    }\n\n}\n"],"sourceRoot":""}